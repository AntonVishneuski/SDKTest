#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class NSURLSessionConfiguration, ScmSdkScmAuthInteractor, ScmSdkScmAuthorizedUserInteractor, ScmSdkScmCategoriesInteractor, ScmSdkScmCreateWorkOrderInteractor, ScmSdkScmInvoicesInfoIntercator, ScmSdkScmInvoiceFiltersInteractor, ScmSdkScmInvoicesInteractor, ScmSdkScmInvoicesSearchIntercator, ScmSdkScmInvoicesUpdateIntercator, ScmSdkScmLocationsInteractor, ScmSdkScmMigrationInteractor, ScmSdkScmNotificationsInteractor, ScmSdkScmNotificationsUnsubscribePush, ScmSdkScmProposalInteractor, ScmSdkScmReviewInteractor, ScmSdkScmSiteAuditInteractor, ScmSdkScmTokenInteractor, ScmSdkScmToolsInteractor, ScmSdkScmUnauthorizedUserInteractor, ScmSdkScmUserAccessInteractor, ScmSdkScmWorkOrderInteractor, ScmSdkProfileSettingsLocal, ScmSdkProfileSettingsImplCompanion, ScmSdkCheckItemsSourceDataCompletedAudit, ScmSdkCheckItemsSourceDataNewCheckItem, ScmSdkCheckItemsSourceDataOpenAudit, ScmSdkDashboardDataLocalCompanion, ScmSdkDashboardDataLocal, ScmSdkProfileSettingsLocalCompanion, ScmSdkStoreLocationNoteDataLocal, ScmSdkStoreLocationNoteDataLocalCompanion, ScmSdkUpdateCompletedAuditRemoteCompanion, ScmSdkUpdateCompletedAuditRemote, ScmSdkReviewsRemoteCompanion, ScmSdkReviewsRemote, ScmSdkCheckAuditInfoRemoteCompanion, ScmSdkCheckAuditInfoRemote, ScmSdkProviderRemoteReviewsInfo, ScmSdkProviderRemoteCompanion, ScmSdkProviderRemote, ScmSdkProviderRemoteReviewsInfoCompanion, ScmSdkNoteSettingsRemoteCompanion, ScmSdkNoteSettingsRemote, ScmSdkCurrencyAlphabeticCodeRemoteCompanion, ScmSdkCurrencyAlphabeticCodeRemote, ScmSdkFeedbacksRemoteFeedback, ScmSdkFeedbacksRemoteCompanion, ScmSdkFeedbacksRemote, ScmSdkFeedbacksRemoteFeedbackCompanion, ScmSdkWorkOrdersBudgetsRemoteParamsCompanion, ScmSdkWorkOrdersBudgetsRemoteParams, ScmSdkInvoicesRemoteParamsSortBy, ScmSdkInvoicesRemoteParamsFilter, ScmSdkInvoicesRemoteParamsCompanion, ScmSdkInvoicesRemoteParams, ScmSdkInvoicesRemoteParamsFilterCompanion, ScmSdkInvoicesRemoteParamsSortByCompanion, ScmSdkKotlinThrowable, ScmSdkRefreshTokenStatusError, ScmSdkRefreshTokenStatusRepeat, ScmSdkRefreshTokenStatusUnauthorized, ScmSdkScmHttpHeaders, ScmSdkEndpointsForUpdateApp, ScmSdkProviderData, ScmSdkFeedbackData, ScmSdkAuditData, ScmSdkPostNewAuditData, ScmSdkCreateWorkOrderData, ScmSdkLastLoginsData, ScmSdkReviewsData, ScmSdkWorkOrdersBudgetDataBudgetData, ScmSdkWorkOrdersBudgetData, ScmSdkNoteSettingsData, ScmSdkProviderDataReviewsInfo, ScmSdkKotlinEnumCompanion, ScmSdkKotlinEnum<E>, ScmSdkAuditAttachmentSource, ScmSdkKotlinArray<T>, ScmSdkSiteAuditToolsProviderCompanion, ScmSdkFeedback, ScmSdkInvoicesState, ScmSdkWorkOrderLocation, ScmSdkApprovalCodeType, ScmSdkApprovalCodesApprovalCode, ScmSdkApprovalCodes, ScmSdkApprovalCodesOption, ScmSdkNoteEmail, ScmSdkScResultCompanion, ScmSdkScResult<__covariant T>, ScmSdkSdkException, ScmSdkFeatureException, ScmSdkAuthException, ScmSdkAuthExceptionAuthNotSuccessfulException, ScmSdkAuthExceptionSsoExceptionClientRegisteredException, ScmSdkAuthExceptionSsoExceptionEmptySsoIdentifierException, ScmSdkAuthExceptionSsoExceptionInvalidClientIdentifierException, ScmSdkAuthExceptionSsoExceptionSsoAccessCodeNotFoundOrExpiredException, ScmSdkAuthExceptionUniversalUserException, ScmSdkAuthExceptionUniversalUserExceptionAccountDisabled, ScmSdkAuthExceptionUserIdExceptionAccountLocked, ScmSdkAuthExceptionUserIdExceptionInvalidCredentials, ScmSdkAuthExceptionUserIdExceptionNotConfiguredUserRoleException, ScmSdkAuthExceptionUserIdExceptionNotSupportLoginException, ScmSdkAuthExceptionUserIdExceptionNotSupportProviderLoginException, ScmSdkInvoicesException, ScmSdkInvoicesExceptionSearchException, ScmSdkInvoicesExceptionLoadListExceptionCantLoadNextPageException, ScmSdkInvoicesExceptionSearchExceptionEmptySearchNumberException, ScmSdkSdkExceptionCacheException, ScmSdkSdkExceptionCacheExceptionNoDataException, ScmSdkSdkExceptionNetworkException, ScmSdkSdkExceptionNetworkExceptionEmptyResponseException, ScmSdkSdkExceptionNetworkExceptionHttpStatusException, ScmSdkSdkExceptionNetworkExceptionNetworkConnection, ScmSdkSdkExceptionNetworkExceptionResponseException, ScmSdkSdkExceptionNetworkExceptionTimeoutException, ScmSdkSdkExceptionNetworkExceptionUnauthorized, ScmSdkSdkExceptionUncheckableException, ScmSdkSdkExceptionUnknownException, ScmSdkSdkExceptionUpdateApplicationException, ScmSdkSiteAuditException, ScmSdkSiteAuditExceptionSiteAuditBackGroundServiceNotUploaded, ScmSdkSiteAuditExceptionSiteAuditNotAllAttachmentsUploaded, ScmSdkSiteAuditExceptionSiteAuditNotFilledAudit, ScmSdkSiteAuditExceptionSiteAuditResponseException, ScmSdkTimeoutCauseConnectTimeout, ScmSdkTimeoutCauseHttpRequestTimeout, ScmSdkTimeoutCauseSocketTimeout, ScmSdkUserFeatureException, ScmSdkUserFeatureExceptionAuthorizedUserOnlyException, ScmSdkUserFeatureExceptionUniversalUserOnlyException, ScmSdkValidationParamsException, ScmSdkValidationParamsExceptionEmptyParamsException, ScmSdkWorkOrderException, ScmSdkWorkOrderExceptionWorkOrderUnknownCategoryId, ScmSdkWorkOrderExceptionWorkOrderUnknownPriorityId, ScmSdkWorkOrderExceptionWorkOrderUnknownProviderId, ScmSdkWorkOrderExceptionWorkOrderUnknownTradeId, ScmSdkWorkOrderExceptionWorkOrderUnknownWeatherTypeId, ScmSdkDeviceParams, ScmSdkNotificationSettings, ScmSdkDelete, ScmSdkDeviceType, ScmSdkApplication, ScmSdkLocationNotification, ScmSdkNotificationType, ScmSdkSubscriptionType, ScmSdkSubscribe, ScmSdkUpdate, ScmSdkNotificationTypeCompanion, ScmSdkFeedbackDashboardSettings, ScmSdkAppSettingWithValueParams, ScmSdkDashboardSettings, ScmSdkAppSettingParams, ScmSdkFeatureParams, ScmSdkUserPermissionParams, ScmSdkAppSettingWithValueConfirmationMessage, ScmSdkAppSettingWithValueCustomDuplicateMessage, ScmSdkAppSettingWithValueDaysOfHistoryToDisplay, ScmSdkAppSettingWithValueShowProviderPhoneNumber, ScmSdkDashboard, ScmSdkSubscriber, ScmSdkUser, ScmSdkAuditAttachment, ScmSdkUploadCommentInfo, ScmSdkCommentAttachment, ScmSdkLocalCommentInfo, ScmSdkSearchHistoryItemParams, ScmSdkPostAuditInfo, ScmSdkAuditCheckItemRatingSystem, ScmSdkAuditCheckListTemplateWithSortOrderParams, ScmSdkAuditCheckListTemplateParams, ScmSdkAudit, ScmSdkAuditCheckItem, ScmSdkAttachmentUrl, ScmSdkSearchHistoryItem, ScmSdkServiceRequestInfo, ScmSdkStatisticItemComponents, ScmSdkWorkOrderAttachmentInfo, ScmSdkCheckAuditInfo, ScmSdkWorkOrderTemplate, ScmSdkUploadWorkOrderTemplateInfo, ScmSdkWorkOrderAttachment, ScmSdkKotlinPair<__covariant A, __covariant B>, ScmSdkUpdateAuditAttachment, ScmSdkAuditAttachmentForUpdate, ScmSdkAttachmentLoadingResult, ScmSdkKotlinByteArray, ScmSdkAttachmentBody, ScmSdkAuditCheckList, ScmSdkAuditArea, ScmSdkCheckItemComment, ScmSdkAuditCheckItemStatisticItemShort, ScmSdkExistedWorkOrder, ScmSdkAuditCheckItemQuantityExist, ScmSdkAuditCheckItemQuantityNotExist, ScmSdkAuditCheckItemStatus, ScmSdkAuditInfoExistenceExist, ScmSdkAuditInfoExistenceNotExist, ScmSdkCompletedSiteAuditLocation, ScmSdkCompletedSiteAudit, ScmSdkQuantityUnit, ScmSdkWorkOrderTemplateExistenceExist, ScmSdkWorkOrderTemplateExistenceNotExist, ScmSdkStatisticItemAttachment, ScmSdkStatisticItemComment, ScmSdkStatisticItemWorkOrder, ScmSdkStatisticItemQuantity, ScmSdkExistedWorkOrderNotUploaded, ScmSdkExistedWorkOrderUploaded, ScmSdkWorkOrderTemplateContractInfo, ScmSdkWorkOrderTemplateAdditionalField, ScmSdkWorkOrderTemplateIssueRequestInfo, ScmSdkWorkOrderTemplateStatus, ScmSdkWorkOrderTemplateAdditionalApprovalCode, ScmSdkSiteAuditBackgroundUploadModeCompleteOpen, ScmSdkSiteAuditBackgroundUploadModeCreateOpen, ScmSdkSiteAuditBackgroundUploadModePost, ScmSdkSiteAuditBackgroundUploadModeUpdateCompleted, ScmSdkSiteAuditBackgroundUploadModeUpdateOpen, ScmSdkAuditCheckItemTemplate, ScmSdkAuditCheckListTemplate, ScmSdkAuditInfoTemplate, ScmSdkRatingValueChecked, ScmSdkRatingValueFail, ScmSdkRatingValueGood, ScmSdkRatingValueGreat, ScmSdkRatingValueNA, ScmSdkRatingValueNumeric, ScmSdkRatingValuePercentage, ScmSdkRatingValueUntouched, ScmSdkMigrationTokenTypeParams, ScmSdkConfigurationMigrationParams, ScmSdkLocationsPageLocation, ScmSdkDistrictsPage, ScmSdkFirstLocation, ScmSdkLocationsPage, ScmSdkLocationsPageLocationNotes, ScmSdkNote, ScmSdkSdkWorkOrderAsset, ScmSdkWorkOrdersFilters, ScmSdkSdkWorkOrderShort, ScmSdkSdkPriority, ScmSdkProvider, ScmSdkSdkTrade, ScmSdkSdkWorkOrderActivity, ScmSdkFiscalPeriodType, ScmSdkSdkWorkOrderBudget, ScmSdkSdkWorkOrder, ScmSdkSdkNote, ScmSdkSdkNoteVisibility, ScmSdkSdkNoteRecipient, ScmSdkSdkWorkOrderStatus, ScmSdkPostNoteParams, ScmSdkUpdateNoteParams, ScmSdkSdkWorkOrderNte, ScmSdkSdkWorkOrderProblem, ScmSdkWorkOrderProvider, ScmSdkSdkWorkOrderStatus_, ScmSdkSdkWorkOrderTrade, ScmSdkSdkWorkOrderLastNote, ScmSdkValidationStatus, ScmSdkSdkWorkOrderActivityUser, ScmSdkSdkWorkOrderStatusExtended, ScmSdkSdkWorkOrderStatusConstraints, ScmSdkValidationStatusAssetsValidationStatus, ScmSdkValidationStatusUnableToValidateReason, ScmSdkWorkOrderProviderReviewsInfo, ScmSdkAssetAssetWarranty, ScmSdkAsset, ScmSdkAssetAssetWarrantyProvider, ScmSdkAssetAssetWarrantyExpiration, ScmSdkAssetsInfo, ScmSdkSdkLastLogins, ScmSdkSdkReviews, ScmSdkIssueFieldDecision, ScmSdkIssueField, ScmSdkProviderFeedbackReviewsInfo, ScmSdkProviderFeedback, ScmSdkServiceRequestInfoIssueChoice, ScmSdkServiceRequestInfoSetupRequestConfirm, ScmSdkServiceRequestInfoSetupRequest, ScmSdkServiceRequestInfoSetupGeneral, ScmSdkServiceRequestInfoPriority, ScmSdkServiceRequestInfoCurrency, ScmSdkServiceRequestInfoUserSettings, ScmSdkSdkNoteSdkNoteAttachment, ScmSdkSdkNoteCompanion, ScmSdkSdkNoteSdkNoteAttachmentCompanion, ScmSdkSdkNoteVisibilityCompanion, ScmSdkSdkWorkOrderBudgetSdkRiskType, ScmSdkSdkWorkOrderBudgetSdkQuarter, ScmSdkSdkWorkOrderBudgetSdkQuarterCompanion, ScmSdkSdkWorkOrderBudgetSdkRiskTypeCompanion, ScmSdkWeatherTypeIdsParamsAll, ScmSdkWeatherTypeIdsParamsWeatherTypeIds, ScmSdkWeatherTypesParamsAll, ScmSdkWeatherTypesParamsWeatherTypes, ScmSdkWorkOrderCategoriesParamsAll, ScmSdkWorkOrderCategoriesParamsCategories, ScmSdkWorkOrderDatesParamsAll, ScmSdkWorkOrderDatesParamsDate, ScmSdkWorkOrderIdsParamsAll, ScmSdkWorkOrderIdsParamsIds, ScmSdkWorkOrderInvoicedStatusParamsAll, ScmSdkWorkOrderInvoicedStatusParamsInvoiced, ScmSdkWorkOrderLocationsParamsAll, ScmSdkWorkOrderLocationsParamsLocations, ScmSdkWorkOrderNotToExceedAmountData, ScmSdkWorkOrderNotToExceedAmountNone, ScmSdkWorkOrderNumbersParamsAll, ScmSdkWorkOrderNumbersParamsWorkOrderNumbers, ScmSdkWorkOrderPrioritiesParamsAll, ScmSdkWorkOrderPrioritiesParamsPriorities, ScmSdkWorkOrderProvidersParamsAll, ScmSdkWorkOrderProvidersParamsProviders, ScmSdkWorkOrderPurchaseNumbersParamsAll, ScmSdkWorkOrderPurchaseNumbersParamsPurchaseNumbers, ScmSdkWorkOrderStatusesParamsAll, ScmSdkWorkOrderStatusesParamsStatuses, ScmSdkWorkOrderTradesParamsAll, ScmSdkWorkOrderTradesParamsTrades, ScmSdkWorkOrdersPaginationDefaultForLargeData, ScmSdkWorkOrdersPaginationDefaultFromServer, ScmSdkWorkOrdersPaginationPagination, ScmSdkInvoicesFilter, ScmSdkSelectedItem, ScmSdkInvoiceAdditionalGlCode, ScmSdkInvoiceRejectionReason, ScmSdkInvoiceDetails, ScmSdkInvoiceLoadCommand, ScmSdkInvoiceAttachment, ScmSdkInvoiceUpdateInfo, ScmSdkInvoice, ScmSdkInvoiceStatus, ScmSdkInvoiceTrade, ScmSdkInvoiceCategory, ScmSdkInvoiceWorkOrder, ScmSdkInvoiceCurrency, ScmSdkInvoiceAvailableStatusAction, ScmSdkInvoiceCheckInOutInfo, ScmSdkInvoiceClientRatesInfo, ScmSdkInvoiceTaxValidationInfo, ScmSdkInvoiceLineItems, ScmSdkInvoiceDetailsProposal, ScmSdkInvoiceUserAction, ScmSdkInvoiceTaxInfo, ScmSdkInvoiceFilterSelectedItemsStateAll, ScmSdkInvoiceFilterSelectedItemsStatePart, ScmSdkInvoiceChargeUnitType, ScmSdkInvoiceClientSkillLevel, ScmSdkInvoiceLaborType, ScmSdkInvoiceRejectionReasonTypeCompanion, ScmSdkInvoiceRejectionReasonType, ScmSdkInvoiceStatusAction, ScmSdkInvoicesAssignedToState, ScmSdkInvoicesFilterSort, ScmSdkInvoiceCheckInOutInfoCheckInOutHours, ScmSdkInvoiceClientRatesInfoLaborRatesInfo, ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate, ScmSdkInvoiceFreightInfoInvoiceFreight, ScmSdkInvoiceFreightInfo, ScmSdkInvoiceLaborInfoInvoiceLabor, ScmSdkInvoiceLaborInfo, ScmSdkInvoiceMaterialInfo, ScmSdkInvoiceTravelInfo, ScmSdkInvoiceOtherInfo, ScmSdkInvoiceMaterialInfoInvoiceMaterial, ScmSdkInvoiceOtherInfoInvoiceOther, ScmSdkInvoiceTaxItem, ScmSdkInvoiceTaxValidationInfoSalesUseTax, ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax, ScmSdkInvoiceTravelInfoInvoiceTravel, ScmSdkReviewsParamsCompanion, ScmSdkReviewsParams, ScmSdkSsoAuthState, ScmSdkSsoAuthStateSsoClientRegistrationSuccessful, ScmSdkSsoAuthStateSsoUrl, ScmSdkScmSdkToken, ScmSdkProposal, ScmSdkConfigurationBaseUrlsParams, ScmSdkScFlow<T>, ScmSdkAuditAttachmentNsDataMapper, ScmSdkUpdateAuditAttachmentNsDataMapper, ScmSdkAuditAttachmentNsData, ScmSdkAuditAttachmentNsDataForUpdate, ScmSdkUpdateAuditAttachmentNsData, NSData, ScmSdkAppConfirmSettings, ScmSdkAppSettings, ScmSdkNoteSettings, ScmSdkFeedbackDashboardSettingsFeedbackValue, ScmSdkUpdateProfileReason, ScmSdkCoreTimeoutCauseConnectTimeout, ScmSdkCoreTimeoutCauseHttpRequestTimeout, ScmSdkCoreTimeoutCauseSocketTimeout, ScmSdkAccountLocal, ScmSdkRuntimeQuery<__covariant RowType>, ScmSdkAppConfirmSettingsLocal, ScmSdkAppSettingsLocal, ScmSdkNoteSettingsLocal, ScmSdkProfileFeaturesLocal, ScmSdkProfileLocal, ScmSdkProfilePermissionsLocal, ScmSdkScmSdkDatabaseCompanion, ScmSdkAuditCheckItemLocalAdapter, ScmSdkAuditCheckItemTemplateLocalAdapter, ScmSdkAuditInfoLocalAdapter, ScmSdkInvoiceFilterLocalAdapter, ScmSdkProfileLocalAdapter, ScmSdkSiteAuditStatisticItemLocalAdapter, ScmSdkStoreLocationLocalAdapter, ScmSdkSubscriberLocal, ScmSdkAuditAreaLocal, ScmSdkGetAreaWithCheckList, ScmSdkAuditCheckItemLocal, ScmSdkAuditCheckItemTemplateLocal, ScmSdkAuditCheckListLocal, ScmSdkAuditCheckListTemplateLocal, ScmSdkAuditInfoLocal, ScmSdkAuditInfoWithItemsCount, ScmSdkAuditInfoWithItemsCountByUserId, ScmSdkCheckItemCommentLocal, ScmSdkCommentAttachmentLocal, ScmSdkSiteAuditStatisticItemLocal, ScmSdkSearchHistoryItemLocal, ScmSdkSiteAuditAdditionalApprovalCodeLocal, ScmSdkSiteAuditWorkOrderAdditionalFieldLocal, ScmSdkSiteAuditWorkOrderContactInfoLocal, ScmSdkSiteAuditWorkOrderIssueRequestInfoLocal, ScmSdkSiteAuditWorkOrderTemplateLocal, ScmSdkSiteAuditWorkOrderTroubleshootingFieldLocal, ScmSdkWorkOrderAttachmentLocal, ScmSdkStatisticItemCommentAttachmentLocal, ScmSdkStatisticItemCommentLocal, ScmSdkStatisticItemQuantityLocal, ScmSdkStatisticItemWorkOrderAttachmentLocal, ScmSdkStatisticItemWorkOrderLocal, ScmSdkGetMaxFilterId, ScmSdkInvoiceFilterLocal, ScmSdkStoreLocationLocal, ScmSdkCategoryLocal, ScmSdkPriorityLocal, ScmSdkProviderLocal, ScmSdkTradeLocal, ScmSdkWeatherTypeLocal, ScmSdkLocationNotificationLocal, ScmSdkNapierAntilog, ScmSdkScmSdkCompanion, ScmSdkKotlinx_coroutines_coreCoroutineDispatcher, ScmSdkKtor_client_coreHttpClient, ScmSdkKtor_client_coreHttpClientConfig<T>, ScmSdkKotlinException, ScmSdkKotlinRuntimeException, ScmSdkKotlinIllegalStateException, ScmSdkKotlinByteIterator, ScmSdkKodein_diDITrigger, ScmSdkRuntimeTransacterTransaction, ScmSdkKtor_client_coreHttpClientEngineConfig, ScmSdkNapierLogLevel, ScmSdkKotlinAbstractCoroutineContextElement, ScmSdkKotlinx_coroutines_coreCoroutineDispatcherKey, ScmSdkKtor_eventsEvents, ScmSdkKtor_client_coreHttpReceivePipeline, ScmSdkKtor_client_coreHttpRequestPipeline, ScmSdkKtor_client_coreHttpResponsePipeline, ScmSdkKtor_client_coreHttpSendPipeline, ScmSdkKotlinx_serialization_coreSerializersModule, ScmSdkKotlinx_serialization_coreSerialKind, ScmSdkKotlinNothing, ScmSdkKodein_diDIKey<__contravariant C, __contravariant A, __covariant T>, ScmSdkKotlinUnit, ScmSdkKtor_client_coreHttpRequestData, ScmSdkKtor_client_coreHttpResponseData, ScmSdkKtor_client_coreProxyConfig, ScmSdkKotlinAbstractCoroutineContextKey<B, E>, ScmSdkKtor_utilsAttributeKey<T>, ScmSdkKtor_eventsEventDefinition<T>, ScmSdkKtor_utilsPipelinePhase, ScmSdkKtor_utilsPipeline<TSubject, TContext>, ScmSdkKtor_client_coreHttpReceivePipelinePhases, ScmSdkKtor_client_coreHttpResponse, ScmSdkKtor_client_coreHttpRequestPipelinePhases, ScmSdkKtor_client_coreHttpRequestBuilder, ScmSdkKtor_client_coreHttpResponsePipelinePhases, ScmSdkKtor_client_coreHttpResponseContainer, ScmSdkKtor_client_coreHttpClientCall, ScmSdkKtor_client_coreHttpSendPipelinePhases, ScmSdkKodein_diDIDefinition<C, A, T>, ScmSdkKotlinTriple<__covariant A, __covariant B, __covariant C>, ScmSdkKodein_diSearchSpecs, ScmSdkKtor_httpUrl, ScmSdkKtor_httpHttpMethod, ScmSdkKtor_httpOutgoingContent, ScmSdkKtor_httpHttpStatusCode, ScmSdkKtor_utilsGMTDate, ScmSdkKtor_httpHttpProtocolVersion, ScmSdkKtor_httpHeadersBuilder, ScmSdkKtor_client_coreHttpRequestBuilderCompanion, ScmSdkKtor_httpURLBuilder, ScmSdkKtor_utilsTypeInfo, ScmSdkKtor_client_coreHttpClientCallCompanion, ScmSdkKodein_diDIDefining<C, A, T>, ScmSdkKtor_httpUrlCompanion, ScmSdkKtor_httpURLProtocol, ScmSdkKtor_httpHttpMethodCompanion, ScmSdkKtor_httpContentType, ScmSdkKotlinCancellationException, ScmSdkKtor_httpHttpStatusCodeCompanion, ScmSdkKtor_utilsGMTDateCompanion, ScmSdkKtor_utilsWeekDay, ScmSdkKtor_utilsMonth, ScmSdkKtor_httpHttpProtocolVersionCompanion, ScmSdkKtor_ioMemory, ScmSdkKtor_ioChunkBuffer, ScmSdkKtor_ioBuffer, ScmSdkKtor_ioByteReadPacket, ScmSdkKtor_utilsStringValuesBuilderImpl, ScmSdkKtor_httpURLBuilderCompanion, ScmSdkKtor_httpURLProtocolCompanion, ScmSdkKtor_httpHeaderValueParam, ScmSdkKtor_httpHeaderValueWithParametersCompanion, ScmSdkKtor_httpHeaderValueWithParameters, ScmSdkKtor_httpContentTypeCompanion, ScmSdkKtor_utilsWeekDayCompanion, ScmSdkKtor_utilsMonthCompanion, ScmSdkKtor_ioMemoryCompanion, ScmSdkKtor_ioBufferCompanion, ScmSdkKtor_ioChunkBufferCompanion, ScmSdkKtor_ioInputCompanion, ScmSdkKtor_ioInput, ScmSdkKtor_ioByteReadPacketCompanion, ScmSdkKotlinKTypeProjection, ScmSdkKodein_diScopeRegistry, ScmSdkKotlinx_coroutines_coreAtomicDesc, ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp, ScmSdkKotlinKVariance, ScmSdkKotlinKTypeProjectionCompanion, ScmSdkKodein_diReference<__covariant T>, ScmSdkKotlinx_coroutines_coreAtomicOp<__contravariant T>, ScmSdkKotlinx_coroutines_coreOpDescriptor, ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode, ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc, ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<T>, ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<T>;

@protocol ScmSdkProfileSettings, ScmSdkMultiplatform_settingsSettings, ScmSdkCheckItemsSourceData, ScmSdkKotlinx_serialization_coreKSerializer, ScmSdkRuntimeColumnAdapter, ScmSdkRefreshTokenStatus, ScmSdkKotlinComparable, ScmSdkSiteAuditToolsProvider, ScmSdkGlobalCacheProvider, ScmSdkTimeoutCause, ScmSdkKotlinx_coroutines_coreFlow, ScmSdkSubscriptionEvent, ScmSdkAppSettingWithValue, ScmSdkAuditInfoExistence, ScmSdkWorkOrderTemplateExistence, ScmSdkRatingValue, ScmSdkSiteAuditBackgroundUploadMode, ScmSdkUriToByteArrayConverter, ScmSdkAuditCheckItemQuantity, ScmSdkWeatherTypeIdsParams, ScmSdkWeatherTypesParams, ScmSdkWorkOrderCategoriesParams, ScmSdkWorkOrderDatesParams, ScmSdkWorkOrderIdsParams, ScmSdkWorkOrderInvoicedStatusParams, ScmSdkWorkOrderLocationsParams, ScmSdkWorkOrderNotToExceedAmount, ScmSdkWorkOrderNumbersParams, ScmSdkWorkOrderPrioritiesParams, ScmSdkWorkOrderProvidersParams, ScmSdkWorkOrderPurchaseNumbersParams, ScmSdkWorkOrderStatusesParams, ScmSdkWorkOrderTradesParams, ScmSdkWorkOrdersPagination, ScmSdkInvoiceFilterSelectedItemsState, ScmSdkKotlinx_coroutines_coreFlowCollector, ScmSdkCloseable, ScmSdkKotlinCoroutineContext, ScmSdkKotlinx_coroutines_coreCoroutineScope, ScmSdkScmAuth, ScmSdkScmAuthorizedUser, ScmSdkScmCategories, ScmSdkScmCreateWorkOrder, ScmSdkScmMigration, ScmSdkScmProposal, ScmSdkScmReview, ScmSdkScmToken, ScmSdkScmTools, ScmSdkScmUnauthorizedUser, ScmSdkScmUserAccess, ScmSdkScmWorkOrder, ScmSdkScmSiteAudit, ScmSdkScmInvoiceFilters, ScmSdkScmInvoicesInfo, ScmSdkScmInvoices, ScmSdkScmInvoicesSearch, ScmSdkScmInvoiceUpdate, ScmSdkScmNotifications, ScmSdkScmNotificationsUnsubscribeFromPushes, ScmSdkScmLocations, ScmSdkKodein_diDI, ScmSdkCoreTimeoutCause, ScmSdkRuntimeTransactionWithoutReturn, ScmSdkRuntimeTransactionWithReturn, ScmSdkRuntimeTransacter, ScmSdkAccountQueries, ScmSdkAdditionalApprovalCodeQueries, ScmSdkAdditionalFieldQueries, ScmSdkAppConfirmSettingsQueries, ScmSdkAppSettingsQueries, ScmSdkAuditAreaQueries, ScmSdkAuditCheckItemQueries, ScmSdkAuditCheckItemTemplateQueries, ScmSdkAuditCheckListQueries, ScmSdkAuditCheckListTemplateQueries, ScmSdkAuditInfoQueries, ScmSdkCategoryLocalQueries, ScmSdkCheckItemCommentQueries, ScmSdkCommentAttachmentQueries, ScmSdkContactInfoQueries, ScmSdkInvoiceFilterQueries, ScmSdkIssueRequestInfoQueries, ScmSdkLocationNotificationQueries, ScmSdkNoteSettingsQueries, ScmSdkPriorityLocalQueries, ScmSdkProfileFeaturesQueries, ScmSdkProfilePermissionsQueries, ScmSdkProfileQueries, ScmSdkProviderLocalQueries, ScmSdkSearchHistoryQueries, ScmSdkStatisticItemCommentAttachmentQueries, ScmSdkStatisticItemCommentQueries, ScmSdkStatisticItemQuantityQueries, ScmSdkStatisticItemQueries, ScmSdkStatisticItemWorkOrderAttachmentQueries, ScmSdkStatisticItemWorkOrderQueries, ScmSdkStoreLocationLocalQueries, ScmSdkSubsidiariesQueries, ScmSdkTradeLocalQueries, ScmSdkTroubleshootingFieldQueries, ScmSdkWeatherTypeLocalQueries, ScmSdkWorkOrderAttachmentQueries, ScmSdkWorkOrderTemplateQueries, ScmSdkScmSdkDatabase, ScmSdkRuntimeSqlDriver, ScmSdkRuntimeSqlDriverSchema, ScmSdkKtor_client_coreHttpClientEngineFactory, ScmSdkDeviceProvider, ScmSdkExceptionsProvider, ScmSdkKotlinSuspendFunction1, ScmSdkKotlinx_serialization_coreEncoder, ScmSdkKotlinx_serialization_coreSerialDescriptor, ScmSdkKotlinx_serialization_coreSerializationStrategy, ScmSdkKotlinx_serialization_coreDecoder, ScmSdkKotlinx_serialization_coreDeserializationStrategy, ScmSdkKotlinIterator, ScmSdkKotlinCoroutineContextElement, ScmSdkKotlinCoroutineContextKey, ScmSdkKodein_diDIContainer, ScmSdkKodein_diDIContext, ScmSdkKodein_diDIAware, ScmSdkRuntimeSqlCursor, ScmSdkRuntimeQueryListener, ScmSdkRuntimeTransactionCallbacks, ScmSdkRuntimeSqlPreparedStatement, ScmSdkRuntimeCloseable, ScmSdkKtor_client_coreHttpClientEngine, ScmSdkKotlinFunction, ScmSdkKotlinContinuation, ScmSdkKotlinContinuationInterceptor, ScmSdkKotlinx_coroutines_coreRunnable, ScmSdkKtor_ioCloseable, ScmSdkKtor_client_coreHttpClientEngineCapability, ScmSdkKtor_utilsAttributes, ScmSdkKtor_client_coreHttpClientPlugin, ScmSdkKotlinx_serialization_coreCompositeEncoder, ScmSdkKotlinAnnotation, ScmSdkKotlinx_serialization_coreCompositeDecoder, ScmSdkKodein_diDITree, ScmSdkKaveritTypeToken, ScmSdkKotlinLazy, ScmSdkKotlinx_coroutines_coreDisposableHandle, ScmSdkKotlinSuspendFunction2, ScmSdkKotlinx_serialization_coreSerializersModuleCollector, ScmSdkKotlinKClass, ScmSdkKodein_diContextTranslator, ScmSdkKodein_diExternalSource, ScmSdkKtor_httpHeaders, ScmSdkKotlinx_coroutines_coreJob, ScmSdkKtor_httpHttpMessage, ScmSdkKtor_ioByteReadChannel, ScmSdkKtor_httpHttpMessageBuilder, ScmSdkKtor_client_coreHttpRequest, ScmSdkKotlinKDeclarationContainer, ScmSdkKotlinKAnnotatedElement, ScmSdkKotlinKClassifier, ScmSdkKodein_diDIBinding, ScmSdkKodein_diDirectDI, ScmSdkKodein_diBindingDI, ScmSdkKtor_httpParameters, ScmSdkKotlinMapEntry, ScmSdkKtor_utilsStringValues, ScmSdkKotlinx_coroutines_coreChildHandle, ScmSdkKotlinx_coroutines_coreChildJob, ScmSdkKotlinSequence, ScmSdkKotlinx_coroutines_coreSelectClause0, ScmSdkKtor_ioReadSession, ScmSdkKotlinAppendable, ScmSdkKtor_utilsStringValuesBuilder, ScmSdkKtor_httpParametersBuilder, ScmSdkKotlinKType, ScmSdkKodein_diDIBindingCopier, ScmSdkKodein_diScope, ScmSdkKodein_diBinding, ScmSdkKodein_diDirectDIAware, ScmSdkKodein_diDirectDIBase, ScmSdkKodein_diWithContext, ScmSdkKotlinx_coroutines_coreParentJob, ScmSdkKotlinx_coroutines_coreSelectInstance, ScmSdkKotlinSuspendFunction0, ScmSdkKtor_ioObjectPool, ScmSdkKodein_diDIContainerBuilder, ScmSdkKodein_diScopeCloseable;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface ScmSdkBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end

@interface ScmSdkBase (ScmSdkBaseCopying) <NSCopying>
@end

__attribute__((swift_name("KotlinMutableSet")))
@interface ScmSdkMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end

__attribute__((swift_name("KotlinMutableDictionary")))
@interface ScmSdkMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end

@interface NSError (NSErrorScmSdkKotlinException)
@property (readonly) id _Nullable kotlinException;
@end

__attribute__((swift_name("KotlinNumber")))
@interface ScmSdkNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end

__attribute__((swift_name("KotlinByte")))
@interface ScmSdkByte : ScmSdkNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end

__attribute__((swift_name("KotlinUByte")))
@interface ScmSdkUByte : ScmSdkNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end

__attribute__((swift_name("KotlinShort")))
@interface ScmSdkShort : ScmSdkNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end

__attribute__((swift_name("KotlinUShort")))
@interface ScmSdkUShort : ScmSdkNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end

__attribute__((swift_name("KotlinInt")))
@interface ScmSdkInt : ScmSdkNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end

__attribute__((swift_name("KotlinUInt")))
@interface ScmSdkUInt : ScmSdkNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end

__attribute__((swift_name("KotlinLong")))
@interface ScmSdkLong : ScmSdkNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end

__attribute__((swift_name("KotlinULong")))
@interface ScmSdkULong : ScmSdkNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end

__attribute__((swift_name("KotlinFloat")))
@interface ScmSdkFloat : ScmSdkNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end

__attribute__((swift_name("KotlinDouble")))
@interface ScmSdkDouble : ScmSdkNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end

__attribute__((swift_name("KotlinBoolean")))
@interface ScmSdkBoolean : ScmSdkNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end


/**
 * Base class for initializing the SDK for the ios platform.
 * @param enableLogging - ture if logging is enabled.
 * @param appVersion - version of application.
 * @param authorizationToken - base application token for authorization.
 * @param deviceDescription - base device description.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IosScmSdk")))
@interface ScmSdkIosScmSdk : ScmSdkBase
- (instancetype)initWithEnableLogging:(BOOL)enableLogging appVersion:(NSString *)appVersion authorizationToken:(NSString *)authorizationToken deviceDescription:(NSString *)deviceDescription deviceTitle:(NSString *)deviceTitle deviceModel:(NSString *)deviceModel osRelease:(NSString *)osRelease currentLanguage:(NSString *)currentLanguage country:(NSString *)country localizeFormatHeaders:(NSDictionary<NSString *, NSString *> *)localizeFormatHeaders sessionConfiguration:(void (^)(NSURLSessionConfiguration *))sessionConfiguration __attribute__((swift_name("init(enableLogging:appVersion:authorizationToken:deviceDescription:deviceTitle:deviceModel:osRelease:currentLanguage:country:localizeFormatHeaders:sessionConfiguration:)"))) __attribute__((objc_designated_initializer));

/**
 * Interactor to migration user data
 */
- (ScmSdkScmAuthInteractor *)provideAuthInteractor __attribute__((swift_name("provideAuthInteractor()")));

/**
 * API to working with authorized user profile
 */
- (ScmSdkScmAuthorizedUserInteractor *)provideAuthorizedUserInteractor __attribute__((swift_name("provideAuthorizedUserInteractor()")));

/**
 * API to work with categories.
 */
- (ScmSdkScmCategoriesInteractor *)provideCategoriesInteractor __attribute__((swift_name("provideCategoriesInteractor()")));

/**
 * API for creation work order.
 */
- (ScmSdkScmCreateWorkOrderInteractor *)provideCreateWorkOrderInteractor __attribute__((swift_name("provideCreateWorkOrderInteractor()")));

/**
 * API to get additional information about invoice.
 */
- (ScmSdkScmInvoicesInfoIntercator *)provideInvoiceInfoInteractor __attribute__((swift_name("provideInvoiceInfoInteractor()")));

/**
 * API to work with invoice filters.
 */
- (ScmSdkScmInvoiceFiltersInteractor *)provideInvoicesFiltersInteractor __attribute__((swift_name("provideInvoicesFiltersInteractor()")));

/**
 * API to work with invoices.
 */
- (ScmSdkScmInvoicesInteractor *)provideInvoicesInteractor __attribute__((swift_name("provideInvoicesInteractor()")));

/**
 * API to search invoices.
 */
- (ScmSdkScmInvoicesSearchIntercator *)provideInvoicesSearchInteractor __attribute__((swift_name("provideInvoicesSearchInteractor()")));

/**
 * API to update invoice status and GlCode.
 */
- (ScmSdkScmInvoicesUpdateIntercator *)provideInvoicesUpdateInteractor __attribute__((swift_name("provideInvoicesUpdateInteractor()")));

/**
 * API to work with locations.
 */
- (ScmSdkScmLocationsInteractor *)provideLocationsInteractor __attribute__((swift_name("provideLocationsInteractor()")));

/**
 * migration user data
 */
- (ScmSdkScmMigrationInteractor *)provideMigrationInteractor __attribute__((swift_name("provideMigrationInteractor()")));

/**
 * API to work with Notifications.
 */
- (ScmSdkScmNotificationsInteractor *)provideNotifications __attribute__((swift_name("provideNotifications()")));

/**
 * API to work with Notifications.
 */
- (ScmSdkScmNotificationsUnsubscribePush *)provideNotificationsUnsubscribePush __attribute__((swift_name("provideNotificationsUnsubscribePush()")));

/**
 * API to work with Proposals.
 */
- (ScmSdkScmProposalInteractor *)provideProposal __attribute__((swift_name("provideProposal()")));

/**
 * API to work with Reviews
 */
- (ScmSdkScmReviewInteractor *)provideReviewInteractor __attribute__((swift_name("provideReviewInteractor()")));

/**
 * API for Site audit.
 */
- (ScmSdkScmSiteAuditInteractor *)provideScmSiteAuditInteractor __attribute__((swift_name("provideScmSiteAuditInteractor()")));

/**
 * API to working with user token
 */
- (ScmSdkScmTokenInteractor *)provideTokenInteractor __attribute__((swift_name("provideTokenInteractor()")));

/**
 * API to add settings
 */
- (ScmSdkScmToolsInteractor *)provideToolsInteractor __attribute__((swift_name("provideToolsInteractor()")));

/**
 * API to working with unauthorized user profile
 */
- (ScmSdkScmUnauthorizedUserInteractor *)provideUnauthorizedUserInteractor __attribute__((swift_name("provideUnauthorizedUserInteractor()")));

/**
 * API to working with user access
 */
- (ScmSdkScmUserAccessInteractor *)provideUserAccessInteractor __attribute__((swift_name("provideUserAccessInteractor()")));

/**
 * API to wotk with Workorders
 */
- (ScmSdkScmWorkOrderInteractor *)provideWorkOrderInteractor __attribute__((swift_name("provideWorkOrderInteractor()")));
@end

__attribute__((swift_name("ProfileSettings")))
@protocol ScmSdkProfileSettings
@required
- (void)clear __attribute__((swift_name("clear()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateProfileSettingsModel:(ScmSdkProfileSettingsLocal *)model completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateProfileSettings(model:completionHandler:)")));
@property (readonly) ScmSdkProfileSettingsLocal *profileSettings __attribute__((swift_name("profileSettings")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileSettingsImpl")))
@interface ScmSdkProfileSettingsImpl : ScmSdkBase <ScmSdkProfileSettings>
- (instancetype)initWithSettings:(id<ScmSdkMultiplatform_settingsSettings>)settings __attribute__((swift_name("init(settings:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkProfileSettingsImplCompanion *companion __attribute__((swift_name("companion")));
- (void)clear __attribute__((swift_name("clear()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateProfileSettingsModel:(ScmSdkProfileSettingsLocal *)model completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateProfileSettings(model:completionHandler:)")));
@property (readonly) ScmSdkProfileSettingsLocal *profileSettings __attribute__((swift_name("profileSettings")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileSettingsImpl.Companion")))
@interface ScmSdkProfileSettingsImplCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkProfileSettingsImplCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("CheckItemsSourceData")))
@protocol ScmSdkCheckItemsSourceData
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckItemsSourceDataCompletedAudit")))
@interface ScmSdkCheckItemsSourceDataCompletedAudit : ScmSdkBase <ScmSdkCheckItemsSourceData>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)completedAudit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCheckItemsSourceDataCompletedAudit *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckItemsSourceDataNewCheckItem")))
@interface ScmSdkCheckItemsSourceDataNewCheckItem : ScmSdkBase <ScmSdkCheckItemsSourceData>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)getNewCheckItem __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCheckItemsSourceDataNewCheckItem *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckItemsSourceDataOpenAudit")))
@interface ScmSdkCheckItemsSourceDataOpenAudit : ScmSdkBase <ScmSdkCheckItemsSourceData>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)openAudit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCheckItemsSourceDataOpenAudit *shared __attribute__((swift_name("shared")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardDataLocal")))
@interface ScmSdkDashboardDataLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkDashboardDataLocalCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDashboardDataLocal *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardDataLocal.Companion")))
@interface ScmSdkDashboardDataLocalCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkDashboardDataLocalCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileSettingsLocal")))
@interface ScmSdkProfileSettingsLocal : ScmSdkBase
- (instancetype)initWithName:(NSString *)name fullName:(NSString *)fullName email:(NSString *)email __attribute__((swift_name("init(name:fullName:email:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkProfileSettingsLocalCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProfileSettingsLocal *)doCopyName:(NSString *)name fullName:(NSString *)fullName email:(NSString *)email __attribute__((swift_name("doCopy(name:fullName:email:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *fullName __attribute__((swift_name("fullName")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileSettingsLocal.Companion")))
@interface ScmSdkProfileSettingsLocalCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkProfileSettingsLocalCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("RuntimeColumnAdapter")))
@protocol ScmSdkRuntimeColumnAdapter
@required
- (id)decodeDatabaseValue:(id _Nullable)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (id _Nullable)encodeValue:(id)value __attribute__((swift_name("encode(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StoreLocationNoteAdapter")))
@interface ScmSdkStoreLocationNoteAdapter : ScmSdkBase <ScmSdkRuntimeColumnAdapter>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSArray<ScmSdkStoreLocationNoteDataLocal *> *)decodeDatabaseValue:(NSString *)databaseValue __attribute__((swift_name("decode(databaseValue:)")));
- (NSString *)encodeValue:(NSArray<ScmSdkStoreLocationNoteDataLocal *> *)value __attribute__((swift_name("encode(value:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StoreLocationNoteDataLocal")))
@interface ScmSdkStoreLocationNoteDataLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("init(id:headerId:value:header:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkStoreLocationNoteDataLocalCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStoreLocationNoteDataLocal *)doCopyId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("doCopy(id:headerId:value:header:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *header __attribute__((swift_name("header")));
@property (readonly) int32_t headerId __attribute__((swift_name("headerId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StoreLocationNoteDataLocal.Companion")))
@interface ScmSdkStoreLocationNoteDataLocalCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkStoreLocationNoteDataLocalCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateCompletedAuditRemote")))
@interface ScmSdkUpdateCompletedAuditRemote : ScmSdkBase
- (instancetype)initWithIsSuccess:(BOOL)isSuccess __attribute__((swift_name("init(isSuccess:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkUpdateCompletedAuditRemoteCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUpdateCompletedAuditRemote *)doCopyIsSuccess:(BOOL)isSuccess __attribute__((swift_name("doCopy(isSuccess:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isSuccess __attribute__((swift_name("isSuccess")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateCompletedAuditRemote.Companion")))
@interface ScmSdkUpdateCompletedAuditRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkUpdateCompletedAuditRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReviewsRemote")))
@interface ScmSdkReviewsRemote : ScmSdkBase
- (instancetype)initWithId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("init(id:dateTime:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkReviewsRemoteCompanion *companion __attribute__((swift_name("companion")));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkReviewsRemote *)doCopyId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("doCopy(id:dateTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReviewsRemote.Companion")))
@interface ScmSdkReviewsRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkReviewsRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAuditInfoRemote")))
@interface ScmSdkCheckAuditInfoRemote : ScmSdkBase
- (instancetype)initWithIsSuccess:(ScmSdkBoolean * _Nullable)isSuccess isOpenAuditMaxCount:(ScmSdkBoolean * _Nullable)isOpenAuditMaxCount isOpenAuditExists:(ScmSdkBoolean * _Nullable)isOpenAuditExists __attribute__((swift_name("init(isSuccess:isOpenAuditMaxCount:isOpenAuditExists:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkCheckAuditInfoRemoteCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkBoolean * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCheckAuditInfoRemote *)doCopyIsSuccess:(ScmSdkBoolean * _Nullable)isSuccess isOpenAuditMaxCount:(ScmSdkBoolean * _Nullable)isOpenAuditMaxCount isOpenAuditExists:(ScmSdkBoolean * _Nullable)isOpenAuditExists __attribute__((swift_name("doCopy(isSuccess:isOpenAuditMaxCount:isOpenAuditExists:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkBoolean * _Nullable isOpenAuditExists __attribute__((swift_name("isOpenAuditExists")));
@property (readonly) ScmSdkBoolean * _Nullable isOpenAuditMaxCount __attribute__((swift_name("isOpenAuditMaxCount")));
@property (readonly) ScmSdkBoolean * _Nullable isSuccess __attribute__((swift_name("isSuccess")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAuditInfoRemote.Companion")))
@interface ScmSdkCheckAuditInfoRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCheckAuditInfoRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderRemote")))
@interface ScmSdkProviderRemote : ScmSdkBase
- (instancetype)initWithId:(int32_t)id city:(NSString * _Nullable)city email:(NSString * _Nullable)email name:(NSString * _Nullable)name phone:(NSString * _Nullable)phone reviewsInfo:(ScmSdkProviderRemoteReviewsInfo * _Nullable)reviewsInfo state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip __attribute__((swift_name("init(id:city:email:name:phone:reviewsInfo:state:zip:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkProviderRemoteCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderRemoteReviewsInfo * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderRemote *)doCopyId:(int32_t)id city:(NSString * _Nullable)city email:(NSString * _Nullable)email name:(NSString * _Nullable)name phone:(NSString * _Nullable)phone reviewsInfo:(ScmSdkProviderRemoteReviewsInfo * _Nullable)reviewsInfo state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip __attribute__((swift_name("doCopy(id:city:email:name:phone:reviewsInfo:state:zip:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable phone __attribute__((swift_name("phone")));
@property (readonly) ScmSdkProviderRemoteReviewsInfo * _Nullable reviewsInfo __attribute__((swift_name("reviewsInfo")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderRemote.Companion")))
@interface ScmSdkProviderRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkProviderRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderRemote.ReviewsInfo")))
@interface ScmSdkProviderRemoteReviewsInfo : ScmSdkBase
- (instancetype)initWithAverageRating:(ScmSdkFloat * _Nullable)averageRating recentReviewDate:(NSString * _Nullable)recentReviewDate reviewsNumber:(ScmSdkInt * _Nullable)reviewsNumber __attribute__((swift_name("init(averageRating:recentReviewDate:reviewsNumber:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkProviderRemoteReviewsInfoCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkFloat * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderRemoteReviewsInfo *)doCopyAverageRating:(ScmSdkFloat * _Nullable)averageRating recentReviewDate:(NSString * _Nullable)recentReviewDate reviewsNumber:(ScmSdkInt * _Nullable)reviewsNumber __attribute__((swift_name("doCopy(averageRating:recentReviewDate:reviewsNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkFloat * _Nullable averageRating __attribute__((swift_name("averageRating")));
@property (readonly) NSString * _Nullable recentReviewDate __attribute__((swift_name("recentReviewDate")));
@property (readonly) ScmSdkInt * _Nullable reviewsNumber __attribute__((swift_name("reviewsNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderRemote.ReviewsInfoCompanion")))
@interface ScmSdkProviderRemoteReviewsInfoCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkProviderRemoteReviewsInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteSettingsRemote")))
@interface ScmSdkNoteSettingsRemote : ScmSdkBase
- (instancetype)initWithAllowAddingNotes:(ScmSdkBoolean * _Nullable)allowAddingNotes allowAddingNotesForCompletedWorkorders:(ScmSdkBoolean * _Nullable)allowAddingNotesForCompletedWorkorders autoCopyContractorNotes:(ScmSdkBoolean * _Nullable)autoCopyContractorNotes disableNotes:(ScmSdkBoolean * _Nullable)disableNotes maskEmail:(ScmSdkBoolean * _Nullable)maskEmail maskMoney:(ScmSdkBoolean * _Nullable)maskMoney maskPhone:(ScmSdkBoolean * _Nullable)maskPhone setupId:(int32_t)setupId showProviderRecipients:(ScmSdkBoolean * _Nullable)showProviderRecipients showPublicUserEmailsOnly:(ScmSdkBoolean * _Nullable)showPublicUserEmailsOnly showSubscriberRecipients:(ScmSdkBoolean * _Nullable)showSubscriberRecipients showUniversalRecipients:(ScmSdkBoolean * _Nullable)showUniversalRecipients __attribute__((swift_name("init(allowAddingNotes:allowAddingNotesForCompletedWorkorders:autoCopyContractorNotes:disableNotes:maskEmail:maskMoney:maskPhone:setupId:showProviderRecipients:showPublicUserEmailsOnly:showSubscriberRecipients:showUniversalRecipients:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkNoteSettingsRemoteCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkBoolean * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteSettingsRemote *)doCopyAllowAddingNotes:(ScmSdkBoolean * _Nullable)allowAddingNotes allowAddingNotesForCompletedWorkorders:(ScmSdkBoolean * _Nullable)allowAddingNotesForCompletedWorkorders autoCopyContractorNotes:(ScmSdkBoolean * _Nullable)autoCopyContractorNotes disableNotes:(ScmSdkBoolean * _Nullable)disableNotes maskEmail:(ScmSdkBoolean * _Nullable)maskEmail maskMoney:(ScmSdkBoolean * _Nullable)maskMoney maskPhone:(ScmSdkBoolean * _Nullable)maskPhone setupId:(int32_t)setupId showProviderRecipients:(ScmSdkBoolean * _Nullable)showProviderRecipients showPublicUserEmailsOnly:(ScmSdkBoolean * _Nullable)showPublicUserEmailsOnly showSubscriberRecipients:(ScmSdkBoolean * _Nullable)showSubscriberRecipients showUniversalRecipients:(ScmSdkBoolean * _Nullable)showUniversalRecipients __attribute__((swift_name("doCopy(allowAddingNotes:allowAddingNotesForCompletedWorkorders:autoCopyContractorNotes:disableNotes:maskEmail:maskMoney:maskPhone:setupId:showProviderRecipients:showPublicUserEmailsOnly:showSubscriberRecipients:showUniversalRecipients:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkBoolean * _Nullable allowAddingNotes __attribute__((swift_name("allowAddingNotes")));
@property (readonly) ScmSdkBoolean * _Nullable allowAddingNotesForCompletedWorkorders __attribute__((swift_name("allowAddingNotesForCompletedWorkorders")));
@property (readonly) ScmSdkBoolean * _Nullable autoCopyContractorNotes __attribute__((swift_name("autoCopyContractorNotes")));
@property (readonly) ScmSdkBoolean * _Nullable disableNotes __attribute__((swift_name("disableNotes")));
@property (readonly) ScmSdkBoolean * _Nullable maskEmail __attribute__((swift_name("maskEmail")));
@property (readonly) ScmSdkBoolean * _Nullable maskMoney __attribute__((swift_name("maskMoney")));
@property (readonly) ScmSdkBoolean * _Nullable maskPhone __attribute__((swift_name("maskPhone")));
@property (readonly) int32_t setupId __attribute__((swift_name("setupId")));
@property (readonly) ScmSdkBoolean * _Nullable showProviderRecipients __attribute__((swift_name("showProviderRecipients")));
@property (readonly) ScmSdkBoolean * _Nullable showPublicUserEmailsOnly __attribute__((swift_name("showPublicUserEmailsOnly")));
@property (readonly) ScmSdkBoolean * _Nullable showSubscriberRecipients __attribute__((swift_name("showSubscriberRecipients")));
@property (readonly) ScmSdkBoolean * _Nullable showUniversalRecipients __attribute__((swift_name("showUniversalRecipients")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteSettingsRemote.Companion")))
@interface ScmSdkNoteSettingsRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkNoteSettingsRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CurrencyAlphabeticCodeRemote")))
@interface ScmSdkCurrencyAlphabeticCodeRemote : ScmSdkBase
- (instancetype)initWithAlphabeticalCode:(NSString * _Nullable)alphabeticalCode __attribute__((swift_name("init(alphabeticalCode:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkCurrencyAlphabeticCodeRemoteCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCurrencyAlphabeticCodeRemote *)doCopyAlphabeticalCode:(NSString * _Nullable)alphabeticalCode __attribute__((swift_name("doCopy(alphabeticalCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable alphabeticalCode __attribute__((swift_name("alphabeticalCode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CurrencyAlphabeticCodeRemote.Companion")))
@interface ScmSdkCurrencyAlphabeticCodeRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCurrencyAlphabeticCodeRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbacksRemote")))
@interface ScmSdkFeedbacksRemote : ScmSdkBase
- (instancetype)initWithFeedbacks:(NSArray<ScmSdkFeedbacksRemoteFeedback *> *)feedbacks __attribute__((swift_name("init(feedbacks:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkFeedbacksRemoteCompanion *companion __attribute__((swift_name("companion")));
- (NSArray<ScmSdkFeedbacksRemoteFeedback *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedbacksRemote *)doCopyFeedbacks:(NSArray<ScmSdkFeedbacksRemoteFeedback *> *)feedbacks __attribute__((swift_name("doCopy(feedbacks:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkFeedbacksRemoteFeedback *> *feedbacks __attribute__((swift_name("feedbacks")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbacksRemote.Companion")))
@interface ScmSdkFeedbacksRemoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkFeedbacksRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbacksRemote.Feedback")))
@interface ScmSdkFeedbacksRemoteFeedback : ScmSdkBase
- (instancetype)initWithComment:(NSString * _Nullable)comment date:(NSString * _Nullable)date id:(int32_t)id starScore:(ScmSdkInt * _Nullable)starScore userId:(int32_t)userId userName:(NSString * _Nullable)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("init(comment:date:id:starScore:userId:userName:workOrderId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkFeedbacksRemoteFeedbackCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedbacksRemoteFeedback *)doCopyComment:(NSString * _Nullable)comment date:(NSString * _Nullable)date id:(int32_t)id starScore:(ScmSdkInt * _Nullable)starScore userId:(int32_t)userId userName:(NSString * _Nullable)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("doCopy(comment:date:id:starScore:userId:userName:workOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) ScmSdkInt * _Nullable starScore __attribute__((swift_name("starScore")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable userName __attribute__((swift_name("userName")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbacksRemote.FeedbackCompanion")))
@interface ScmSdkFeedbacksRemoteFeedbackCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkFeedbacksRemoteFeedbackCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersBudgetsRemoteParams")))
@interface ScmSdkWorkOrdersBudgetsRemoteParams : ScmSdkBase
- (instancetype)initWithFiscalPeriodType:(NSString *)fiscalPeriodType workOrderIds:(NSArray<ScmSdkInt *> *)workOrderIds __attribute__((swift_name("init(fiscalPeriodType:workOrderIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkWorkOrdersBudgetsRemoteParamsCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrdersBudgetsRemoteParams *)doCopyFiscalPeriodType:(NSString *)fiscalPeriodType workOrderIds:(NSArray<ScmSdkInt *> *)workOrderIds __attribute__((swift_name("doCopy(fiscalPeriodType:workOrderIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *fiscalPeriodType __attribute__((swift_name("fiscalPeriodType")));
@property (readonly) NSArray<ScmSdkInt *> *workOrderIds __attribute__((swift_name("workOrderIds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersBudgetsRemoteParams.Companion")))
@interface ScmSdkWorkOrdersBudgetsRemoteParamsCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrdersBudgetsRemoteParamsCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams")))
@interface ScmSdkInvoicesRemoteParams : ScmSdkBase
- (instancetype)initWithLimit:(int32_t)limit offset:(int32_t)offset sortBy:(ScmSdkInvoicesRemoteParamsSortBy * _Nullable)sortBy filter:(ScmSdkInvoicesRemoteParamsFilter *)filter __attribute__((swift_name("init(limit:offset:sortBy:filter:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkInvoicesRemoteParamsCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesRemoteParamsSortBy * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesRemoteParamsFilter *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesRemoteParams *)doCopyLimit:(int32_t)limit offset:(int32_t)offset sortBy:(ScmSdkInvoicesRemoteParamsSortBy * _Nullable)sortBy filter:(ScmSdkInvoicesRemoteParamsFilter *)filter __attribute__((swift_name("doCopy(limit:offset:sortBy:filter:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkInvoicesRemoteParamsFilter *filter __attribute__((swift_name("filter")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) int32_t offset __attribute__((swift_name("offset")));
@property (readonly) ScmSdkInvoicesRemoteParamsSortBy * _Nullable sortBy __attribute__((swift_name("sortBy")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams.Companion")))
@interface ScmSdkInvoicesRemoteParamsCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoicesRemoteParamsCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams.Filter")))
@interface ScmSdkInvoicesRemoteParamsFilter : ScmSdkBase
- (instancetype)initWithMonthsAgo:(int32_t)monthsAgo amountFrom:(NSString * _Nullable)amountFrom amountTo:(NSString * _Nullable)amountTo status:(NSArray<NSString *> *)status assignedToId:(ScmSdkInt * _Nullable)assignedToId districts:(NSArray<NSString *> *)districts trades:(NSArray<NSString *> *)trades categories:(NSArray<NSString *> *)categories providers:(NSArray<ScmSdkInt *> *)providers invoiceNumber:(NSString * _Nullable)invoiceNumber __attribute__((swift_name("init(monthsAgo:amountFrom:amountTo:status:assignedToId:districts:trades:categories:providers:invoiceNumber:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkInvoicesRemoteParamsFilterCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesRemoteParamsFilter *)doCopyMonthsAgo:(int32_t)monthsAgo amountFrom:(NSString * _Nullable)amountFrom amountTo:(NSString * _Nullable)amountTo status:(NSArray<NSString *> *)status assignedToId:(ScmSdkInt * _Nullable)assignedToId districts:(NSArray<NSString *> *)districts trades:(NSArray<NSString *> *)trades categories:(NSArray<NSString *> *)categories providers:(NSArray<ScmSdkInt *> *)providers invoiceNumber:(NSString * _Nullable)invoiceNumber __attribute__((swift_name("doCopy(monthsAgo:amountFrom:amountTo:status:assignedToId:districts:trades:categories:providers:invoiceNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable amountFrom __attribute__((swift_name("amountFrom")));
@property (readonly) NSString * _Nullable amountTo __attribute__((swift_name("amountTo")));
@property (readonly) ScmSdkInt * _Nullable assignedToId __attribute__((swift_name("assignedToId")));
@property (readonly) NSArray<NSString *> *categories __attribute__((swift_name("categories")));
@property (readonly) NSArray<NSString *> *districts __attribute__((swift_name("districts")));
@property (readonly) NSString * _Nullable invoiceNumber __attribute__((swift_name("invoiceNumber")));
@property (readonly) int32_t monthsAgo __attribute__((swift_name("monthsAgo")));
@property (readonly) NSArray<ScmSdkInt *> *providers __attribute__((swift_name("providers")));
@property (readonly) NSArray<NSString *> *status __attribute__((swift_name("status")));
@property (readonly) NSArray<NSString *> *trades __attribute__((swift_name("trades")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams.FilterCompanion")))
@interface ScmSdkInvoicesRemoteParamsFilterCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoicesRemoteParamsFilterCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams.SortBy")))
@interface ScmSdkInvoicesRemoteParamsSortBy : ScmSdkBase
- (instancetype)initWithField:(NSString *)field direction:(NSString *)direction __attribute__((swift_name("init(field:direction:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkInvoicesRemoteParamsSortByCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesRemoteParamsSortBy *)doCopyField:(NSString *)field direction:(NSString *)direction __attribute__((swift_name("doCopy(field:direction:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *direction __attribute__((swift_name("direction")));
@property (readonly) NSString *field __attribute__((swift_name("field")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesRemoteParams.SortByCompanion")))
@interface ScmSdkInvoicesRemoteParamsSortByCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoicesRemoteParamsSortByCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("RefreshTokenStatus")))
@protocol ScmSdkRefreshTokenStatus
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RefreshTokenStatusError")))
@interface ScmSdkRefreshTokenStatusError : ScmSdkBase <ScmSdkRefreshTokenStatus>
- (instancetype)initWithThrowable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("init(throwable:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkKotlinThrowable *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkRefreshTokenStatusError *)doCopyThrowable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("doCopy(throwable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable *throwable __attribute__((swift_name("throwable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RefreshTokenStatusRepeat")))
@interface ScmSdkRefreshTokenStatusRepeat : ScmSdkBase <ScmSdkRefreshTokenStatus>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)repeat __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRefreshTokenStatusRepeat *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RefreshTokenStatusUnauthorized")))
@interface ScmSdkRefreshTokenStatusUnauthorized : ScmSdkBase <ScmSdkRefreshTokenStatus>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unauthorized __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRefreshTokenStatusUnauthorized *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmHttpHeaders")))
@interface ScmSdkScmHttpHeaders : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)scmHttpHeaders __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkScmHttpHeaders *shared __attribute__((swift_name("shared")));
@property (readonly) NSString *USER_DETAILS_HEADER __attribute__((swift_name("USER_DETAILS_HEADER")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EndpointsForUpdateApp")))
@interface ScmSdkEndpointsForUpdateApp : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)endpointsForUpdateApp __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkEndpointsForUpdateApp *shared __attribute__((swift_name("shared")));
- (BOOL)isNeedToUpdateApp:(NSString *)receiver __attribute__((swift_name("isNeedToUpdateApp(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderRemoteMapper")))
@interface ScmSdkProviderRemoteMapper : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkProviderData *)mapRemote:(ScmSdkProviderRemote *)remote __attribute__((swift_name("map(remote:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbackRemoteMapper")))
@interface ScmSdkFeedbackRemoteMapper : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkFeedbackData *)mapRemote:(ScmSdkFeedbacksRemoteFeedback *)remote __attribute__((swift_name("map(remote:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditData")))
@interface ScmSdkAuditData : ScmSdkBase
- (instancetype)initWithAuditInfoId:(int64_t)auditInfoId locationId:(int32_t)locationId serverId:(int32_t)serverId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName emails:(NSString *)emails isSendOnEmails:(BOOL)isSendOnEmails startDate:(NSString *)startDate timeZone:(NSString *)timeZone itemsCount:(int32_t)itemsCount __attribute__((swift_name("init(auditInfoId:locationId:serverId:locationName:storeId:city:address:state:zip:country:templateId:templateName:emails:isSendOnEmails:startDate:timeZone:itemsCount:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditData *)doCopyAuditInfoId:(int64_t)auditInfoId locationId:(int32_t)locationId serverId:(int32_t)serverId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName emails:(NSString *)emails isSendOnEmails:(BOOL)isSendOnEmails startDate:(NSString *)startDate timeZone:(NSString *)timeZone itemsCount:(int32_t)itemsCount __attribute__((swift_name("doCopy(auditInfoId:locationId:serverId:locationName:storeId:city:address:state:zip:country:templateId:templateName:emails:isSendOnEmails:startDate:timeZone:itemsCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) int64_t auditInfoId __attribute__((swift_name("auditInfoId")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) NSString *emails __attribute__((swift_name("emails")));
@property (readonly) BOOL isSendOnEmails __attribute__((swift_name("isSendOnEmails")));
@property (readonly) int32_t itemsCount __attribute__((swift_name("itemsCount")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t templateId __attribute__((swift_name("templateId")));
@property (readonly) NSString *templateName __attribute__((swift_name("templateName")));
@property (readonly) NSString *timeZone __attribute__((swift_name("timeZone")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PostNewAuditData")))
@interface ScmSdkPostNewAuditData : ScmSdkBase
- (instancetype)initWithIsSaved:(BOOL)isSaved message:(NSString *)message auditId:(int32_t)auditId __attribute__((swift_name("init(isSaved:message:auditId:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkPostNewAuditData *)doCopyIsSaved:(BOOL)isSaved message:(NSString *)message auditId:(int32_t)auditId __attribute__((swift_name("doCopy(isSaved:message:auditId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t auditId __attribute__((swift_name("auditId")));
@property (readonly) BOOL isSaved __attribute__((swift_name("isSaved")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CreateWorkOrderData")))
@interface ScmSdkCreateWorkOrderData : ScmSdkBase
- (instancetype)initWithId:(int32_t)id warning:(NSString *)warning __attribute__((swift_name("init(id:warning:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCreateWorkOrderData *)doCopyId:(int32_t)id warning:(NSString *)warning __attribute__((swift_name("doCopy(id:warning:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *warning __attribute__((swift_name("warning")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LastLoginsData")))
@interface ScmSdkLastLoginsData : ScmSdkBase
- (instancetype)initWithId:(int64_t)id dateTime:(NSString *)dateTime isSuccess:(BOOL)isSuccess details:(NSString *)details __attribute__((swift_name("init(id:dateTime:isSuccess:details:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLastLoginsData *)doCopyId:(int64_t)id dateTime:(NSString *)dateTime isSuccess:(BOOL)isSuccess details:(NSString *)details __attribute__((swift_name("doCopy(id:dateTime:isSuccess:details:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) NSString *details __attribute__((swift_name("details")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSuccess __attribute__((swift_name("isSuccess")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReviewsData")))
@interface ScmSdkReviewsData : ScmSdkBase
- (instancetype)initWithId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("init(id:dateTime:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkReviewsData *)doCopyId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("doCopy(id:dateTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbackData")))
@interface ScmSdkFeedbackData : ScmSdkBase
- (instancetype)initWithId:(int32_t)id comment:(NSString *)comment date:(NSString *)date starScore:(int32_t)starScore userId:(int32_t)userId userName:(NSString *)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("init(id:comment:date:starScore:userId:userName:workOrderId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedbackData *)doCopyId:(int32_t)id comment:(NSString *)comment date:(NSString *)date starScore:(int32_t)starScore userId:(int32_t)userId userName:(NSString *)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("doCopy(id:comment:date:starScore:userId:userName:workOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *comment __attribute__((swift_name("comment")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t starScore __attribute__((swift_name("starScore")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersBudgetData")))
@interface ScmSdkWorkOrdersBudgetData : ScmSdkBase
- (instancetype)initWithWorkOrderBudgets:(NSArray<ScmSdkWorkOrdersBudgetDataBudgetData *> *)workOrderBudgets __attribute__((swift_name("init(workOrderBudgets:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkWorkOrdersBudgetDataBudgetData *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrdersBudgetData *)doCopyWorkOrderBudgets:(NSArray<ScmSdkWorkOrdersBudgetDataBudgetData *> *)workOrderBudgets __attribute__((swift_name("doCopy(workOrderBudgets:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkWorkOrdersBudgetDataBudgetData *> *workOrderBudgets __attribute__((swift_name("workOrderBudgets")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersBudgetData.BudgetData")))
@interface ScmSdkWorkOrdersBudgetDataBudgetData : ScmSdkBase
- (instancetype)initWithBudgetId:(int32_t)budgetId currencyId:(int32_t)currencyId startDate:(NSString *)startDate endDate:(NSString *)endDate totalAmount:(double)totalAmount incurredAmount:(double)incurredAmount forecastedAmount:(double)forecastedAmount remainingAmount:(double)remainingAmount riskType:(NSString *)riskType workOrderId:(int32_t)workOrderId fiscalPeriodId:(int32_t)fiscalPeriodId fiscalPeriodName:(NSString * _Nullable)fiscalPeriodName quarter:(NSString *)quarter calendarName:(NSString * _Nullable)calendarName budgetAmountId:(int32_t)budgetAmountId workOrderIncurredAmount:(ScmSdkDouble * _Nullable)workOrderIncurredAmount workOrderForecastedAmount:(ScmSdkDouble * _Nullable)workOrderForecastedAmount updatedDate:(NSString * _Nullable)updatedDate workOrderCount:(int32_t)workOrderCount __attribute__((swift_name("init(budgetId:currencyId:startDate:endDate:totalAmount:incurredAmount:forecastedAmount:remainingAmount:riskType:workOrderId:fiscalPeriodId:fiscalPeriodName:quarter:calendarName:budgetAmountId:workOrderIncurredAmount:workOrderForecastedAmount:updatedDate:workOrderCount:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDouble * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDouble * _Nullable)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrdersBudgetDataBudgetData *)doCopyBudgetId:(int32_t)budgetId currencyId:(int32_t)currencyId startDate:(NSString *)startDate endDate:(NSString *)endDate totalAmount:(double)totalAmount incurredAmount:(double)incurredAmount forecastedAmount:(double)forecastedAmount remainingAmount:(double)remainingAmount riskType:(NSString *)riskType workOrderId:(int32_t)workOrderId fiscalPeriodId:(int32_t)fiscalPeriodId fiscalPeriodName:(NSString * _Nullable)fiscalPeriodName quarter:(NSString *)quarter calendarName:(NSString * _Nullable)calendarName budgetAmountId:(int32_t)budgetAmountId workOrderIncurredAmount:(ScmSdkDouble * _Nullable)workOrderIncurredAmount workOrderForecastedAmount:(ScmSdkDouble * _Nullable)workOrderForecastedAmount updatedDate:(NSString * _Nullable)updatedDate workOrderCount:(int32_t)workOrderCount __attribute__((swift_name("doCopy(budgetId:currencyId:startDate:endDate:totalAmount:incurredAmount:forecastedAmount:remainingAmount:riskType:workOrderId:fiscalPeriodId:fiscalPeriodName:quarter:calendarName:budgetAmountId:workOrderIncurredAmount:workOrderForecastedAmount:updatedDate:workOrderCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t budgetAmountId __attribute__((swift_name("budgetAmountId")));
@property (readonly) int32_t budgetId __attribute__((swift_name("budgetId")));
@property (readonly) NSString * _Nullable calendarName __attribute__((swift_name("calendarName")));
@property (readonly) int32_t currencyId __attribute__((swift_name("currencyId")));
@property (readonly) NSString *endDate __attribute__((swift_name("endDate")));
@property (readonly) int32_t fiscalPeriodId __attribute__((swift_name("fiscalPeriodId")));
@property (readonly) NSString * _Nullable fiscalPeriodName __attribute__((swift_name("fiscalPeriodName")));
@property (readonly) double forecastedAmount __attribute__((swift_name("forecastedAmount")));
@property (readonly) double incurredAmount __attribute__((swift_name("incurredAmount")));
@property (readonly) NSString *quarter __attribute__((swift_name("quarter")));
@property (readonly) double remainingAmount __attribute__((swift_name("remainingAmount")));
@property (readonly) NSString *riskType __attribute__((swift_name("riskType")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) double totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) NSString * _Nullable updatedDate __attribute__((swift_name("updatedDate")));
@property (readonly) int32_t workOrderCount __attribute__((swift_name("workOrderCount")));
@property (readonly) ScmSdkDouble * _Nullable workOrderForecastedAmount __attribute__((swift_name("workOrderForecastedAmount")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@property (readonly) ScmSdkDouble * _Nullable workOrderIncurredAmount __attribute__((swift_name("workOrderIncurredAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteSettingsData")))
@interface ScmSdkNoteSettingsData : ScmSdkBase
- (instancetype)initWithSetupId:(int32_t)setupId isMaskEmail:(BOOL)isMaskEmail isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone __attribute__((swift_name("init(setupId:isMaskEmail:isMaskMoney:isMaskPhone:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteSettingsData *)doCopySetupId:(int32_t)setupId isMaskEmail:(BOOL)isMaskEmail isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone __attribute__((swift_name("doCopy(setupId:isMaskEmail:isMaskMoney:isMaskPhone:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isMaskEmail __attribute__((swift_name("isMaskEmail")));
@property (readonly) BOOL isMaskMoney __attribute__((swift_name("isMaskMoney")));
@property (readonly) BOOL isMaskPhone __attribute__((swift_name("isMaskPhone")));
@property (readonly) int32_t setupId __attribute__((swift_name("setupId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderData")))
@interface ScmSdkProviderData : ScmSdkBase
- (instancetype)initWithId:(int32_t)id city:(NSString *)city email:(NSString *)email name:(NSString *)name phone:(NSString *)phone reviewsInfo:(ScmSdkProviderDataReviewsInfo *)reviewsInfo state:(NSString *)state zip:(NSString *)zip __attribute__((swift_name("init(id:city:email:name:phone:reviewsInfo:state:zip:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderDataReviewsInfo *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderData *)doCopyId:(int32_t)id city:(NSString *)city email:(NSString *)email name:(NSString *)name phone:(NSString *)phone reviewsInfo:(ScmSdkProviderDataReviewsInfo *)reviewsInfo state:(NSString *)state zip:(NSString *)zip __attribute__((swift_name("doCopy(id:city:email:name:phone:reviewsInfo:state:zip:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) ScmSdkProviderDataReviewsInfo *reviewsInfo __attribute__((swift_name("reviewsInfo")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderData.ReviewsInfo")))
@interface ScmSdkProviderDataReviewsInfo : ScmSdkBase
- (instancetype)initWithAverageRating:(float)averageRating recentReviewDate:(NSString *)recentReviewDate reviewsNumber:(int32_t)reviewsNumber __attribute__((swift_name("init(averageRating:recentReviewDate:reviewsNumber:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderDataReviewsInfo *)doCopyAverageRating:(float)averageRating recentReviewDate:(NSString *)recentReviewDate reviewsNumber:(int32_t)reviewsNumber __attribute__((swift_name("doCopy(averageRating:recentReviewDate:reviewsNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float averageRating __attribute__((swift_name("averageRating")));
@property (readonly) NSString *recentReviewDate __attribute__((swift_name("recentReviewDate")));
@property (readonly) int32_t reviewsNumber __attribute__((swift_name("reviewsNumber")));
@end

__attribute__((swift_name("KotlinComparable")))
@protocol ScmSdkKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end

__attribute__((swift_name("KotlinEnum")))
@interface ScmSdkKotlinEnum<E> : ScmSdkBase <ScmSdkKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachmentSource")))
@interface ScmSdkAuditAttachmentSource : ScmSdkKotlinEnum<ScmSdkAuditAttachmentSource *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkAuditAttachmentSource *workOrder __attribute__((swift_name("workOrder")));
+ (ScmSdkKotlinArray<ScmSdkAuditAttachmentSource *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("SiteAuditToolsProvider")))
@protocol ScmSdkSiteAuditToolsProvider
@required
- (BOOL)isUseNumericRatingSystemAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("isUseNumericRatingSystem(auditCheckItemRatingSystem:)")));
- (int32_t)providePathThresholdAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("providePathThreshold(auditCheckItemRatingSystem:)")));
- (NSArray<ScmSdkInt *> *)provideRangeAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("provideRange(auditCheckItemRatingSystem:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditToolsProviderCompanion")))
@interface ScmSdkSiteAuditToolsProviderCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditToolsProviderCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) int32_t RATING_NA_SCORE_VALUE __attribute__((swift_name("RATING_NA_SCORE_VALUE")));
@property (readonly) int32_t RATING_UNTOUCHED_SCORE_VALUE __attribute__((swift_name("RATING_UNTOUCHED_SCORE_VALUE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditToolsProviderImpl")))
@interface ScmSdkSiteAuditToolsProviderImpl : ScmSdkBase <ScmSdkSiteAuditToolsProvider>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isUseNumericRatingSystemAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("isUseNumericRatingSystem(auditCheckItemRatingSystem:)")));
- (int32_t)providePathThresholdAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("providePathThreshold(auditCheckItemRatingSystem:)")));
- (NSArray<ScmSdkInt *> *)provideRangeAuditCheckItemRatingSystem:(int32_t)auditCheckItemRatingSystem __attribute__((swift_name("provideRange(auditCheckItemRatingSystem:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbackMapper")))
@interface ScmSdkFeedbackMapper : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkFeedback *)mapRemote:(ScmSdkFeedbackData *)remote __attribute__((swift_name("map(remote:)")));
@end

__attribute__((swift_name("GlobalCacheProvider")))
@protocol ScmSdkGlobalCacheProvider
@required
- (ScmSdkInvoicesState *)getInvoicesState __attribute__((swift_name("getInvoicesState()")));
- (NSDictionary<ScmSdkInt *, ScmSdkWorkOrderLocation *> *)getWorkOrderLocationsState __attribute__((swift_name("getWorkOrderLocationsState()")));
- (void)setInvoicesStateState:(ScmSdkInvoicesState *)state __attribute__((swift_name("setInvoicesState(state:)")));
- (void)setWorkOrderLocationsStateState:(NSArray<ScmSdkWorkOrderLocation *> *)state __attribute__((swift_name("setWorkOrderLocationsState(state:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GlobalCacheProviderImpl")))
@interface ScmSdkGlobalCacheProviderImpl : ScmSdkBase <ScmSdkGlobalCacheProvider>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkInvoicesState *)getInvoicesState __attribute__((swift_name("getInvoicesState()")));
- (NSDictionary<ScmSdkInt *, ScmSdkWorkOrderLocation *> *)getWorkOrderLocationsState __attribute__((swift_name("getWorkOrderLocationsState()")));
- (void)setInvoicesStateState:(ScmSdkInvoicesState *)state __attribute__((swift_name("setInvoicesState(state:)")));
- (void)setWorkOrderLocationsStateState:(NSArray<ScmSdkWorkOrderLocation *> *)state __attribute__((swift_name("setWorkOrderLocationsState(state:)")));
@end


/**
 * API for methods related to subscriber.
 * @throws [UserFeatureException.AuthorizedUserOnlyException] if user is unauthorized.
 */
__attribute__((swift_name("ScmCreateWorkOrder")))
@protocol ScmSdkScmCreateWorkOrder
@required

/**
 * Get all additional approval codes by location and category.
 * @param locationId Location id.
 * @param category Name of category.
 * @return [ApprovalCodes]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getApprovalCodesLocationId:(int32_t)locationId category:(NSString *)category completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getApprovalCodes(locationId:category:completionHandler:)")));

/**
 * Get GL code by location, trade and category.
 * @param locationId Location id.
 * @param trade Name of trade.
 * @param category Name of category.
 * @return GL code - [String]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGlCodeLocationId:(int32_t)locationId trade:(NSString *)trade category:(NSString *)category completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getGlCode(locationId:trade:category:completionHandler:)")));

/**
 * Return [List] of [NoteEmail] Note Email Addresses for subscriber
 *
 * @param subscriberId - subscriber id
 * @param setupId - setup id of dashboard user
 * @param locationId - location id
 * @param providerId - provider id
 * @param trade - name of trade
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNoteEmailAddressesSubscriberId:(int32_t)subscriberId setupId:(int32_t)setupId locationId:(int32_t)locationId providerId:(int32_t)providerId trade:(NSString *)trade completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getNoteEmailAddresses(subscriberId:setupId:locationId:providerId:trade:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApprovalCodeType")))
@interface ScmSdkApprovalCodeType : ScmSdkKotlinEnum<ScmSdkApprovalCodeType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkApprovalCodeType *text __attribute__((swift_name("text")));
@property (class, readonly) ScmSdkApprovalCodeType *list __attribute__((swift_name("list")));
+ (ScmSdkKotlinArray<ScmSdkApprovalCodeType *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApprovalCodes")))
@interface ScmSdkApprovalCodes : ScmSdkBase
- (instancetype)initWithApprovalCodes:(NSArray<ScmSdkApprovalCodesApprovalCode *> *)approvalCodes errorCode:(int32_t)errorCode message:(NSString *)message __attribute__((swift_name("init(approvalCodes:errorCode:message:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkApprovalCodesApprovalCode *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkApprovalCodes *)doCopyApprovalCodes:(NSArray<ScmSdkApprovalCodesApprovalCode *> *)approvalCodes errorCode:(int32_t)errorCode message:(NSString *)message __attribute__((swift_name("doCopy(approvalCodes:errorCode:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkApprovalCodesApprovalCode *> *approvalCodes __attribute__((swift_name("approvalCodes")));
@property (readonly) int32_t errorCode __attribute__((swift_name("errorCode")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApprovalCodes.ApprovalCode")))
@interface ScmSdkApprovalCodesApprovalCode : ScmSdkBase
- (instancetype)initWithId:(int32_t)id category:(NSString *)category categoryId:(int32_t)categoryId code:(NSString *)code defaultOption:(NSString *)defaultOption defaultOptionId:(int32_t)defaultOptionId editableAtLineItemLevel:(BOOL)editableAtLineItemLevel isEnabled:(BOOL)isEnabled locationId:(int32_t)locationId locationName:(NSString *)locationName locationStoreId:(NSString *)locationStoreId name:(NSString *)name options:(NSArray<ScmSdkApprovalCodesOption *> *)options orderNumber:(int32_t)orderNumber subscriberId:(int32_t)subscriberId type:(ScmSdkApprovalCodeType *)type __attribute__((swift_name("init(id:category:categoryId:code:defaultOption:defaultOptionId:editableAtLineItemLevel:isEnabled:locationId:locationName:locationStoreId:name:options:orderNumber:subscriberId:type:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkApprovalCodesOption *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkApprovalCodeType *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkApprovalCodesApprovalCode *)doCopyId:(int32_t)id category:(NSString *)category categoryId:(int32_t)categoryId code:(NSString *)code defaultOption:(NSString *)defaultOption defaultOptionId:(int32_t)defaultOptionId editableAtLineItemLevel:(BOOL)editableAtLineItemLevel isEnabled:(BOOL)isEnabled locationId:(int32_t)locationId locationName:(NSString *)locationName locationStoreId:(NSString *)locationStoreId name:(NSString *)name options:(NSArray<ScmSdkApprovalCodesOption *> *)options orderNumber:(int32_t)orderNumber subscriberId:(int32_t)subscriberId type:(ScmSdkApprovalCodeType *)type __attribute__((swift_name("doCopy(id:category:categoryId:code:defaultOption:defaultOptionId:editableAtLineItemLevel:isEnabled:locationId:locationName:locationStoreId:name:options:orderNumber:subscriberId:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) int32_t categoryId __attribute__((swift_name("categoryId")));
@property (readonly) NSString *code __attribute__((swift_name("code")));
@property (readonly) NSString *defaultOption __attribute__((swift_name("defaultOption")));
@property (readonly) int32_t defaultOptionId __attribute__((swift_name("defaultOptionId")));
@property (readonly) BOOL editableAtLineItemLevel __attribute__((swift_name("editableAtLineItemLevel")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isEnabled __attribute__((swift_name("isEnabled")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) NSString *locationStoreId __attribute__((swift_name("locationStoreId")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<ScmSdkApprovalCodesOption *> *options __attribute__((swift_name("options")));
@property (readonly) int32_t orderNumber __attribute__((swift_name("orderNumber")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) ScmSdkApprovalCodeType *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApprovalCodes.Option")))
@interface ScmSdkApprovalCodesOption : ScmSdkBase
- (instancetype)initWithId:(int32_t)id additionalApprovalCodeId:(int32_t)additionalApprovalCodeId optionValue:(NSString *)optionValue __attribute__((swift_name("init(id:additionalApprovalCodeId:optionValue:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkApprovalCodesOption *)doCopyId:(int32_t)id additionalApprovalCodeId:(int32_t)additionalApprovalCodeId optionValue:(NSString *)optionValue __attribute__((swift_name("doCopy(id:additionalApprovalCodeId:optionValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t additionalApprovalCodeId __attribute__((swift_name("additionalApprovalCodeId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *optionValue __attribute__((swift_name("optionValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteEmail")))
@interface ScmSdkNoteEmail : ScmSdkBase
- (instancetype)initWithId:(NSString *)id email:(NSString *)email name:(NSString *)name isDeletable:(BOOL)isDeletable isAc:(BOOL)isAc isFm:(BOOL)isFm __attribute__((swift_name("init(id:email:name:isDeletable:isAc:isFm:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteEmail *)doCopyId:(NSString *)id email:(NSString *)email name:(NSString *)name isDeletable:(BOOL)isDeletable isAc:(BOOL)isAc isFm:(BOOL)isFm __attribute__((swift_name("doCopy(id:email:name:isDeletable:isAc:isFm:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) BOOL isAc __attribute__((swift_name("isAc")));
@property (readonly) BOOL isDeletable __attribute__((swift_name("isDeletable")));
@property (readonly) BOOL isFm __attribute__((swift_name("isFm")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end


/**
 * A discriminated union that encapsulates a successful outcome with a value of type [T]
 * or a failure with an arbitrary [Throwable] exception.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScResult")))
@interface ScmSdkScResult<__covariant T> : ScmSdkBase
@property (class, readonly, getter=companion) ScmSdkScResultCompanion *companion __attribute__((swift_name("companion")));

/**
 * A discriminated union that encapsulates a successful outcome with a value of type [T]
 * or a failure with an arbitrary [Throwable] exception.
 */
- (ScmSdkScResult<T> *)doCopyValue:(id _Nullable)value __attribute__((swift_name("doCopy(value:)")));

/**
 * A discriminated union that encapsulates a successful outcome with a value of type [T]
 * or a failure with an arbitrary [Throwable] exception.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Returns the encapsulated [Throwable] exception
 * if this instance represents [failure][isFailure] or `null`
 * if it is [success][isSuccess].
 *
 */
- (ScmSdkKotlinThrowable * _Nullable)exceptionOrNull __attribute__((swift_name("exceptionOrNull()")));
- (T _Nullable)getOrNull __attribute__((swift_name("getOrNull()")));

/**
 * A discriminated union that encapsulates a successful outcome with a value of type [T]
 * or a failure with an arbitrary [Throwable] exception.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * A discriminated union that encapsulates a successful outcome with a value of type [T]
 * or a failure with an arbitrary [Throwable] exception.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Returns `true` if this instance represents a failed outcome.
 * In this case [isSuccess] returns `false`.
 */
@property (readonly) BOOL isFailure __attribute__((swift_name("isFailure")));

/**
 * Returns `true` if this instance represents a successful outcome.
 * In this case [isFailure] returns `false`.
 */
@property (readonly) BOOL isSuccess __attribute__((swift_name("isSuccess")));
@end


/**
 * Companion object for [ScResult] class that contains its constructor functions
 * [success] and [failure].
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScResultCompanion")))
@interface ScmSdkScResultCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Companion object for [ScResult] class that contains its constructor functions
 * [success] and [failure].
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkScResultCompanion *shared __attribute__((swift_name("shared")));

/**
 * Returns an instance that encapsulates the given [Throwable] [exception] as failure.
 *
 * @note annotations
 *   kotlin.jvm.JvmName(name="failure")
*/
- (ScmSdkScResult<id> *)failureException:(ScmSdkKotlinThrowable *)exception __attribute__((swift_name("failure(exception:)")));

/**
 * Returns an instance that encapsulates the given [value] as successful value.
 *
 * @note annotations
 *   kotlin.jvm.JvmName(name="success")
*/
- (ScmSdkScResult<id> *)successValue:(id _Nullable)value __attribute__((swift_name("success(value:)")));
@end

__attribute__((swift_name("KotlinThrowable")))
@interface ScmSdkKotlinThrowable : ScmSdkBase
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end


/**
 * Errors that the SDK returns
 * Errors are divided into groups:
 * validation @see[ValidationParamsException],
 * network @see[NetworkException],
 * cache @see[CacheException],
 * features @see[FeatureException] errors
 * etc.
 */
__attribute__((swift_name("SdkException")))
@interface ScmSdkSdkException : ScmSdkKotlinThrowable
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable throwable __attribute__((swift_name("throwable")));
@end


/**
 * Base class for errors related to functionality for the user.
 */
__attribute__((swift_name("FeatureException")))
@interface ScmSdkFeatureException : ScmSdkSdkException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));

/**
 * Base class for errors related to functionality for the user.
 */
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((swift_name("AuthException")))
@interface ScmSdkAuthException : ScmSdkFeatureException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 *
 * @param internalCode - internal error code
 * @param message  - message from the server explaining the error
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.AuthNotSuccessfulException")))
@interface ScmSdkAuthExceptionAuthNotSuccessfulException : ScmSdkAuthException
- (instancetype)initWithInternalCode:(int32_t)internalCode message:(NSString *)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(internalCode:message:throwable:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *
 * @param internalCode - internal error code
 * @param message  - message from the server explaining the error
 */
- (ScmSdkAuthExceptionAuthNotSuccessfulException *)doCopyInternalCode:(int32_t)internalCode message:(NSString *)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("doCopy(internalCode:message:throwable:)")));

/**
 *
 * @param internalCode - internal error code
 * @param message  - message from the server explaining the error
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 *
 * @param internalCode - internal error code
 * @param message  - message from the server explaining the error
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 *
 * @param internalCode - internal error code
 * @param message  - message from the server explaining the error
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t internalCode __attribute__((swift_name("internalCode")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable throwable __attribute__((swift_name("throwable")));
@end

__attribute__((swift_name("AuthException.SsoException")))
@interface ScmSdkAuthExceptionSsoException : ScmSdkAuthException
@end


/**
 * trying to re-register the SSO identifier
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.SsoExceptionClientRegisteredException")))
@interface ScmSdkAuthExceptionSsoExceptionClientRegisteredException : ScmSdkAuthException
- (instancetype)initWithDeviceId:(NSString * _Nullable)deviceId __attribute__((swift_name("init(deviceId:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * trying to re-register the SSO identifier
 */
- (ScmSdkAuthExceptionSsoExceptionClientRegisteredException *)doCopyDeviceId:(NSString * _Nullable)deviceId __attribute__((swift_name("doCopy(deviceId:)")));

/**
 * trying to re-register the SSO identifier
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * trying to re-register the SSO identifier
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * trying to re-register the SSO identifier
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable deviceId __attribute__((swift_name("deviceId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.SsoExceptionEmptySsoIdentifierException")))
@interface ScmSdkAuthExceptionSsoExceptionEmptySsoIdentifierException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptySsoIdentifierException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionSsoExceptionEmptySsoIdentifierException *shared __attribute__((swift_name("shared")));
@end


/**
 * Cannot Identify Device.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.SsoExceptionInvalidClientIdentifierException")))
@interface ScmSdkAuthExceptionSsoExceptionInvalidClientIdentifierException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Cannot Identify Device.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)invalidClientIdentifierException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionSsoExceptionInvalidClientIdentifierException *shared __attribute__((swift_name("shared")));
@end


/**
 * SSO code not found or expired.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.SsoExceptionSsoAccessCodeNotFoundOrExpiredException")))
@interface ScmSdkAuthExceptionSsoExceptionSsoAccessCodeNotFoundOrExpiredException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * SSO code not found or expired.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)ssoAccessCodeNotFoundOrExpiredException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionSsoExceptionSsoAccessCodeNotFoundOrExpiredException *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("AuthException.UniversalUserException")))
@interface ScmSdkAuthExceptionUniversalUserException : ScmSdkAuthException
@end


/**
 * Child account was disabled for the universal user.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UniversalUserExceptionAccountDisabled")))
@interface ScmSdkAuthExceptionUniversalUserExceptionAccountDisabled : ScmSdkAuthExceptionUniversalUserException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Child account was disabled for the universal user.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)accountDisabled __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUniversalUserExceptionAccountDisabled *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("AuthException.UserIdException")))
@interface ScmSdkAuthExceptionUserIdException : ScmSdkAuthException
@end


/**
 * Account was blocked.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UserIdExceptionAccountLocked")))
@interface ScmSdkAuthExceptionUserIdExceptionAccountLocked : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Account was blocked.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)accountLocked __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUserIdExceptionAccountLocked *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UserIdExceptionInvalidCredentials")))
@interface ScmSdkAuthExceptionUserIdExceptionInvalidCredentials : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)invalidCredentials __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUserIdExceptionInvalidCredentials *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UserIdExceptionNotConfiguredUserRoleException")))
@interface ScmSdkAuthExceptionUserIdExceptionNotConfiguredUserRoleException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notConfiguredUserRoleException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUserIdExceptionNotConfiguredUserRoleException *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UserIdExceptionNotSupportLoginException")))
@interface ScmSdkAuthExceptionUserIdExceptionNotSupportLoginException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notSupportLoginException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUserIdExceptionNotSupportLoginException *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthException.UserIdExceptionNotSupportProviderLoginException")))
@interface ScmSdkAuthExceptionUserIdExceptionNotSupportProviderLoginException : ScmSdkAuthException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notSupportProviderLoginException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuthExceptionUserIdExceptionNotSupportProviderLoginException *shared __attribute__((swift_name("shared")));
@end


/**
 * Exceptions for invoice feature.
 */
__attribute__((swift_name("InvoicesException")))
@interface ScmSdkInvoicesException : ScmSdkFeatureException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 * Load list API exceptions.
 */
__attribute__((swift_name("InvoicesException.LoadListException")))
@interface ScmSdkInvoicesExceptionLoadListException : ScmSdkInvoicesException
@end


/**
 * Search invoices API exceptions.
 */
__attribute__((swift_name("InvoicesException.SearchException")))
@interface ScmSdkInvoicesExceptionSearchException : ScmSdkInvoicesException
@end


/**
 * It is only possible to upload data.
 * [InvoiceLoadCommand.NEXT]  - The call is possible only if there is already a cache.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesException.LoadListExceptionCantLoadNextPageException")))
@interface ScmSdkInvoicesExceptionLoadListExceptionCantLoadNextPageException : ScmSdkInvoicesExceptionSearchException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * It is only possible to upload data.
 * [InvoiceLoadCommand.NEXT]  - The call is possible only if there is already a cache.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cantLoadNextPageException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoicesExceptionLoadListExceptionCantLoadNextPageException *shared __attribute__((swift_name("shared")));
@end


/**
 * Search Invoice Number can't be null.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesException.SearchExceptionEmptySearchNumberException")))
@interface ScmSdkInvoicesExceptionSearchExceptionEmptySearchNumberException : ScmSdkInvoicesExceptionSearchException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Search Invoice Number can't be null.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptySearchNumberException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoicesExceptionSearchExceptionEmptySearchNumberException *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("SdkException.CacheException")))
@interface ScmSdkSdkExceptionCacheException : ScmSdkSdkException
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.CacheExceptionNoDataException")))
@interface ScmSdkSdkExceptionCacheExceptionNoDataException : ScmSdkSdkExceptionCacheException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)noDataException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkExceptionCacheExceptionNoDataException *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("SdkException.NetworkException")))
@interface ScmSdkSdkExceptionNetworkException : ScmSdkSdkException
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionEmptyResponseException")))
@interface ScmSdkSdkExceptionNetworkExceptionEmptyResponseException : ScmSdkSdkExceptionNetworkException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptyResponseException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkExceptionNetworkExceptionEmptyResponseException *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionHttpStatusException")))
@interface ScmSdkSdkExceptionNetworkExceptionHttpStatusException : ScmSdkSdkExceptionNetworkException
- (instancetype)initWithHttpStatus:(int32_t)httpStatus __attribute__((swift_name("init(httpStatus:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkExceptionNetworkExceptionHttpStatusException *)doCopyHttpStatus:(int32_t)httpStatus __attribute__((swift_name("doCopy(httpStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t httpStatus __attribute__((swift_name("httpStatus")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionNetworkConnection")))
@interface ScmSdkSdkExceptionNetworkExceptionNetworkConnection : ScmSdkSdkExceptionNetworkException
- (instancetype)initWithReasonMessage:(NSString *)reasonMessage __attribute__((swift_name("init(reasonMessage:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkExceptionNetworkExceptionNetworkConnection *)doCopyReasonMessage:(NSString *)reasonMessage __attribute__((swift_name("doCopy(reasonMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *reasonMessage __attribute__((swift_name("reasonMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionResponseException")))
@interface ScmSdkSdkExceptionNetworkExceptionResponseException : ScmSdkSdkExceptionNetworkException
- (instancetype)initWithHttpStatus:(int32_t)httpStatus internalCode:(int32_t)internalCode message:(NSString *)message __attribute__((swift_name("init(httpStatus:internalCode:message:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkExceptionNetworkExceptionResponseException *)doCopyHttpStatus:(int32_t)httpStatus internalCode:(int32_t)internalCode message:(NSString *)message __attribute__((swift_name("doCopy(httpStatus:internalCode:message:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t httpStatus __attribute__((swift_name("httpStatus")));
@property (readonly) int32_t internalCode __attribute__((swift_name("internalCode")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionTimeoutException")))
@interface ScmSdkSdkExceptionNetworkExceptionTimeoutException : ScmSdkSdkExceptionNetworkException
- (instancetype)initWithTimeoutCause:(id<ScmSdkTimeoutCause>)timeoutCause __attribute__((swift_name("init(timeoutCause:)"))) __attribute__((objc_designated_initializer));
- (id<ScmSdkTimeoutCause>)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkExceptionNetworkExceptionTimeoutException *)doCopyTimeoutCause:(id<ScmSdkTimeoutCause>)timeoutCause __attribute__((swift_name("doCopy(timeoutCause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkTimeoutCause> timeoutCause __attribute__((swift_name("timeoutCause")));
@end


/**
 * the request has not been applied because
 * it lacks valid authentication credentials for the target resource.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.NetworkExceptionUnauthorized")))
@interface ScmSdkSdkExceptionNetworkExceptionUnauthorized : ScmSdkSdkExceptionNetworkException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * the request has not been applied because
 * it lacks valid authentication credentials for the target resource.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unauthorized __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkExceptionNetworkExceptionUnauthorized *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.UncheckableException")))
@interface ScmSdkSdkExceptionUncheckableException : ScmSdkSdkException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)uncheckableException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkExceptionUncheckableException *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.UnknownException")))
@interface ScmSdkSdkExceptionUnknownException : ScmSdkSdkException
- (instancetype)initWithMessage:(NSString *)message throwable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkExceptionUnknownException *)doCopyMessage:(NSString *)message throwable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("doCopy(message:throwable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) ScmSdkKotlinThrowable *throwable __attribute__((swift_name("throwable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkException.UpdateApplicationException")))
@interface ScmSdkSdkExceptionUpdateApplicationException : ScmSdkSdkException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)updateApplicationException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkExceptionUpdateApplicationException *shared __attribute__((swift_name("shared")));
@end


/**
 * Exceptions for site audit feature.
 */
__attribute__((swift_name("SiteAuditException")))
@interface ScmSdkSiteAuditException : ScmSdkFeatureException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 * If the upload from background method fails.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditException.SiteAuditBackGroundServiceNotUploaded")))
@interface ScmSdkSiteAuditExceptionSiteAuditBackGroundServiceNotUploaded : ScmSdkSiteAuditException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * If the upload from background method fails.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)siteAuditBackGroundServiceNotUploaded __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditExceptionSiteAuditBackGroundServiceNotUploaded *shared __attribute__((swift_name("shared")));
@end


/**
 * User try to upload attachments and they not all uploaded.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditException.SiteAuditNotAllAttachmentsUploaded")))
@interface ScmSdkSiteAuditExceptionSiteAuditNotAllAttachmentsUploaded : ScmSdkSiteAuditException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to upload attachments and they not all uploaded.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)siteAuditNotAllAttachmentsUploaded __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditExceptionSiteAuditNotAllAttachmentsUploaded *shared __attribute__((swift_name("shared")));
@end


/**
 * User didn't fill all check items in the audit.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditException.SiteAuditNotFilledAudit")))
@interface ScmSdkSiteAuditExceptionSiteAuditNotFilledAudit : ScmSdkSiteAuditException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User didn't fill all check items in the audit.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)siteAuditNotFilledAudit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditExceptionSiteAuditNotFilledAudit *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditException.SiteAuditResponseException")))
@interface ScmSdkSiteAuditExceptionSiteAuditResponseException : ScmSdkSiteAuditException
- (instancetype)initWithError:(ScmSdkKotlinThrowable *)error __attribute__((swift_name("init(error:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkKotlinThrowable *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditExceptionSiteAuditResponseException *)doCopyError:(ScmSdkKotlinThrowable *)error __attribute__((swift_name("doCopy(error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable *error __attribute__((swift_name("error")));
@end

__attribute__((swift_name("TimeoutCause")))
@protocol ScmSdkTimeoutCause
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutCauseConnectTimeout")))
@interface ScmSdkTimeoutCauseConnectTimeout : ScmSdkBase <ScmSdkTimeoutCause>
- (instancetype)initWithMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkTimeoutCauseConnectTimeout *)doCopyMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("doCopy(message:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutCauseHttpRequestTimeout")))
@interface ScmSdkTimeoutCauseHttpRequestTimeout : ScmSdkBase <ScmSdkTimeoutCause>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)httpRequestTimeout __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkTimeoutCauseHttpRequestTimeout *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeoutCauseSocketTimeout")))
@interface ScmSdkTimeoutCauseSocketTimeout : ScmSdkBase <ScmSdkTimeoutCause>
- (instancetype)initWithMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkTimeoutCauseSocketTimeout *)doCopyMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("doCopy(message:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end


/**
 * Exceptions related to user access to the functionality.
 */
__attribute__((swift_name("UserFeatureException")))
@interface ScmSdkUserFeatureException : ScmSdkFeatureException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 *  functionality is available only for the authorized user
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserFeatureException.AuthorizedUserOnlyException")))
@interface ScmSdkUserFeatureExceptionAuthorizedUserOnlyException : ScmSdkUserFeatureException
+ (instancetype)alloc __attribute__((unavailable));

/**
 *  functionality is available only for the authorized user
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)authorizedUserOnlyException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkUserFeatureExceptionAuthorizedUserOnlyException *shared __attribute__((swift_name("shared")));
@end


/**
 * functionality is available only for the universal user
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserFeatureException.UniversalUserOnlyException")))
@interface ScmSdkUserFeatureExceptionUniversalUserOnlyException : ScmSdkUserFeatureException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * functionality is available only for the universal user
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)universalUserOnlyException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkUserFeatureExceptionUniversalUserOnlyException *shared __attribute__((swift_name("shared")));
@end


/**
 * Thrown to indicate that a method has been passed an illegal or inappropriate argument.
 */
__attribute__((swift_name("ValidationParamsException")))
@interface ScmSdkValidationParamsException : ScmSdkSdkException
- (instancetype)initWithMessage:(NSString * _Nullable)message throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(message:throwable:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidationParamsException.EmptyParamsException")))
@interface ScmSdkValidationParamsExceptionEmptyParamsException : ScmSdkValidationParamsException
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)emptyParamsException __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkValidationParamsExceptionEmptyParamsException *shared __attribute__((swift_name("shared")));
@end


/**
 * Exceptions for work order feature.
 */
__attribute__((swift_name("WorkOrderException")))
@interface ScmSdkWorkOrderException : ScmSdkFeatureException

/**
 * Base class for errors related to functionality for the user.
 */
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
@end


/**
 * User try to find category by id, but it does not exist.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderException.WorkOrderUnknownCategoryId")))
@interface ScmSdkWorkOrderExceptionWorkOrderUnknownCategoryId : ScmSdkWorkOrderException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to find category by id, but it does not exist.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)workOrderUnknownCategoryId __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderExceptionWorkOrderUnknownCategoryId *shared __attribute__((swift_name("shared")));
@end


/**
 * User try to find priority by id, but it does not exist.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderException.WorkOrderUnknownPriorityId")))
@interface ScmSdkWorkOrderExceptionWorkOrderUnknownPriorityId : ScmSdkWorkOrderException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to find priority by id, but it does not exist.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)workOrderUnknownPriorityId __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderExceptionWorkOrderUnknownPriorityId *shared __attribute__((swift_name("shared")));
@end


/**
 * User try to find provider by id, but it does not exist.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderException.WorkOrderUnknownProviderId")))
@interface ScmSdkWorkOrderExceptionWorkOrderUnknownProviderId : ScmSdkWorkOrderException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to find provider by id, but it does not exist.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)workOrderUnknownProviderId __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderExceptionWorkOrderUnknownProviderId *shared __attribute__((swift_name("shared")));
@end


/**
 * User try to find trade by id, but it does not exist.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderException.WorkOrderUnknownTradeId")))
@interface ScmSdkWorkOrderExceptionWorkOrderUnknownTradeId : ScmSdkWorkOrderException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to find trade by id, but it does not exist.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)workOrderUnknownTradeId __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderExceptionWorkOrderUnknownTradeId *shared __attribute__((swift_name("shared")));
@end


/**
 * User try to find weather type by id, but it does not exist.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderException.WorkOrderUnknownWeatherTypeId")))
@interface ScmSdkWorkOrderExceptionWorkOrderUnknownWeatherTypeId : ScmSdkWorkOrderException
+ (instancetype)alloc __attribute__((unavailable));

/**
 * User try to find weather type by id, but it does not exist.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)workOrderUnknownWeatherTypeId __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderExceptionWorkOrderUnknownWeatherTypeId *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("ScmNotifications")))
@protocol ScmSdkScmNotifications
@required

/**
 * this method used for delete [LocationNotification] on current device and delete subscription info on backend side
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteLocationNotificationDeviceParams:(ScmSdkDeviceParams *)deviceParams completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteLocationNotification(deviceParams:completionHandler:)")));

/**
 * method provide actual information about [NotificationSettings]
 * list will contain only enabled subscription for chosen location and device token.
 * It will be empty in case if there is no some/any subscription for push or email notification
 * @return List of [NotificationSettings]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNotificationSettingsLocationId:(int32_t)locationId deviceToken:(NSString *)deviceToken completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getNotificationSettings(locationId:deviceToken:completionHandler:)")));

/**
 * @returns Boolean value of [com.servicechannel.scmsdk.api.features.user.model.params.FeatureParams.NOTIFICATION_FOR_COMPLETED_WO_ENABLED]
 * feature flag
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isNotificationForCompletedWOEnabledWithCompletionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isNotificationForCompletedWOEnabled(completionHandler:)")));

/**
 * update push notification settings with new device params
 * @param deviceParams main device info which need for subscription
 * Note [DeviceParams.locationId] will be updated automatically so you can set any value
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)onRefreshTokenDeviceParams:(ScmSdkDeviceParams *)deviceParams completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("onRefreshToken(deviceParams:completionHandler:)")));

/**
 * save [LocationNotification] on current device
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveLocationNotificationLocationId:(int32_t)locationId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("saveLocationNotification(locationId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:completionHandler:)")));

/**
 * this method provide list of all available [LocationNotification] on current device
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeLocationNotificationsWithCompletionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeLocationNotifications(completionHandler:)")));

/**
 * method which will update [NotificationSettings] for chosen location,
 * also it will prevent exception in case of [ALREADY_DELETED_HTTP_CODE] or [ALREADY_EXIST_HTTP_CODE]
 * @param deviceParams main device info which need for subscription
 * @param oldValues list of settings which were provided by [getNotificationSettings] method
 * this param used for check if update needed in combination with [updateParams]
 * CAN BE EMPTY ONLY IN CASE IF [getNotificationSettings] RETURNS NOTHING
 * @param updateParams list of values for update
 * can contain all values if needed because it will be checked with [oldValues]
 * Must contain [com.servicechannel.scmsdk.api.features.notifications.model.params.NotificationType.BADGE_SCAN_REQUIRED]
 * in case of updating info for [com.servicechannel.scmsdk.api.features.notifications.model.params.NotificationType.CHECK_IN]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNotificationSettingsDeviceParams:(ScmSdkDeviceParams *)deviceParams oldValues:(NSArray<ScmSdkNotificationSettings *> *)oldValues updateParams:(NSArray<ScmSdkNotificationSettings *> *)updateParams completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("updateNotificationSettings(deviceParams:oldValues:updateParams:completionHandler:)")));
@end

__attribute__((swift_name("ScmNotificationsUnsubscribeFromPushes")))
@protocol ScmSdkScmNotificationsUnsubscribeFromPushes
@required

/**
 * method will unsubscribe current user from all pushes
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)unsubscribeFromPushesDeviceToken:(NSString *)deviceToken completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("unsubscribeFromPushes(deviceToken:completionHandler:)")));
@end

__attribute__((swift_name("SubscriptionEvent")))
@protocol ScmSdkSubscriptionEvent
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Delete")))
@interface ScmSdkDelete : ScmSdkBase <ScmSdkSubscriptionEvent>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)delete_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkDelete *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeviceParams")))
@interface ScmSdkDeviceParams : ScmSdkBase
- (instancetype)initWithLocationId:(int32_t)locationId deviceToken:(NSString *)deviceToken deviceType:(ScmSdkDeviceType *)deviceType application:(ScmSdkApplication *)application languageCode:(NSString *)languageCode __attribute__((swift_name("init(locationId:deviceToken:deviceType:application:languageCode:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDeviceType *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkApplication *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDeviceParams *)doCopyLocationId:(int32_t)locationId deviceToken:(NSString *)deviceToken deviceType:(ScmSdkDeviceType *)deviceType application:(ScmSdkApplication *)application languageCode:(NSString *)languageCode __attribute__((swift_name("doCopy(locationId:deviceToken:deviceType:application:languageCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkApplication *application __attribute__((swift_name("application")));
@property (readonly) NSString *deviceToken __attribute__((swift_name("deviceToken")));
@property (readonly) ScmSdkDeviceType *deviceType __attribute__((swift_name("deviceType")));
@property (readonly) NSString *languageCode __attribute__((swift_name("languageCode")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocationNotification")))
@interface ScmSdkLocationNotification : ScmSdkBase
- (instancetype)initWithLocationId:(int32_t)locationId userId:(int32_t)userId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly __attribute__((swift_name("init(locationId:userId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocationNotification *)doCopyLocationId:(int32_t)locationId userId:(int32_t)userId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly __attribute__((swift_name("doCopy(locationId:userId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isCheckInPushEnabled __attribute__((swift_name("isCheckInPushEnabled")));
@property (readonly) BOOL isCheckOutPushEnabled __attribute__((swift_name("isCheckOutPushEnabled")));
@property (readonly) BOOL isForCompletedOnly __attribute__((swift_name("isForCompletedOnly")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationSettings")))
@interface ScmSdkNotificationSettings : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isEnabled:(BOOL)isEnabled notificationType:(ScmSdkNotificationType *)notificationType subscriptionType:(ScmSdkSubscriptionType *)subscriptionType isForCompletedWOOnly:(BOOL)isForCompletedWOOnly __attribute__((swift_name("init(id:isEnabled:notificationType:subscriptionType:isForCompletedWOOnly:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNotificationType *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSubscriptionType *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNotificationSettings *)doCopyId:(int32_t)id isEnabled:(BOOL)isEnabled notificationType:(ScmSdkNotificationType *)notificationType subscriptionType:(ScmSdkSubscriptionType *)subscriptionType isForCompletedWOOnly:(BOOL)isForCompletedWOOnly __attribute__((swift_name("doCopy(id:isEnabled:notificationType:subscriptionType:isForCompletedWOOnly:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isEnabled __attribute__((swift_name("isEnabled")));
@property (readonly) BOOL isForCompletedWOOnly __attribute__((swift_name("isForCompletedWOOnly")));
@property (readonly) ScmSdkNotificationType *notificationType __attribute__((swift_name("notificationType")));
@property (readonly) ScmSdkSubscriptionType *subscriptionType __attribute__((swift_name("subscriptionType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Subscribe")))
@interface ScmSdkSubscribe : ScmSdkBase <ScmSdkSubscriptionEvent>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)subscribe __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSubscribe *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Update")))
@interface ScmSdkUpdate : ScmSdkBase <ScmSdkSubscriptionEvent>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)update __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkUpdate *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Application")))
@interface ScmSdkApplication : ScmSdkKotlinEnum<ScmSdkApplication *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkApplication *scMobile __attribute__((swift_name("scMobile")));
+ (ScmSdkKotlinArray<ScmSdkApplication *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeviceType")))
@interface ScmSdkDeviceType : ScmSdkKotlinEnum<ScmSdkDeviceType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkDeviceType *android __attribute__((swift_name("android")));
@property (class, readonly) ScmSdkDeviceType *ios __attribute__((swift_name("ios")));
@property (class, readonly) ScmSdkDeviceType *amazon __attribute__((swift_name("amazon")));
+ (ScmSdkKotlinArray<ScmSdkDeviceType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationType")))
@interface ScmSdkNotificationType : ScmSdkKotlinEnum<ScmSdkNotificationType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkNotificationTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkNotificationType *checkIn __attribute__((swift_name("checkIn")));
@property (class, readonly) ScmSdkNotificationType *checkOut __attribute__((swift_name("checkOut")));
@property (class, readonly) ScmSdkNotificationType *badgeScanRequired __attribute__((swift_name("badgeScanRequired")));
+ (ScmSdkKotlinArray<ScmSdkNotificationType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NotificationType.Companion")))
@interface ScmSdkNotificationTypeCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkNotificationTypeCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkNotificationType * _Nullable)getNotificationTypeType:(NSString *)type __attribute__((swift_name("getNotificationType(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubscriptionType")))
@interface ScmSdkSubscriptionType : ScmSdkKotlinEnum<ScmSdkSubscriptionType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkSubscriptionType *push __attribute__((swift_name("push")));
@property (class, readonly) ScmSdkSubscriptionType *email __attribute__((swift_name("email")));
+ (ScmSdkKotlinArray<ScmSdkSubscriptionType *> *)values __attribute__((swift_name("values()")));
@end


/**
 * API for to work with authorized user.
 * @throws [UserFeatureException.AuthorizedUserOnlyException] if user is unauthorized.
 */
__attribute__((swift_name("ScmAuthorizedUser")))
@protocol ScmSdkScmAuthorizedUser
@required

/**
 * @return default setup id
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDefaultUserSetupIdWithCompletionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDefaultUserSetupId(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFeedbackDashboardSettingsWithCompletionHandler:(void (^)(ScmSdkFeedbackDashboardSettings * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFeedbackDashboardSettings(completionHandler:)")));

/**
 * Returns subscriber ID for the current user
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSubscriberIdWithCompletionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSubscriberId(completionHandler:)")));

/**
 * Get url for SAML single logout if user logged in with SSO
 *
 * @return url to open in browser for SAML Single Logout
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUrlForSamlLogoutWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUrlForSamlLogout(completionHandler:)")));

/**
 * Only needed to maintain legacy customers.
 * Try to user [subscribeUser] method
 *
 * @return id of user
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserIdWithCompletionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserId(completionHandler:)")));

/**
 * Check if WO should be excluded from feedback rating
 * @param category - category of Work Order
 * @param trade - trade of Work Order
 * @param priority - priority of Work Order
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isExcludedFromFeedbackRatingCategory:(NSString *)category trade:(NSString *)trade priority:(NSString *)priority completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isExcludedFromFeedbackRating(category:trade:priority:completionHandler:)")));

/**
 * Custom question optional
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isQuestionOptionalWithCompletionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isQuestionOptional(completionHandler:)")));

/**
 * Clear user data
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logoutWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("logout(completionHandler:)")));

/**
 * Updates the user profile, features, and permissions.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshUserProfileWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("refreshUserProfile(completionHandler:)")));

/**
 * Universal User Only.
 *
 * @param subscriberId - child subscriber id
 * @throws [UserFeatureException.OnlyUniversalUserFunctionality]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setCurrentSubscriberSubscriberId:(int32_t)subscriberId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("setCurrentSubscriber(subscriberId:completionHandler:)")));

/**
 * Universal User Only.
 * List of universal user subscribers
 */
- (id<ScmSdkKotlinx_coroutines_coreFlow>)subscribeSubsidiaries __attribute__((swift_name("subscribeSubsidiaries()")));

/**
 * Subscribe for change user profile.
 *
 * @return [User] - current profile
 */
- (id<ScmSdkKotlinx_coroutines_coreFlow>)subscribeUser __attribute__((swift_name("subscribeUser()")));
@end


/**
 * API for to work with unauthorized user.
 */
__attribute__((swift_name("ScmUnauthorizedUser")))
@protocol ScmSdkScmUnauthorizedUser
@required

/**
 * @return true - if user authorized
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isAuthorizedWithCompletionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isAuthorized(completionHandler:)")));
@end


/**
 * API for determining the flags and permissions available to the user of the feature.
 * @throws [UserFeatureException.AuthorizedUserOnlyException] if user is unauthorized.
 */
__attribute__((swift_name("ScmUserAccess")))
@protocol ScmSdkScmUserAccess
@required

/**
 * @return [AppSettingWithValue] - app setting with value (int, string ect.)
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAppSettingsValueSetting:(ScmSdkAppSettingWithValueParams *)setting completionHandler:(void (^)(id<ScmSdkAppSettingWithValue> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAppSettingsValue(setting:completionHandler:)")));

/**
 * @param setupId Id of dashboard.
 * @return [AppSettingWithValue] - app setting with value (int, string ect.)
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAppSettingsValueSetupId:(int32_t)setupId setting:(ScmSdkAppSettingWithValueParams *)setting completionHandler:(void (^)(id<ScmSdkAppSettingWithValue> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAppSettingsValue(setupId:setting:completionHandler:)")));

/**
 * Get all dashboard settings by user default setupId (dashboardId).
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardSettingsWithCompletionHandler:(void (^)(ScmSdkDashboardSettings * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboardSettings(completionHandler:)")));

/**
 * Get all dashboard settings by setupId (dashboardId).
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDashboardSettingsSetupId:(int32_t)setupId completionHandler:(void (^)(ScmSdkDashboardSettings * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDashboardSettings(setupId:completionHandler:)")));

/**
 * @return true - if the app setting enabled
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isAppSettingsEnabledSetting:(ScmSdkAppSettingParams *)setting completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isAppSettingsEnabled(setting:completionHandler:)")));

/**
 * @param setupId Id of dashboard.
 * @return true - if the app setting enabled
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isAppSettingsEnabledSetupId:(int32_t)setupId setting:(ScmSdkAppSettingParams *)setting completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isAppSettingsEnabled(setupId:setting:completionHandler:)")));

/**
 * @return true - if the feature enabled
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isFeatureEnabledFeature:(ScmSdkFeatureParams *)feature completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isFeatureEnabled(feature:completionHandler:)")));

/**
 * @return true - if the permission granted
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isPermissionGrantedPermission:(ScmSdkUserPermissionParams *)permission completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isPermissionGranted(permission:completionHandler:)")));
@end

__attribute__((swift_name("AppSettingWithValue")))
@protocol ScmSdkAppSettingWithValue
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingWithValueConfirmationMessage")))
@interface ScmSdkAppSettingWithValueConfirmationMessage : ScmSdkBase <ScmSdkAppSettingWithValue>
- (instancetype)initWithConfirmationMessage:(NSString * _Nullable)confirmationMessage __attribute__((swift_name("init(confirmationMessage:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettingWithValueConfirmationMessage *)doCopyConfirmationMessage:(NSString * _Nullable)confirmationMessage __attribute__((swift_name("doCopy(confirmationMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable confirmationMessage __attribute__((swift_name("confirmationMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingWithValueCustomDuplicateMessage")))
@interface ScmSdkAppSettingWithValueCustomDuplicateMessage : ScmSdkBase <ScmSdkAppSettingWithValue>
- (instancetype)initWithCustomDuplicateMessage:(NSString * _Nullable)customDuplicateMessage __attribute__((swift_name("init(customDuplicateMessage:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettingWithValueCustomDuplicateMessage *)doCopyCustomDuplicateMessage:(NSString * _Nullable)customDuplicateMessage __attribute__((swift_name("doCopy(customDuplicateMessage:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable customDuplicateMessage __attribute__((swift_name("customDuplicateMessage")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingWithValueDaysOfHistoryToDisplay")))
@interface ScmSdkAppSettingWithValueDaysOfHistoryToDisplay : ScmSdkBase <ScmSdkAppSettingWithValue>
- (instancetype)initWithDays:(int32_t)days __attribute__((swift_name("init(days:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettingWithValueDaysOfHistoryToDisplay *)doCopyDays:(int32_t)days __attribute__((swift_name("doCopy(days:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t days __attribute__((swift_name("days")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingWithValueShowProviderPhoneNumber")))
@interface ScmSdkAppSettingWithValueShowProviderPhoneNumber : ScmSdkBase <ScmSdkAppSettingWithValue>
- (instancetype)initWithShowProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("init(showProviderPhoneNumber:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettingWithValueShowProviderPhoneNumber *)doCopyShowProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("doCopy(showProviderPhoneNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL showProviderPhoneNumber __attribute__((swift_name("showProviderPhoneNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Dashboard")))
@interface ScmSdkDashboard : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDashboard *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end


/**
 * Child subscriber
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Subscriber")))
@interface ScmSdkSubscriber : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name description:(NSString *)description isCurrent:(BOOL)isCurrent __attribute__((swift_name("init(id:name:description:isCurrent:)"))) __attribute__((objc_designated_initializer));

/**
 *  Id of subscriber
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Name of subscriber
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Description of subscriber. Can be empty.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Current subscriber for account
 */
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Child subscriber
 */
- (ScmSdkSubscriber *)doCopyId:(int32_t)id name:(NSString *)name description:(NSString *)description isCurrent:(BOOL)isCurrent __attribute__((swift_name("doCopy(id:name:description:isCurrent:)")));

/**
 * Child subscriber
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Child subscriber
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Child subscriber
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Description of subscriber. Can be empty.
 */
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));

/**
 *  Id of subscriber
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 *  Current subscriber for account
 */
@property (readonly) BOOL isCurrent __attribute__((swift_name("isCurrent")));

/**
 *  Name of subscriber
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("User")))
@interface ScmSdkUser : ScmSdkBase
- (instancetype)initWithId:(int32_t)id authUserId:(ScmSdkInt * _Nullable)authUserId name:(NSString *)name fullName:(NSString *)fullName subscriberName:(NSString *)subscriberName email:(NSString *)email dashboards:(NSArray<ScmSdkDashboard *> *)dashboards isAccountPayableManager:(BOOL)isAccountPayableManager proposalLimit:(float)proposalLimit proposalCurrencyId:(int32_t)proposalCurrencyId subscriberId:(int32_t)subscriberId defaultScUserSetupId:(int32_t)defaultScUserSetupId __attribute__((swift_name("init(id:authUserId:name:fullName:subscriberName:email:dashboards:isAccountPayableManager:proposalLimit:proposalCurrencyId:subscriberId:defaultScUserSetupId:)"))) __attribute__((objc_designated_initializer));

/**
 * User id.
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Used for Proposal limit checking.
 */
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Subscriber id.
 */
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Default dashboard Id in [dashboards].
 */
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * User auth id.
 */
- (ScmSdkInt * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * User name.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * User full name.
 */
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * User subscriber name.
 */
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * User email.
 */
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of dashboards.
 */
- (NSArray<ScmSdkDashboard *> *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Used to calculate if user can change WorkOrder status.
 */
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Used for Proposal limit checking.
 */
- (float)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUser *)doCopyId:(int32_t)id authUserId:(ScmSdkInt * _Nullable)authUserId name:(NSString *)name fullName:(NSString *)fullName subscriberName:(NSString *)subscriberName email:(NSString *)email dashboards:(NSArray<ScmSdkDashboard *> *)dashboards isAccountPayableManager:(BOOL)isAccountPayableManager proposalLimit:(float)proposalLimit proposalCurrencyId:(int32_t)proposalCurrencyId subscriberId:(int32_t)subscriberId defaultScUserSetupId:(int32_t)defaultScUserSetupId __attribute__((swift_name("doCopy(id:authUserId:name:fullName:subscriberName:email:dashboards:isAccountPayableManager:proposalLimit:proposalCurrencyId:subscriberId:defaultScUserSetupId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * User auth id.
 */
@property (readonly) ScmSdkInt * _Nullable authUserId __attribute__((swift_name("authUserId")));

/**
 * List of dashboards.
 */
@property (readonly) NSArray<ScmSdkDashboard *> *dashboards __attribute__((swift_name("dashboards")));

/**
 *  Default dashboard Id in [dashboards].
 */
@property (readonly) int32_t defaultScUserSetupId __attribute__((swift_name("defaultScUserSetupId")));

/**
 * User email.
 */
@property (readonly) NSString *email __attribute__((swift_name("email")));

/**
 * User full name.
 */
@property (readonly) NSString *fullName __attribute__((swift_name("fullName")));

/**
 * User id.
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 *  Used to calculate if user can change WorkOrder status.
 */
@property (readonly) BOOL isAccountPayableManager __attribute__((swift_name("isAccountPayableManager")));

/**
 * User name.
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));

/**
 *  Used for Proposal limit checking.
 */
@property (readonly) int32_t proposalCurrencyId __attribute__((swift_name("proposalCurrencyId")));

/**
 *  Used for Proposal limit checking.
 */
@property (readonly) float proposalLimit __attribute__((swift_name("proposalLimit")));

/**
 *  Subscriber id.
 */
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));

/**
 * User subscriber name.
 */
@property (readonly) NSString *subscriberName __attribute__((swift_name("subscriberName")));
@end


/**
 * Local App Settings.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingParams")))
@interface ScmSdkAppSettingParams : ScmSdkKotlinEnum<ScmSdkAppSettingParams *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Local App Settings.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkAppSettingParams *assetFirstWorkOrderCreation __attribute__((swift_name("assetFirstWorkOrderCreation")));
@property (class, readonly) ScmSdkAppSettingParams *turnOffDescription __attribute__((swift_name("turnOffDescription")));
@property (class, readonly) ScmSdkAppSettingParams *enableLocationNotes __attribute__((swift_name("enableLocationNotes")));
@property (class, readonly) ScmSdkAppSettingParams *showPrivateStoreNotes __attribute__((swift_name("showPrivateStoreNotes")));
@property (class, readonly) ScmSdkAppSettingParams *alwaysShowLocationNotes __attribute__((swift_name("alwaysShowLocationNotes")));
@property (class, readonly) ScmSdkAppSettingParams *hidePriority __attribute__((swift_name("hidePriority")));
@property (class, readonly) ScmSdkAppSettingParams *showRecipients __attribute__((swift_name("showRecipients")));
@property (class, readonly) ScmSdkAppSettingParams *addCopyRecipients __attribute__((swift_name("addCopyRecipients")));
@property (class, readonly) ScmSdkAppSettingParams *deleteCopyRecipients __attribute__((swift_name("deleteCopyRecipients")));
@property (class, readonly) ScmSdkAppSettingParams *emptyProviderEmailNotification __attribute__((swift_name("emptyProviderEmailNotification")));
@property (class, readonly) ScmSdkAppSettingParams *enableAdditionalCodes __attribute__((swift_name("enableAdditionalCodes")));
@property (class, readonly) ScmSdkAppSettingParams *enableChangeableGlCode __attribute__((swift_name("enableChangeableGlCode")));
@property (class, readonly) ScmSdkAppSettingParams *enableWo __attribute__((swift_name("enableWo")));
@property (class, readonly) ScmSdkAppSettingParams *changeableCategory __attribute__((swift_name("changeableCategory")));
@property (class, readonly) ScmSdkAppSettingParams *changeablePriority __attribute__((swift_name("changeablePriority")));
@property (class, readonly) ScmSdkAppSettingParams *changeablePrioritySetDefault __attribute__((swift_name("changeablePrioritySetDefault")));
@property (class, readonly) ScmSdkAppSettingParams *changeableNte __attribute__((swift_name("changeableNte")));
@property (class, readonly) ScmSdkAppSettingParams *allowChangeableCurrency __attribute__((swift_name("allowChangeableCurrency")));
@property (class, readonly) ScmSdkAppSettingParams *changeableScheduledDate __attribute__((swift_name("changeableScheduledDate")));
@property (class, readonly) ScmSdkAppSettingParams *changeableProvider __attribute__((swift_name("changeableProvider")));
@property (class, readonly) ScmSdkAppSettingParams *createLinkedRequest __attribute__((swift_name("createLinkedRequest")));
@property (class, readonly) ScmSdkAppSettingParams *avoidDispatching __attribute__((swift_name("avoidDispatching")));
@property (class, readonly) ScmSdkAppSettingParams *enablePo __attribute__((swift_name("enablePo")));
@property (class, readonly) ScmSdkAppSettingParams *requirePo __attribute__((swift_name("requirePo")));
@property (class, readonly) ScmSdkAppSettingParams *enableLabels __attribute__((swift_name("enableLabels")));
@property (class, readonly) ScmSdkAppSettingParams *labelsAsSelectOnly __attribute__((swift_name("labelsAsSelectOnly")));
@property (class, readonly) ScmSdkAppSettingParams *editWeatherType __attribute__((swift_name("editWeatherType")));
@property (class, readonly) ScmSdkAppSettingParams *maskEmail __attribute__((swift_name("maskEmail")));
@property (class, readonly) ScmSdkAppSettingParams *maskPhone __attribute__((swift_name("maskPhone")));
@property (class, readonly) ScmSdkAppSettingParams *maskMoney __attribute__((swift_name("maskMoney")));
@property (class, readonly) ScmSdkAppSettingParams *showProviderPhomeNumber __attribute__((swift_name("showProviderPhomeNumber")));
+ (ScmSdkKotlinArray<ScmSdkAppSettingParams *> *)values __attribute__((swift_name("values()")));
@end


/**
 * Local App Settings with value.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingWithValueParams")))
@interface ScmSdkAppSettingWithValueParams : ScmSdkKotlinEnum<ScmSdkAppSettingWithValueParams *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Local App Settings with value.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkAppSettingWithValueParams *daysOfHistoryToDisplay __attribute__((swift_name("daysOfHistoryToDisplay")));
@property (class, readonly) ScmSdkAppSettingWithValueParams *confirmationMessage __attribute__((swift_name("confirmationMessage")));
@property (class, readonly) ScmSdkAppSettingWithValueParams *customDuplicateMessage __attribute__((swift_name("customDuplicateMessage")));
+ (ScmSdkKotlinArray<ScmSdkAppSettingWithValueParams *> *)values __attribute__((swift_name("values()")));
@end


/**
 * Feature flags used in the SDK.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeatureParams")))
@interface ScmSdkFeatureParams : ScmSdkKotlinEnum<ScmSdkFeatureParams *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Feature flags used in the SDK.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkFeatureParams *universal __attribute__((swift_name("universal")));
@property (class, readonly) ScmSdkFeatureParams *mli __attribute__((swift_name("mli")));
@property (class, readonly) ScmSdkFeatureParams *accountPayableManager __attribute__((swift_name("accountPayableManager")));
@property (class, readonly) ScmSdkFeatureParams *mlpInfo __attribute__((swift_name("mlpInfo")));
@property (class, readonly) ScmSdkFeatureParams *dashboard __attribute__((swift_name("dashboard")));
@property (class, readonly) ScmSdkFeatureParams *proposals __attribute__((swift_name("proposals")));
@property (class, readonly) ScmSdkFeatureParams *alerts __attribute__((swift_name("alerts")));
@property (class, readonly) ScmSdkFeatureParams *decisionEngine __attribute__((swift_name("decisionEngine")));
@property (class, readonly) ScmSdkFeatureParams *feedback __attribute__((swift_name("feedback")));
@property (class, readonly) ScmSdkFeatureParams *assetTagging __attribute__((swift_name("assetTagging")));
@property (class, readonly) ScmSdkFeatureParams *createWoByAssetTag __attribute__((swift_name("createWoByAssetTag")));
@property (class, readonly) ScmSdkFeatureParams *sendAudit __attribute__((swift_name("sendAudit")));
@property (class, readonly) ScmSdkFeatureParams *proposalsApproveReason __attribute__((swift_name("proposalsApproveReason")));
@property (class, readonly) ScmSdkFeatureParams *videoCapability __attribute__((swift_name("videoCapability")));
@property (class, readonly) ScmSdkFeatureParams *decisionTreeDash __attribute__((swift_name("decisionTreeDash")));
@property (class, readonly) ScmSdkFeatureParams *proposalsAssignReason __attribute__((swift_name("proposalsAssignReason")));
@property (class, readonly) ScmSdkFeatureParams *providerFeedback __attribute__((swift_name("providerFeedback")));
@property (class, readonly) ScmSdkFeatureParams *showReviewsCounter __attribute__((swift_name("showReviewsCounter")));
@property (class, readonly) ScmSdkFeatureParams *inventoryManagement __attribute__((swift_name("inventoryManagement")));
@property (class, readonly) ScmSdkFeatureParams *eulaLogin __attribute__((swift_name("eulaLogin")));
@property (class, readonly) ScmSdkFeatureParams *showAssignedTechnicians __attribute__((swift_name("showAssignedTechnicians")));
@property (class, readonly) ScmSdkFeatureParams *appTutorial __attribute__((swift_name("appTutorial")));
@property (class, readonly) ScmSdkFeatureParams *sitePlanningV2 __attribute__((swift_name("sitePlanningV2")));
@property (class, readonly) ScmSdkFeatureParams *doNotDispatch __attribute__((swift_name("doNotDispatch")));
@property (class, readonly) ScmSdkFeatureParams *feedbackCustomQuestions __attribute__((swift_name("feedbackCustomQuestions")));
@property (class, readonly) ScmSdkFeatureParams *badgeScanning __attribute__((swift_name("badgeScanning")));
@property (class, readonly) ScmSdkFeatureParams *weatherType __attribute__((swift_name("weatherType")));
@property (class, readonly) ScmSdkFeatureParams *badge __attribute__((swift_name("badge")));
@property (class, readonly) ScmSdkFeatureParams *checkListAssetTasks __attribute__((swift_name("checkListAssetTasks")));
@property (class, readonly) ScmSdkFeatureParams *proposalsFunctionality __attribute__((swift_name("proposalsFunctionality")));
@property (class, readonly) ScmSdkFeatureParams *ignoreAssetTypeId __attribute__((swift_name("ignoreAssetTypeId")));
@property (class, readonly) ScmSdkFeatureParams *powerUserLight __attribute__((swift_name("powerUserLight")));
@property (class, readonly) ScmSdkFeatureParams *eulaSignOff __attribute__((swift_name("eulaSignOff")));
@property (class, readonly) ScmSdkFeatureParams *assetFirstMobile __attribute__((swift_name("assetFirstMobile")));
@property (class, readonly) ScmSdkFeatureParams *invoices __attribute__((swift_name("invoices")));
@property (class, readonly) ScmSdkFeatureParams *invoiceApprovalComment __attribute__((swift_name("invoiceApprovalComment")));
@property (class, readonly) ScmSdkFeatureParams *invoiceAddEditGlCode __attribute__((swift_name("invoiceAddEditGlCode")));
@property (class, readonly) ScmSdkFeatureParams *invoiceRejectNotification __attribute__((swift_name("invoiceRejectNotification")));
@property (class, readonly) ScmSdkFeatureParams *invoiceSupportIntelligence __attribute__((swift_name("invoiceSupportIntelligence")));
@property (class, readonly) ScmSdkFeatureParams *invoiceOnOffShore __attribute__((swift_name("invoiceOnOffShore")));
@property (class, readonly) ScmSdkFeatureParams *invoiceProposalHistory __attribute__((swift_name("invoiceProposalHistory")));
@property (class, readonly) ScmSdkFeatureParams *multipleAssetsPerWorkOrder __attribute__((swift_name("multipleAssetsPerWorkOrder")));
@property (class, readonly) ScmSdkFeatureParams *scMobileValidateMultipleAssetPmOnly __attribute__((swift_name("scMobileValidateMultipleAssetPmOnly")));
@property (class, readonly) ScmSdkFeatureParams *assetInventory __attribute__((swift_name("assetInventory")));
@property (class, readonly) ScmSdkFeatureParams *sitePlanning __attribute__((swift_name("sitePlanning")));
@property (class, readonly) ScmSdkFeatureParams *hideExcludedCategories __attribute__((swift_name("hideExcludedCategories")));
@property (class, readonly) ScmSdkFeatureParams *scmClosedLocations __attribute__((swift_name("scmClosedLocations")));
@property (class, readonly) ScmSdkFeatureParams *notificationForCompletedWoEnabled __attribute__((swift_name("notificationForCompletedWoEnabled")));
@property (class, readonly) ScmSdkFeatureParams *dashboardSettings2Mobile __attribute__((swift_name("dashboardSettings2Mobile")));
@property (class, readonly) ScmSdkFeatureParams *localizationAddressFormatV1 __attribute__((swift_name("localizationAddressFormatV1")));
@property (class, readonly) ScmSdkFeatureParams *currencyCodeSupportV1 __attribute__((swift_name("currencyCodeSupportV1")));
@property (class, readonly) ScmSdkFeatureParams *sitePlanningAddYear __attribute__((swift_name("sitePlanningAddYear")));
@property (class, readonly) ScmSdkFeatureParams *dateFormatMobile __attribute__((swift_name("dateFormatMobile")));
@property (class, readonly) ScmSdkFeatureParams *siteAuditEditor __attribute__((swift_name("siteAuditEditor")));
@property (class, readonly) ScmSdkFeatureParams *scmMobileRadiusMeasure __attribute__((swift_name("scmMobileRadiusMeasure")));
@property (class, readonly) ScmSdkFeatureParams *mobilePhoneFormat __attribute__((swift_name("mobilePhoneFormat")));
@property (class, readonly) ScmSdkFeatureParams *decimalSeparatorV2 __attribute__((swift_name("decimalSeparatorV2")));
@property (class, readonly) ScmSdkFeatureParams *pinnedNotes __attribute__((swift_name("pinnedNotes")));
@property (class, readonly) ScmSdkFeatureParams *locationNameToLocationId __attribute__((swift_name("locationNameToLocationId")));
@property (class, readonly) ScmSdkFeatureParams *noPhoneWhenWoCreated __attribute__((swift_name("noPhoneWhenWoCreated")));
@property (class, readonly) ScmSdkFeatureParams *limitStatusesByTrade __attribute__((swift_name("limitStatusesByTrade")));
@property (class, readonly) ScmSdkFeatureParams *assetInventoryV2 __attribute__((swift_name("assetInventoryV2")));
@property (class, readonly) ScmSdkFeatureParams *dashboardFeedbackFilters __attribute__((swift_name("dashboardFeedbackFilters")));
@property (class, readonly) ScmSdkFeatureParams *siteAuditStatus __attribute__((swift_name("siteAuditStatus")));
@property (class, readonly) ScmSdkFeatureParams *assetStandardTypesBrands __attribute__((swift_name("assetStandardTypesBrands")));
@property (class, readonly) ScmSdkFeatureParams *invoiceRejectionReason __attribute__((swift_name("invoiceRejectionReason")));
@property (class, readonly) ScmSdkFeatureParams *siteAuditV2 __attribute__((swift_name("siteAuditV2")));
@property (class, readonly) ScmSdkFeatureParams *maxCompressionQuality __attribute__((swift_name("maxCompressionQuality")));
@property (class, readonly) ScmSdkFeatureParams *userWoPermissionScm __attribute__((swift_name("userWoPermissionScm")));
@property (class, readonly) ScmSdkFeatureParams *assetReadings __attribute__((swift_name("assetReadings")));
@property (class, readonly) ScmSdkFeatureParams *siteAuditBackgroundService __attribute__((swift_name("siteAuditBackgroundService")));
@property (class, readonly) ScmSdkFeatureParams *scmGainsightPx __attribute__((swift_name("scmGainsightPx")));
@property (class, readonly) ScmSdkFeatureParams *budgetInsightsView __attribute__((swift_name("budgetInsightsView")));
@property (class, readonly) ScmSdkFeatureParams *reasonForReassignmentDefaultOther __attribute__((swift_name("reasonForReassignmentDefaultOther")));
@property (class, readonly) ScmSdkFeatureParams *dashboardExpert __attribute__((swift_name("dashboardExpert")));
@property (class, readonly) ScmSdkFeatureParams *dashboardAssociationMobile __attribute__((swift_name("dashboardAssociationMobile")));
@property (class, readonly) ScmSdkFeatureParams *appReviewScm __attribute__((swift_name("appReviewScm")));
@property (class, readonly) ScmSdkFeatureParams *easierAssetAttachment __attribute__((swift_name("easierAssetAttachment")));
@property (class, readonly) ScmSdkFeatureParams *removeSecurityScm __attribute__((swift_name("removeSecurityScm")));
@property (class, readonly) ScmSdkFeatureParams *siteAuditUnsavedScm __attribute__((swift_name("siteAuditUnsavedScm")));
+ (ScmSdkKotlinArray<ScmSdkFeatureParams *> *)values __attribute__((swift_name("values()")));
@end


/**
 * Permission flags used in the SDK.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserPermissionParams")))
@interface ScmSdkUserPermissionParams : ScmSdkKotlinEnum<ScmSdkUserPermissionParams *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Permission flags used in the SDK.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkUserPermissionParams *workOrderStatusChange __attribute__((swift_name("workOrderStatusChange")));
@property (class, readonly) ScmSdkUserPermissionParams *workOrderCreate __attribute__((swift_name("workOrderCreate")));
@property (class, readonly) ScmSdkUserPermissionParams *workOrderChange __attribute__((swift_name("workOrderChange")));
@property (class, readonly) ScmSdkUserPermissionParams *workOrderView __attribute__((swift_name("workOrderView")));
@property (class, readonly) ScmSdkUserPermissionParams *invoiceView __attribute__((swift_name("invoiceView")));
@property (class, readonly) ScmSdkUserPermissionParams *nteChange __attribute__((swift_name("nteChange")));
@property (class, readonly) ScmSdkUserPermissionParams *maskMoney __attribute__((swift_name("maskMoney")));
@property (class, readonly) ScmSdkUserPermissionParams *siteAudit __attribute__((swift_name("siteAudit")));
@property (class, readonly) ScmSdkUserPermissionParams *proposalProcess __attribute__((swift_name("proposalProcess")));
@property (class, readonly) ScmSdkUserPermissionParams *feedbackView __attribute__((swift_name("feedbackView")));
+ (ScmSdkKotlinArray<ScmSdkUserPermissionParams *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("ScmCategories")))
@protocol ScmSdkScmCategories
@required

/**
 * Subscribe on categories.
 *
 * @return [Map] - categories map, where:
 * [Map.keys] -  category id,
 * [Map.values] - category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 */
- (id<ScmSdkKotlinx_coroutines_coreFlow>)subscribe __attribute__((swift_name("subscribe()")));
@end


/**
 * Site Planning Manager is a module within the app,
 * used to inspect active locations and related assets.
 *
 * You will have to either upload or cancel the current audit before you can start a new audit.
 */
__attribute__((swift_name("ScmSiteAudit")))
@protocol ScmSdkScmSiteAudit
@required

/**
 * Set comment for the check item.
 * @param checkItemId Id of check item.
 * @param commentText Text of a comment for check item.
 * @param isPersistent Flag to save comment for showing in next audits.
 * @param currentDate Date and time of last change of check item.
 * @param auditAttachments List of attachment file paths to be uploaded with the comment.
 * @param chunkCapacity Size of part of attachments for parallel uploading.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCommentCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate auditAttachments:(NSArray<ScmSdkAuditAttachment *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addComment(checkItemId:commentText:isPersistent:currentDate:auditAttachments:chunkCapacity:completionHandler:)")));

/**
 * Add comment with uploaded attachments.
 * Method for upload attachment - [uploadAttachmentsForComment]
 * Information about parameters - [addComment]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCommentWithUploadedAttachmentsCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addCommentWithUploadedAttachments(checkItemId:commentText:isPersistent:currentDate:uploadedAttachments:completionHandler:)")));

/**
 * Add comment without uploaded attachments.
 * @param checkItemId Id of check item.
 * @param commentText Text of a comment for check item.
 * @param isPersistent Flag to save comment for showing in next audits.
 * @param currentDate Date and time of last change of check item.
 * @param auditAttachments List of not uploaded attachments.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addCommentWithoutUploadedAttachmentsCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate auditAttachments:(NSArray<ScmSdkAuditAttachment *> *)auditAttachments completionHandler:(void (^)(ScmSdkUploadCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addCommentWithoutUploadedAttachments(checkItemId:commentText:isPersistent:currentDate:auditAttachments:completionHandler:)")));

/**
 * Add local comment.
 * @param commentId Id of check item comment.
 * @param commentText text of a comment for check item.
 * @param isPersistent flag to save comment for showing in next audits.
 * @param auditAttachments List of new attachments file paths to be uploaded.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addLocalCommentCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity commentAttachments:(NSArray<ScmSdkCommentAttachment *> *)commentAttachments completionHandler:(void (^)(ScmSdkLocalCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addLocalComment(checkItemId:commentText:isPersistent:currentDate:chunkCapacity:commentAttachments:completionHandler:)")));

/**
 * Save search query to history.
 * Date must have ISO-8601 format.
 *
 * Examples of instants in the ISO-8601 format:
 * - `2020-08-30T18:43:00Z`
 * - `2020-08-30T18:43:00.500Z`
 * - `2020-08-30T18:43:00.123456789Z`
 * - `2020-08-30T18:40.00+03:00`
 * - `2020-08-30T18:40.00+03:30:20`
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addSearchHistoryItemItem:(ScmSdkSearchHistoryItemParams *)item completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addSearchHistoryItem(item:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)cancelAuditUploadInBackgroundAuditInfoId:(int64_t)auditInfoId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("cancelAuditUploadInBackground(auditInfoId:completionHandler:)")));

/**
 * Complete open audit and change status to Completed
 * @param auditId Id of a completed audit.
 * @param finishDate Last date and time of finish audit.
 * @param language
 *
 * * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)completeOpenAuditAuditInfoId:(int64_t)auditInfoId finishDate:(NSString *)finishDate language:(NSString *)language completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("completeOpenAudit(auditInfoId:finishDate:language:completionHandler:)")));

/**
 * Create new audit checklist item in specified audit checklist.
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckItemAuditCheckListId:(NSString *)auditCheckListId auditCheckItemName:(NSString *)auditCheckItemName auditCheckItemRatingSystem:(ScmSdkAuditCheckItemRatingSystem *)auditCheckItemRatingSystem description:(NSString *)description range:(NSArray<ScmSdkInt *> *)range passThreshold:(int32_t)passThreshold completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckItem(auditCheckListId:auditCheckItemName:auditCheckItemRatingSystem:description:range:passThreshold:completionHandler:)")));

/**
 * Create new audit checklist item in specified audit checklist.
 * @param checkItemCreatedDate String - created date - pattern - "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'".
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckItemAuditCheckListId:(NSString *)auditCheckListId auditCheckItemName:(NSString *)auditCheckItemName auditCheckItemRatingSystem:(ScmSdkAuditCheckItemRatingSystem *)auditCheckItemRatingSystem description:(NSString *)description range:(NSArray<ScmSdkInt *> *)range passThreshold:(int32_t)passThreshold checkItemCreatedDate:(NSString *)checkItemCreatedDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckItem(auditCheckListId:auditCheckItemName:auditCheckItemRatingSystem:description:range:passThreshold:checkItemCreatedDate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckListAuditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckList(auditAreaId:auditCheckListName:completionHandler:)"))) __attribute__((deprecated("Need to use method with sortOrder param")));

/**
 * Create new audit checklist in specified audit area.
 *
 * @return Id of new CheckList.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckListAuditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName sortOrder:(int32_t)sortOrder completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckList(auditAreaId:auditCheckListName:sortOrder:completionHandler:)")));

/**
 * Create check lists with their check items.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckListWithCheckItemsAuditInfoTemplateId:(int32_t)auditInfoTemplateId auditAreaId:(NSString *)auditAreaId checkItemCreatedDate:(NSString *)checkItemCreatedDate params:(NSArray<ScmSdkAuditCheckListTemplateWithSortOrderParams *> *)params completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckListWithCheckItems(auditInfoTemplateId:auditAreaId:checkItemCreatedDate:params:completionHandler:)")));

/**
 * Create check lists with their check items.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckListWithCheckItemsAuditInfoTemplateId:(int32_t)auditInfoTemplateId auditAreaId:(NSString *)auditAreaId params:(NSArray<ScmSdkAuditCheckListTemplateWithSortOrderParams *> *)params completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckListWithCheckItems(auditInfoTemplateId:auditAreaId:params:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAuditCheckListWithCheckItemsParams:(NSArray<ScmSdkAuditCheckListTemplateParams *> *)params completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createAuditCheckListWithCheckItems(params:completionHandler:)"))) __attribute__((deprecated("Need to use method with 3 parameters")));

/**
 * Create Audit info based on a template.
 * @return [true] if audit is created.
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNewAuditInfoCurrentTimeStamp:(int64_t)currentTimeStamp locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createNewAuditInfo(currentTimeStamp:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:timeZone:completionHandler:)")));

/**
 * Create Audit info based on a template.
 * @return [true] if audit is created.
 * @param checkItemCreatedDate set default checkItem Created Date.
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createNewAuditInfoCurrentTimeStamp:(int64_t)currentTimeStamp locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone checkItemCreatedDate:(NSString *)checkItemCreatedDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createNewAuditInfo(currentTimeStamp:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:timeZone:checkItemCreatedDate:completionHandler:)")));

/**
 * Save audit with open status to the database
 * @param auditId Id of a completed audit.
 * @param finishDate Last date and time of changing.
 * @param language
 *
 * * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createOpenAuditAuditInfoId:(int64_t)auditInfoId language:(NSString *)language isUnmarkedAudit:(BOOL)isUnmarkedAudit completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createOpenAudit(auditInfoId:language:isUnmarkedAudit:completionHandler:)")));

/**
 * Set comment for the check item.
 * @param attachmentId Id of attachment.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAttachmentAttachmentId:(int32_t)attachmentId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAttachment(attachmentId:completionHandler:)")));

/**
 * Delete attachment for comment by file name.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAttachmentForCommentByFileNameFileName:(NSString *)fileName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAttachmentForCommentByFileName(fileName:completionHandler:)")));

/**
 * Delete attachment for work order template by file name.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAttachmentForWorkOrderTemplateByFileNameFileName:(NSString *)fileName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAttachmentForWorkOrderTemplateByFileName(fileName:completionHandler:)")));

/**
 * Set comment for the check item.
 * @param commentId Id of check item comment.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCommentCommentId:(int32_t)commentId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteComment(commentId:completionHandler:)")));

/**
 * Delete opened audit by id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteOpenAuditAuditId:(int32_t)auditId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteOpenAudit(auditId:completionHandler:)")));

/**
 * Delete work order template for check item for future uploading audit.
 * @param checkItemId Id of check item, where work order template must be added.
 * @param workOrderTemplateId Id of work order template.
 * @param currentDate Date and time of last change of check item.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteWorkOrderTemplateCheckItemId:(NSString *)checkItemId workOrderTemplateId:(int32_t)workOrderTemplateId currentDate:(NSString *)currentDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteWorkOrderTemplate(checkItemId:workOrderTemplateId:currentDate:completionHandler:)")));

/**
 * Returns [AuditInfoExistence] by audit id.
 * @param auditInfoId Id of audit.
 * @return [AuditInfoExistence.Exist] if it exists, [AuditInfoExistence.NotExist] if not.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAuditInfoByIdAuditInfoId:(int64_t)auditInfoId completionHandler:(void (^)(id<ScmSdkAuditInfoExistence> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAuditInfoById(auditInfoId:completionHandler:)")));

/**
 * Returns list of [Audit] by location and audit template id.
 * @param isSearchCompletedAlso If [true] - search will be also with completed and open audits.
 * @return List of [Audit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAuditInfoByLocationAndTemplateIdLocationId:(int32_t)locationId templateId:(int32_t)templateId isSearchCompletedAlso:(BOOL)isSearchCompletedAlso completionHandler:(void (^)(NSArray<ScmSdkAudit *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAuditInfoByLocationAndTemplateId(locationId:templateId:isSearchCompletedAlso:completionHandler:)")));

/**
 * @param [locationId] - Id of location to load site audit templates.
 *
 * @return [List] of [SiteAuditTemplate] audit templates as [Result].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAuditInfoTemplatesLocationId:(int32_t)locationId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getAuditInfoTemplates(locationId:completionHandler:)")));

/**
 * Check item by id.
 * @param checkItemId Id of check item.
 * @param currentDate Date and time of last change of check item.
 * @return [AuditCheckItem] Check item from storage.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCheckItemByIdCheckItemId:(NSString *)checkItemId currentDate:(NSString *)currentDate completionHandler:(void (^)(ScmSdkAuditCheckItem * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCheckItemById(checkItemId:currentDate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCheckItemTemplatesAuditInfoId:(int32_t)auditInfoId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCheckItemTemplates(auditInfoId:completionHandler:)")));

/**
 * @param [auditInfoId] - Id of audit template to load check item templates.
 * @param [checkListTemplateId] - Id of checklist template.
 *
 * @return [List] of [AuditCheckItemTemplate] checklist items templates as [Result].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCheckItemTemplatesAuditInfoId:(int32_t)auditInfoId checkListTemplateId:(ScmSdkInt * _Nullable)checkListTemplateId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCheckItemTemplates(auditInfoId:checkListTemplateId:completionHandler:)")));

/**
 * @param [auditInfoId] - Id of audit template to load checklist templates.
 *
 * @return [List] of [AuditCheckListTemplate] check list templates as [Result].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCheckListTemplatesAuditInfoId:(int32_t)auditInfoId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCheckListTemplates(auditInfoId:completionHandler:)")));

/**
 * Return comment attachment full size raw file as [ByteArray].
 * @param commentId Id of checkItem comment.
 * @param attachmentId server id of comment attachment.
 * @param fileName attachment file name.
 * @return [Result] with [AttachmentBody] Attachment with file data
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCommentAttachmentFullSizeCommentId:(int32_t)commentId attachmentId:(int32_t)attachmentId fileName:(NSString *)fileName completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCommentAttachmentFullSize(commentId:attachmentId:fileName:completionHandler:)")));

/**
 * Return comment attachment thumbnail raw file as [ByteArray].
 * @param commentId Id of checkItem comment.
 * @param attachmentId server id of comment attachment.
 * @param fileName attachment file name.
 * @return [Result] with [AttachmentBody] Attachment with file data
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCommentAttachmentThumbnailCommentId:(int32_t)commentId attachmentId:(int32_t)attachmentId fileName:(NSString *)fileName completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCommentAttachmentThumbnail(commentId:attachmentId:fileName:completionHandler:)")));

/**
 * Return [List] of comment attachments with url.
 * @param commentId id of check item comment.
 * @return [List] of [AttachmentUrl] Attachments with url for download and show
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCommentAttachmentsCommentId:(int32_t)commentId completionHandler:(void (^)(NSArray<ScmSdkAttachmentUrl *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCommentAttachments(commentId:completionHandler:)")));

/**
 * @param [days] - Number of days for which completed audits should be loaded.
 *
 * @return [List] of [CompletedSiteAudit] completed audits for specified number of days  [Result].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCompletedAuditsDays:(int32_t)days completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCompletedAudits(days:completionHandler:)")));

/**
 * Get on basic audit data.
 * @param query Search by location name and audit name (template name).
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentAuditInfoQuery:(NSString *)query completionHandler:(void (^)(NSArray<ScmSdkAudit *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentAuditInfo(query:completionHandler:)")));

/**
 * @param [status] - Default = 0 - return all statuses,  Open = 1, Completed = 2.
 * @param [pageIndex] - Default = 1.
 * @param [pageSize] - Default = 50.
 * @return [List] of [CompletedSiteAudit] completed audits for specified number of days  [Result].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFilteredAuditsSearchValue:(NSString * _Nullable)searchValue status:(int32_t)status pageIndex:(int32_t)pageIndex completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getFilteredAudits(searchValue:status:pageIndex:completionHandler:)")));

/**
 * Get on history of search texts.
 * @param countOfLastItems Count of last search items.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSearchHistoryCountOfLastItems:(int32_t)countOfLastItems searchQuery:(NSString *)searchQuery completionHandler:(void (^)(NSArray<ScmSdkSearchHistoryItem *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSearchHistory(countOfLastItems:searchQuery:completionHandler:)")));

/**
 * Get service request info for basic work order data.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServiceRequestInfoStoreId:(int32_t)storeId areaName:(NSString *)areaName problemType:(NSString *)problemType assetType:(NSString *)assetType problemCode:(NSString *)problemCode callDate:(NSString *)callDate dashboardId:(ScmSdkInt * _Nullable)dashboardId completionHandler:(void (^)(ScmSdkServiceRequestInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getServiceRequestInfo(storeId:areaName:problemType:assetType:problemCode:callDate:dashboardId:completionHandler:)")));

/**
 * Get service request info for basic work order data by trade and location id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServiceRequestInfoByTradeTrade:(NSString *)trade assetId:(ScmSdkInt * _Nullable)assetId storeId:(int32_t)storeId areaName:(NSString *)areaName problemType:(NSString *)problemType assetType:(NSString *)assetType problemCode:(NSString *)problemCode callDate:(NSString *)callDate dashboardId:(ScmSdkInt * _Nullable)dashboardId completionHandler:(void (^)(ScmSdkServiceRequestInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getServiceRequestInfoByTrade(trade:assetId:storeId:areaName:problemType:assetType:problemCode:callDate:dashboardId:completionHandler:)")));

/**
 * Get more information (comments, work order info, attachments) about statistic item (check item history item).
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStatisticItemDataByIdStatisticItemId:(int32_t)statisticItemId checkItemId:(NSString *)checkItemId completionHandler:(void (^)(ScmSdkStatisticItemComponents * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getStatisticItemDataById(statisticItemId:checkItemId:completionHandler:)")));

/**
 * Get on basic audit data with serverId = 1.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUnsavedAuditInfoWithCompletionHandler:(void (^)(NSArray<ScmSdkAudit *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUnsavedAuditInfo(completionHandler:)")));

/**
 * Return workOrder attachments with url.
 * @param workOrderId Id of workOrder.
 * @return [WorkOrderAttachmentInfo] Attachment info with download url
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderAttachmentsInfoWorkOrderId:(int32_t)workOrderId completionHandler:(void (^)(NSArray<ScmSdkWorkOrderAttachmentInfo *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderAttachmentsInfo(workOrderId:completionHandler:)")));

/**
 * Check is all check items completed in current audit data.
 * @return true if all check items completed.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isAllCheckItemsCompletedAuditInfoId:(int64_t)auditInfoId completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isAllCheckItemsCompleted(auditInfoId:completionHandler:)")));

/**
 * Check if the site audit can be created.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isAuditCanBeCreatedLocationId:(int32_t)locationId templateTypeId:(int32_t)templateTypeId completionHandler:(void (^)(ScmSdkCheckAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isAuditCanBeCreated(locationId:templateTypeId:completionHandler:)")));

/**
 * @return If [true] - user has the ability to send information about the audit on emails during the post.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isNeedShowEmailsWithCompletionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isNeedShowEmails(completionHandler:)")));

/**
 * Check similar work order template in audit.
 * @param checkItemId Id of check item.
 * @param problemType Problem type of creating work order.
 * @return [WorkOrderTemplateExistence.Exist] - if similar work order exists.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isWorkOrderTemplateExistsByProblemTypeCheckItemId:(NSString *)checkItemId problemType:(NSString *)problemType completionHandler:(void (^)(id<ScmSdkWorkOrderTemplateExistence> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isWorkOrderTemplateExistsByProblemType(checkItemId:problemType:completionHandler:)")));

/**
 * Load check items by audit template id and checklist template id.
 * Then all this data will be save to local cash.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadCheckItemsTemplatesForCheckListTemplatesTemplateId:(int32_t)templateId checkListTemplateId:(int32_t)checkListTemplateId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("loadCheckItemsTemplatesForCheckListTemplates(templateId:checkListTemplateId:completionHandler:)")));

/**
 * Load completed audits info, if it absent in local cache.
 *
 * @return [false] - info is in cache (don't need to upload), [true] - uploaded
 * When we create open or update open audit
 * score should go as "-1" instead of null from RatingValueData.NA
 * and null instead -1 from RatingValueData.Untouched
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadCompletedAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadCompletedAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:completionHandler:)")));

/**
 * Load completed audits info, if it absent in local cache.
 *
 * @return [false] - info is in cache (don't need to upload), [true] - uploaded
 * When we create open or update open audit
 * score should go as "-1" instead of null from RatingValueData.NA
 * and null instead -1 from RatingValueData.Untouched
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadCompletedAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone isSitePlanningStatus:(BOOL)isSitePlanningStatus completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadCompletedAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:isSitePlanningStatus:completionHandler:)")));

/**
 * Load open audits info.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadOpenAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadOpenAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:completionHandler:)")));

/**
 * Mark audit (completed) as changed (some data was changed).
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)makeAuditAsChangedAuditId:(int64_t)auditId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("makeAuditAsChanged(auditId:completionHandler:)")));

/**
 * Mark audit (completed) as unchanged.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)makeAuditAsUnchangedAuditId:(int64_t)auditId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("makeAuditAsUnchanged(auditId:completionHandler:)")));

/**
 * Upload fully filled audit data.
 * @return [PostAuditInfo] Info about uploaded audit..
 * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postAudit(auditId:finishDate:language:completionHandler:)")));

/**
 * The user can delete check items.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeAuditCheckItemAuditCheckItemId:(NSString *)auditCheckItemId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeAuditCheckItem(auditCheckItemId:completionHandler:)")));

/**
 * The user can delete only custom checklists.
 * For standard, it is possible to delete only the checklist items.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeAuditCheckListAuditCheckListId:(NSString *)auditCheckListId currentDate:(NSString *)currentDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeAuditCheckList(auditCheckListId:currentDate:completionHandler:)")));

/**
 * Delete the current audit for the user.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeAuditInfoAuditId:(int64_t)auditId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeAuditInfo(auditId:completionHandler:)")));

/**
 * Remove quantity for the check item.
 * @param checkItemId Id of check item.
 * @param currentDate Date and time of last change of check item.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeQuantityValueCheckItemId:(NSString *)checkItemId currentDate:(NSString *)currentDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeQuantityValue(checkItemId:currentDate:completionHandler:)")));

/**
 * Save work order template for check item for future uploading audit.
 * @param checkItemId Id of check item, where work order template must be added.
 * @param params [WorkOrderTemplate] All data for create audit for check item.
 * @param currentDate Date and time of last change of check item.
 * @param chunkCapacity Size of part of attachments for parallel uploading.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveWorkOrderTemplateCheckItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadWorkOrderTemplateInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("saveWorkOrderTemplate(checkItemId:params:currentDate:chunkCapacity:completionHandler:)")));

/**
 * Save work order template for check item for future uploading audit.
 * Here need to send uploaded attachments, which can be uploaded by [uploadAttachmentForWorkOrderTemplate].
 * @param checkItemId Id of check item, where work order template must be added.
 * @param params [WorkOrderTemplate] All data for create audit for check item.
 * @param currentDate Date and time of last change of check item.
 * @param uploadedAttachments Uploaded attachments by [uploadAttachmentForWorkOrderTemplate].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)saveWorkOrderTemplateWithUploadedAttachmentsCheckItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkWorkOrderAttachment *> *)uploadedAttachments completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("saveWorkOrderTemplateWithUploadedAttachments(checkItemId:params:currentDate:uploadedAttachments:completionHandler:)")));

/**
 * Set quantity for the check item.
 * @param checkItemId Id of check item.
 * @param quantity Pair from unit and value for quantity.
 * @param currentDate Date and time of last change of check item.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setQuantityValueCheckItemId:(NSString *)checkItemId quantity:(ScmSdkKotlinPair<NSString *, ScmSdkInt *> *)quantity currentDate:(NSString *)currentDate completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("setQuantityValue(checkItemId:quantity:currentDate:completionHandler:)")));

/**
 * Set rating values for the check item.
 * @param checkItemId Id of check item.
 * @param currentDate Date and time of last change of check item.
 * @param value Value for rating.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setRatingValueCheckItemId:(NSString *)checkItemId currentDate:(NSString *)currentDate value:(id<ScmSdkRatingValue>)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("setRatingValue(checkItemId:currentDate:value:completionHandler:)")));

/**
 * Subscribe on all comments.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnAllCommentsWithCompletionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnAllComments(completionHandler:)")));

/**
 * Subscribe to areas of current audit.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnAuditAreasAuditId:(int64_t)auditId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnAuditAreas(auditId:completionHandler:)")));

/**
 * Subscribe to check items of current check list.
 * @param checkListId - check list id for check items.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnAuditCheckItemsCheckListId:(NSString *)checkListId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnAuditCheckItems(checkListId:completionHandler:)")));

/**
 * Subscribe to check item comments of current check item.
 * @param checkItemId - check item id for check item comments.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnCheckItemCommentsCheckItemId:(NSString *)checkItemId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnCheckItemComments(checkItemId:completionHandler:)")));

/**
 * Subscribe on all comment attachments.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnCommentAttachmentsWithCompletionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnCommentAttachments(completionHandler:)")));

/**
 * Subscribe on comment attachments by comment id.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnCommentAttachmentsByCommentIdCommentId:(int32_t)commentId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnCommentAttachmentsByCommentId(commentId:completionHandler:)")));

/**
 * Subscribe on basic audit data.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnCurrentAuditInfoWithCompletionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnCurrentAuditInfo(completionHandler:)")));

/**
 * Subscribe on basic audit data.
 * @param query Search by location name and audit name (template name).
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnCurrentAuditInfoQuery:(NSString *)query completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnCurrentAuditInfo(query:completionHandler:)")));

/**
 * Subscribe on change audit flag, if [true] - user changed audit data and it must be saved or deleted.
 * Open audits always has [true].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnDateChangeFlagAuditId:(int64_t)auditId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnDateChangeFlag(auditId:completionHandler:)")));

/**
 * Subscribe on history of search texts.
 * @param countOfLastItems Count of last search items.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnSearchHistoryCountOfLastItems:(int32_t)countOfLastItems searchQuery:(NSString *)searchQuery completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnSearchHistory(countOfLastItems:searchQuery:completionHandler:)")));

/**
 * Subscribe on work order templates for the check item.
 * @param checkItemId Id of check item.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeOnWorkOrderTemplatesCheckItemId:(NSString *)checkItemId completionHandler:(void (^)(id<ScmSdkKotlinx_coroutines_coreFlow> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeOnWorkOrderTemplates(checkItemId:completionHandler:)")));

/**
 * Update audit checklist name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateAuditCheckListAuditCheckListId:(NSString *)auditCheckListId auditCheckListName:(NSString *)auditCheckListName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateAuditCheckList(auditCheckListId:auditCheckListName:completionHandler:)")));

/**
 * Update comment for the check item.
 * @param commentId Id of check item comment.
 * @param commentText text of a comment for check item.
 * @param isPersistent flag to save comment for showing in next audits.
 * @param auditAttachments List of new attachments file paths to be uploaded.
 * @param chunkCapacity Size of part of attachments for parallel uploading.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCommentCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkAuditAttachment *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateComment(commentId:commentText:isPersistent:auditAttachments:chunkCapacity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCommentWithExceptionsCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkUpdateAuditAttachment *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateCommentWithExceptions(commentId:commentText:isPersistent:auditAttachments:chunkCapacity:completionHandler:)")));

/**
 * Update comment for the check item.
 * If attachment have localId == 0, it will be replaced.
 * Otherwise, attachment will be left.
 * @param commentId Id of check item comment.
 * @param commentText text of a comment for check item.
 * @param isPersistent flag to save comment for showing in next audits.
 * @param auditAttachments List of new attachments file paths to be uploaded.
 * @param chunkCapacity Size of part of attachments for parallel uploading.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCommentWithLocalAttachmentsCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkAuditAttachmentForUpdate *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadCommentInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateCommentWithLocalAttachments(commentId:commentText:isPersistent:auditAttachments:chunkCapacity:completionHandler:)")));

/**
 * Update comment with uploaded attachments.
 * Method for upload attachment - [uploadAttachmentsForComment]
 * Information about parameters - [updateComment]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCommentWithUploadedAttachmentsCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments isReplaceAllAttachments:(BOOL)isReplaceAllAttachments completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateCommentWithUploadedAttachments(commentId:commentText:isPersistent:currentDate:uploadedAttachments:isReplaceAllAttachments:completionHandler:)")));

/**
 * Save change data on a completed audit.
 * @param auditId Id of a completed audit.
 * @param finishDate Last date and time of changing.
 * @param language
 * @param isNeedToDelete If [true] - audit will be delete after update.
 *
 * * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCompletedAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateCompletedAudit(auditId:finishDate:language:isNeedToDelete:isUnmarkedAudit:completionHandler:)")));

/**
 * Save change data on a completed audit.
 * @param auditId Id of a completed audit.
 * @param finishDate Last date and time of changing.
 * @param language
 * @param isNeedToDelete If [true] - audit will be delete after update.
 *
 * * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * When we create open or update open audit
 * score should go as "-1" instead of null from RatingValueData.NA
 * and null instead -1 from RatingValueData.Untouched
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCompletedAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit isSitePlanningStatus:(BOOL)isSitePlanningStatus completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateCompletedAudit(auditId:finishDate:language:isNeedToDelete:isUnmarkedAudit:isSitePlanningStatus:completionHandler:)")));

/**
 * Updates emails field for current audit info.
 * @param auditInfoId Id of current audit info.
 * @param emails text to update emails field.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateEmailsAuditInfoId:(int64_t)auditInfoId emails:(NSString *)emails completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateEmails(auditInfoId:emails:completionHandler:)")));

/**
 * Update local comment.
 * @param commentId Id of check item comment.
 * @param commentText text of a comment for check item.
 * @param isPersistent flag to save comment for showing in next audits.
 * @param auditAttachments List of new attachments file paths to be uploaded.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateLocalCommentCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkCommentAttachment *> *)auditAttachments completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateLocalComment(commentId:commentText:isPersistent:auditAttachments:completionHandler:)")));

/**
 * Update local comment attachment.
 * Method for upload attachment - [uploadAttachmentsForComment]
 * Information about parameters - [updateComment]
 * Is attachment posted - [isPosted]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateLocalCommentAttachmentCommentId:(int32_t)commentId uploadedAttachment:(ScmSdkCommentAttachment *)uploadedAttachment isPosted:(BOOL)isPosted completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateLocalCommentAttachment(commentId:uploadedAttachment:isPosted:completionHandler:)")));

/**
 * Update local comment attachments.
 * Method for upload attachment - [uploadAttachmentsForComment]
 * Information about parameters - [updateComment]
 * Is attachments posted - [isPosted]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateLocalCommentAttachmentsCommentId:(int32_t)commentId uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments isReplaceAllAttachments:(BOOL)isReplaceAllAttachments isPosted:(BOOL)isPosted completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateLocalCommentAttachments(commentId:uploadedAttachments:isReplaceAllAttachments:isPosted:completionHandler:)")));

/**
 * Update audit with open status to the database
 * @param auditId Id of a completed audit.
 * @param language
 *
 * * @throws [SiteAuditException.SiteAuditNotFilledAudit]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateOpenAuditAuditInfoId:(int64_t)auditInfoId language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit completionHandler:(void (^)(ScmSdkPostAuditInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateOpenAudit(auditInfoId:language:isNeedToDelete:isUnmarkedAudit:completionHandler:)")));

/**
 * Update flag isSendOnEmail.
 * @param auditInfoId Id of current audit info.
 * @param isSendEmail Value of flag.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateSendOnEmailFlagAuditInfoId:(int64_t)auditInfoId isSendEmail:(BOOL)isSendEmail completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateSendOnEmailFlag(auditInfoId:isSendEmail:completionHandler:)")));

/**
 * Update work order template for check item for future uploading audit.
 * @param workOrderTemplateId Work order template id for update.
 * @param checkItemId Id of check item, where work order template must be added.
 * @param params [WorkOrderTemplate] All data for create audit for check item.
 * @param currentDate Date and time of last change of check item.
 * @param chunkCapacity Size of part of attachments for parallel uploading.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateWorkOrderTemplateWorkOrderTemplateId:(int32_t)workOrderTemplateId checkItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(ScmSdkUploadWorkOrderTemplateInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateWorkOrderTemplate(workOrderTemplateId:checkItemId:params:currentDate:chunkCapacity:completionHandler:)")));

/**
 * Update work order template for check item for future uploading audit.
 * Here need to send uploaded attachments, which can be uploaded by [uploadAttachmentForWorkOrderTemplate].
 * @param workOrderTemplateId Work order template id for update.
 * @param checkItemId Id of check item, where work order template must be added.
 * @param params [WorkOrderTemplate] All data for create audit for check item.
 * @param currentDate Date and time of last change of check item.
 * @param uploadedAttachments Uploaded attachments by [uploadAttachmentForWorkOrderTemplate].
 * @param isReplaceAllAttachments if [true] - all attachments of the work order template will be replaced.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateWorkOrderTemplateWithUploadedAttachmentsWorkOrderTemplateId:(int32_t)workOrderTemplateId checkItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkWorkOrderAttachment *> *)uploadedAttachments isReplaceAllAttachments:(BOOL)isReplaceAllAttachments completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateWorkOrderTemplateWithUploadedAttachments(workOrderTemplateId:checkItemId:params:currentDate:uploadedAttachments:isReplaceAllAttachments:completionHandler:)")));

/**
 * Upload on remote storage and update local attachment for comments.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadAndUpdateAttachmentForCommentCommentId:(int32_t)commentId attachment:(ScmSdkAuditAttachment *)attachment completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadAndUpdateAttachmentForComment(commentId:attachment:completionHandler:)")));

/**
 * Upload on remote storage one attachment for comments.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadAttachmentForCommentAttachment:(ScmSdkAuditAttachment *)attachment completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadAttachmentForComment(attachment:completionHandler:)")));

/**
 * Upload on remote storage one attachment for work order template.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadAttachmentForWorkOrderTemplateAttachment:(ScmSdkAuditAttachment *)attachment completionHandler:(void (^)(ScmSdkWorkOrderAttachment * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadAttachmentForWorkOrderTemplate(attachment:completionHandler:)")));

/**
 * Upload on remote storage attachments for comments.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadAttachmentsForCommentAttachments:(NSArray<ScmSdkAuditAttachment *> *)attachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadAttachmentsForComment(attachments:chunkCapacity:completionHandler:)")));

/**
 * Upload on remote storage attachments for work order template.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadAttachmentsForWorkOrderTemplateAttachments:(NSArray<ScmSdkAuditAttachment *> *)attachments chunkCapacity:(int32_t)chunkCapacity completionHandler:(void (^)(NSArray<ScmSdkWorkOrderAttachment *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadAttachmentsForWorkOrderTemplate(attachments:chunkCapacity:completionHandler:)")));

/**
 * Loads all the attachments of the audit site and then finishes the
 * flow depending on the type passed in the parameter
 * @param auditInfoId, Id of a completed audit.
 * @param finishDate  Last date and time of changing.
 * @param uploadMode Count of last search items.
 * @param uriToByteArrayConverter is an interface that implements a single method string Uri to byte array
 * @param isAuditSavedWithoutAttachments If isAuditSavedWithoutAttachments is set to true,
 * one attempt will be made to save the attachments and after that the audit will be saved as it is
 * @param onUpdate кeturns the number of unloaded attachments and progress
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)uploadSiteAuditAuditInfoId:(int64_t)auditInfoId finishDate:(NSString *)finishDate language:(NSString *)language uploadMode:(id<ScmSdkSiteAuditBackgroundUploadMode>)uploadMode uriToByteArrayConverter:(id<ScmSdkUriToByteArrayConverter>)uriToByteArrayConverter isAuditSavedWithoutAttachments:(BOOL)isAuditSavedWithoutAttachments onUpdate:(void (^)(ScmSdkAttachmentLoadingResult *))onUpdate completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("uploadSiteAudit(auditInfoId:finishDate:language:uploadMode:uriToByteArrayConverter:isAuditSavedWithoutAttachments:onUpdate:completionHandler:)")));
@end

__attribute__((swift_name("UriToByteArrayConverter")))
@protocol ScmSdkUriToByteArrayConverter
@required
- (ScmSdkKotlinByteArray *)uriToByteArrayUri:(NSString *)uri __attribute__((swift_name("uriToByteArray(uri:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttachmentBody")))
@interface ScmSdkAttachmentBody : ScmSdkBase
- (instancetype)initWithAttachmentServerId:(int32_t)attachmentServerId fileName:(NSString *)fileName fileData:(ScmSdkKotlinByteArray *)fileData __attribute__((swift_name("init(attachmentServerId:fileName:fileData:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinByteArray *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAttachmentBody *)doCopyAttachmentServerId:(int32_t)attachmentServerId fileName:(NSString *)fileName fileData:(ScmSdkKotlinByteArray *)fileData __attribute__((swift_name("doCopy(attachmentServerId:fileName:fileData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t attachmentServerId __attribute__((swift_name("attachmentServerId")));
@property (readonly) ScmSdkKotlinByteArray *fileData __attribute__((swift_name("fileData")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttachmentUrl")))
@interface ScmSdkAttachmentUrl : ScmSdkBase
- (instancetype)initWithAttachmentId:(int32_t)attachmentId url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("init(attachmentId:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAttachmentUrl *)doCopyAttachmentId:(int32_t)attachmentId url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("doCopy(attachmentId:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t attachmentId __attribute__((swift_name("attachmentId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Audit")))
@interface ScmSdkAudit : ScmSdkBase
- (instancetype)initWithAuditId:(int64_t)auditId serverId:(int32_t)serverId locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName emails:(NSString *)emails isSendOnEmails:(BOOL)isSendOnEmails startDate:(NSString *)startDate timeZone:(NSString *)timeZone itemsCount:(int32_t)itemsCount __attribute__((swift_name("init(auditId:serverId:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:emails:isSendOnEmails:startDate:timeZone:itemsCount:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAudit *)doCopyAuditId:(int64_t)auditId serverId:(int32_t)serverId locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName emails:(NSString *)emails isSendOnEmails:(BOOL)isSendOnEmails startDate:(NSString *)startDate timeZone:(NSString *)timeZone itemsCount:(int32_t)itemsCount __attribute__((swift_name("doCopy(auditId:serverId:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:emails:isSendOnEmails:startDate:timeZone:itemsCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) int64_t auditId __attribute__((swift_name("auditId")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) NSString *emails __attribute__((swift_name("emails")));
@property (readonly) BOOL isSendOnEmails __attribute__((swift_name("isSendOnEmails")));
@property (readonly) int32_t itemsCount __attribute__((swift_name("itemsCount")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t templateId __attribute__((swift_name("templateId")));
@property (readonly) NSString *templateName __attribute__((swift_name("templateName")));
@property (readonly) NSString *timeZone __attribute__((swift_name("timeZone")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end


/**
 * Areas are typically a specific region at each location that you can inspect,
 * for example, Exterior, Interior, Back of House, or Front of House.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditArea")))
@interface ScmSdkAuditArea : ScmSdkBase
- (instancetype)initWithAuditAreaId:(NSString *)auditAreaId name:(NSString *)name checkLists:(NSArray<ScmSdkAuditCheckList *> *)checkLists sortOrder:(int32_t)sortOrder __attribute__((swift_name("init(auditAreaId:name:checkLists:sortOrder:)"))) __attribute__((objc_designated_initializer));

/**
 * [auditAreaId] - Group of the checklist.
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Name of audit area.
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Group of the checklist.
 */
- (NSArray<ScmSdkAuditCheckList *> *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Order in list, we should save this value and send it during post audit process.
 */
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Areas are typically a specific region at each location that you can inspect,
 * for example, Exterior, Interior, Back of House, or Front of House.
 */
- (ScmSdkAuditArea *)doCopyAuditAreaId:(NSString *)auditAreaId name:(NSString *)name checkLists:(NSArray<ScmSdkAuditCheckList *> *)checkLists sortOrder:(int32_t)sortOrder __attribute__((swift_name("doCopy(auditAreaId:name:checkLists:sortOrder:)")));

/**
 * Areas are typically a specific region at each location that you can inspect,
 * for example, Exterior, Interior, Back of House, or Front of House.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Areas are typically a specific region at each location that you can inspect,
 * for example, Exterior, Interior, Back of House, or Front of House.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Areas are typically a specific region at each location that you can inspect,
 * for example, Exterior, Interior, Back of House, or Front of House.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * [auditAreaId] - Group of the checklist.
 */
@property (readonly) NSString *auditAreaId __attribute__((swift_name("auditAreaId")));

/**
 * Group of the checklist.
 */
@property (readonly) NSArray<ScmSdkAuditCheckList *> *checkLists __attribute__((swift_name("checkLists")));

/**
 * Name of audit area.
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));

/**
 * Order in list, we should save this value and send it during post audit process.
 */
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachment")))
@interface ScmSdkAuditAttachment : ScmSdkBase
- (instancetype)initWithFileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType fileData:(ScmSdkKotlinByteArray *)fileData url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("init(fileName:filePath:mimeType:fileData:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinByteArray *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachment *)doCopyFileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType fileData:(ScmSdkKotlinByteArray *)fileData url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("doCopy(fileName:filePath:mimeType:fileData:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinByteArray *fileData __attribute__((swift_name("fileData")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *filePath __attribute__((swift_name("filePath")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachmentForUpdate")))
@interface ScmSdkAuditAttachmentForUpdate : ScmSdkBase
- (instancetype)initWithLocalId:(int32_t)localId auditAttachment:(ScmSdkAuditAttachment *)auditAttachment __attribute__((swift_name("init(localId:auditAttachment:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachment *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachmentForUpdate *)doCopyLocalId:(int32_t)localId auditAttachment:(ScmSdkAuditAttachment *)auditAttachment __attribute__((swift_name("doCopy(localId:auditAttachment:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAuditAttachment *auditAttachment __attribute__((swift_name("auditAttachment")));
@property (readonly) int32_t localId __attribute__((swift_name("localId")));
@end


/**
 * Checklist items pinpoint exactly what to inspect and rate from each checklist,
 * for example, Signage, Emergency Lighting, Security Cameras, Flooring, or Doors.
 * Checklist items may contain instructions and guidance on
 * how to effectively assess these items.
 * Each checklist you add to the audit comes with a pre-configured list of checklist items.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItem")))
@interface ScmSdkAuditCheckItem : ScmSdkBase
- (instancetype)initWithAuditCheckItemId:(NSString *)auditCheckItemId name:(NSString *)name description:(NSString *)description passThreshold:(int32_t)passThreshold ratingValue:(id<ScmSdkRatingValue>)ratingValue ratingSystem:(ScmSdkAuditCheckItemRatingSystem *)ratingSystem quantity:(id<ScmSdkAuditCheckItemQuantity>)quantity date:(NSString *)date range:(NSArray<ScmSdkInt *> *)range isImpactVeto:(BOOL)isImpactVeto isImpactIgnore:(BOOL)isImpactIgnore isUnlisted:(BOOL)isUnlisted comments:(NSArray<ScmSdkCheckItemComment *> *)comments workOrderTemplates:(NSArray<ScmSdkWorkOrderTemplate *> *)workOrderTemplates shortStatisticItems:(NSArray<ScmSdkAuditCheckItemStatisticItemShort *> *)shortStatisticItems existedWorkOrders:(NSArray<ScmSdkExistedWorkOrder *> *)existedWorkOrders __attribute__((swift_name("init(auditCheckItemId:name:description:passThreshold:ratingValue:ratingSystem:quantity:date:range:isImpactVeto:isImpactIgnore:isUnlisted:comments:workOrderTemplates:shortStatisticItems:existedWorkOrders:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkCheckItemComment *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderTemplate *> *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkAuditCheckItemStatisticItemShort *> *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkExistedWorkOrder *> *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkRatingValue>)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemRatingSystem *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkAuditCheckItemQuantity>)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Checklist items pinpoint exactly what to inspect and rate from each checklist,
 * for example, Signage, Emergency Lighting, Security Cameras, Flooring, or Doors.
 * Checklist items may contain instructions and guidance on
 * how to effectively assess these items.
 * Each checklist you add to the audit comes with a pre-configured list of checklist items.
 */
- (ScmSdkAuditCheckItem *)doCopyAuditCheckItemId:(NSString *)auditCheckItemId name:(NSString *)name description:(NSString *)description passThreshold:(int32_t)passThreshold ratingValue:(id<ScmSdkRatingValue>)ratingValue ratingSystem:(ScmSdkAuditCheckItemRatingSystem *)ratingSystem quantity:(id<ScmSdkAuditCheckItemQuantity>)quantity date:(NSString *)date range:(NSArray<ScmSdkInt *> *)range isImpactVeto:(BOOL)isImpactVeto isImpactIgnore:(BOOL)isImpactIgnore isUnlisted:(BOOL)isUnlisted comments:(NSArray<ScmSdkCheckItemComment *> *)comments workOrderTemplates:(NSArray<ScmSdkWorkOrderTemplate *> *)workOrderTemplates shortStatisticItems:(NSArray<ScmSdkAuditCheckItemStatisticItemShort *> *)shortStatisticItems existedWorkOrders:(NSArray<ScmSdkExistedWorkOrder *> *)existedWorkOrders __attribute__((swift_name("doCopy(auditCheckItemId:name:description:passThreshold:ratingValue:ratingSystem:quantity:date:range:isImpactVeto:isImpactIgnore:isUnlisted:comments:workOrderTemplates:shortStatisticItems:existedWorkOrders:)")));

/**
 * Checklist items pinpoint exactly what to inspect and rate from each checklist,
 * for example, Signage, Emergency Lighting, Security Cameras, Flooring, or Doors.
 * Checklist items may contain instructions and guidance on
 * how to effectively assess these items.
 * Each checklist you add to the audit comes with a pre-configured list of checklist items.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Checklist items pinpoint exactly what to inspect and rate from each checklist,
 * for example, Signage, Emergency Lighting, Security Cameras, Flooring, or Doors.
 * Checklist items may contain instructions and guidance on
 * how to effectively assess these items.
 * Each checklist you add to the audit comes with a pre-configured list of checklist items.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Checklist items pinpoint exactly what to inspect and rate from each checklist,
 * for example, Signage, Emergency Lighting, Security Cameras, Flooring, or Doors.
 * Checklist items may contain instructions and guidance on
 * how to effectively assess these items.
 * Each checklist you add to the audit comes with a pre-configured list of checklist items.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSArray<ScmSdkCheckItemComment *> *comments __attribute__((swift_name("comments")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSArray<ScmSdkExistedWorkOrder *> *existedWorkOrders __attribute__((swift_name("existedWorkOrders")));
@property (readonly) BOOL isImpactIgnore __attribute__((swift_name("isImpactIgnore")));
@property (readonly) BOOL isImpactVeto __attribute__((swift_name("isImpactVeto")));
@property (readonly) BOOL isUnlisted __attribute__((swift_name("isUnlisted")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t passThreshold __attribute__((swift_name("passThreshold")));
@property (readonly) id<ScmSdkAuditCheckItemQuantity> quantity __attribute__((swift_name("quantity")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) ScmSdkAuditCheckItemRatingSystem *ratingSystem __attribute__((swift_name("ratingSystem")));
@property (readonly) id<ScmSdkRatingValue> ratingValue __attribute__((swift_name("ratingValue")));
@property (readonly) NSArray<ScmSdkAuditCheckItemStatisticItemShort *> *shortStatisticItems __attribute__((swift_name("shortStatisticItems")));
@property (readonly) NSArray<ScmSdkWorkOrderTemplate *> *workOrderTemplates __attribute__((swift_name("workOrderTemplates")));
@end

__attribute__((swift_name("AuditCheckItemQuantity")))
@protocol ScmSdkAuditCheckItemQuantity
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemQuantityExist")))
@interface ScmSdkAuditCheckItemQuantityExist : ScmSdkBase <ScmSdkAuditCheckItemQuantity>
- (instancetype)initWithTitle:(NSString *)title value:(int32_t)value __attribute__((swift_name("init(title:value:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemQuantityExist *)doCopyTitle:(NSString *)title value:(int32_t)value __attribute__((swift_name("doCopy(title:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemQuantityNotExist")))
@interface ScmSdkAuditCheckItemQuantityNotExist : ScmSdkBase <ScmSdkAuditCheckItemQuantity>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notExist __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuditCheckItemQuantityNotExist *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItem.StatisticItemShort")))
@interface ScmSdkAuditCheckItemStatisticItemShort : ScmSdkBase
- (instancetype)initWithId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date status:(int32_t)status statusNumeric:(int32_t)statusNumeric isUseNumericRatingSystem:(BOOL)isUseNumericRatingSystem workOrderCount:(int32_t)workOrderCount commentsCount:(int32_t)commentsCount attachmentsCount:(int32_t)attachmentsCount quantityCount:(int32_t)quantityCount score:(ScmSdkInt * _Nullable)score system:(int32_t)system range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("init(id:auditCheckItemId:date:status:statusNumeric:isUseNumericRatingSystem:workOrderCount:commentsCount:attachmentsCount:quantityCount:score:system:range:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemStatisticItemShort *)doCopyId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date status:(int32_t)status statusNumeric:(int32_t)statusNumeric isUseNumericRatingSystem:(BOOL)isUseNumericRatingSystem workOrderCount:(int32_t)workOrderCount commentsCount:(int32_t)commentsCount attachmentsCount:(int32_t)attachmentsCount quantityCount:(int32_t)quantityCount score:(ScmSdkInt * _Nullable)score system:(int32_t)system range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("doCopy(id:auditCheckItemId:date:status:statusNumeric:isUseNumericRatingSystem:workOrderCount:commentsCount:attachmentsCount:quantityCount:score:system:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t attachmentsCount __attribute__((swift_name("attachmentsCount")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) int32_t commentsCount __attribute__((swift_name("commentsCount")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isUseNumericRatingSystem __attribute__((swift_name("isUseNumericRatingSystem")));
@property (readonly) int32_t quantityCount __attribute__((swift_name("quantityCount")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) ScmSdkInt * _Nullable score __attribute__((swift_name("score")));
@property (readonly) int32_t status __attribute__((swift_name("status")));
@property (readonly) int32_t statusNumeric __attribute__((swift_name("statusNumeric")));
@property (readonly) int32_t system __attribute__((swift_name("system")));
@property (readonly) int32_t workOrderCount __attribute__((swift_name("workOrderCount")));
@end


/**
 * When an auditor is on site, they inspect the location and rate checklist items.
 * How items are evaluated depends on the rating system assigned to them.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemStatus")))
@interface ScmSdkAuditCheckItemStatus : ScmSdkKotlinEnum<ScmSdkAuditCheckItemStatus *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * When an auditor is on site, they inspect the location and rate checklist items.
 * How items are evaluated depends on the rating system assigned to them.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkAuditCheckItemStatus *untouched __attribute__((swift_name("untouched")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric1 __attribute__((swift_name("numeric1")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric2 __attribute__((swift_name("numeric2")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric3 __attribute__((swift_name("numeric3")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric4 __attribute__((swift_name("numeric4")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric5 __attribute__((swift_name("numeric5")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *checked __attribute__((swift_name("checked")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *fail __attribute__((swift_name("fail")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *na __attribute__((swift_name("na")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *great __attribute__((swift_name("great")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *numeric __attribute__((swift_name("numeric")));
@property (class, readonly) ScmSdkAuditCheckItemStatus *percentage __attribute__((swift_name("percentage")));
+ (ScmSdkKotlinArray<ScmSdkAuditCheckItemStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end


/**
 * Checklists typically determine your focus, and are often a specific section of an area,
 * for example, Building, Parking Lot, Kitchen, Office, or Restroom.
 * Checklists are containers that house checklist items, or rather the specific auditing tasks.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckList")))
@interface ScmSdkAuditCheckList : ScmSdkBase
- (instancetype)initWithCheckListId:(NSString *)checkListId name:(NSString *)name restOfCheckItems:(int32_t)restOfCheckItems serverId:(int32_t)serverId countCheckItems:(int32_t)countCheckItems sortOrder:(int32_t)sortOrder isUnlisted:(BOOL)isUnlisted __attribute__((swift_name("init(checkListId:name:restOfCheckItems:serverId:countCheckItems:sortOrder:isUnlisted:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Checklists typically determine your focus, and are often a specific section of an area,
 * for example, Building, Parking Lot, Kitchen, Office, or Restroom.
 * Checklists are containers that house checklist items, or rather the specific auditing tasks.
 */
- (ScmSdkAuditCheckList *)doCopyCheckListId:(NSString *)checkListId name:(NSString *)name restOfCheckItems:(int32_t)restOfCheckItems serverId:(int32_t)serverId countCheckItems:(int32_t)countCheckItems sortOrder:(int32_t)sortOrder isUnlisted:(BOOL)isUnlisted __attribute__((swift_name("doCopy(checkListId:name:restOfCheckItems:serverId:countCheckItems:sortOrder:isUnlisted:)")));

/**
 * Checklists typically determine your focus, and are often a specific section of an area,
 * for example, Building, Parking Lot, Kitchen, Office, or Restroom.
 * Checklists are containers that house checklist items, or rather the specific auditing tasks.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Checklists typically determine your focus, and are often a specific section of an area,
 * for example, Building, Parking Lot, Kitchen, Office, or Restroom.
 * Checklists are containers that house checklist items, or rather the specific auditing tasks.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Checklists typically determine your focus, and are often a specific section of an area,
 * for example, Building, Parking Lot, Kitchen, Office, or Restroom.
 * Checklists are containers that house checklist items, or rather the specific auditing tasks.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *checkListId __attribute__((swift_name("checkListId")));
@property (readonly) int32_t countCheckItems __attribute__((swift_name("countCheckItems")));
@property (readonly) BOOL isUnlisted __attribute__((swift_name("isUnlisted")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t restOfCheckItems __attribute__((swift_name("restOfCheckItems")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((swift_name("AuditInfoExistence")))
@protocol ScmSdkAuditInfoExistence
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoExistenceExist")))
@interface ScmSdkAuditInfoExistenceExist : ScmSdkBase <ScmSdkAuditInfoExistence>
- (instancetype)initWithModel:(ScmSdkAudit *)model __attribute__((swift_name("init(model:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkAudit *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditInfoExistenceExist *)doCopyModel:(ScmSdkAudit *)model __attribute__((swift_name("doCopy(model:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAudit *model __attribute__((swift_name("model")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoExistenceNotExist")))
@interface ScmSdkAuditInfoExistenceNotExist : ScmSdkBase <ScmSdkAuditInfoExistence>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notExist __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkAuditInfoExistenceNotExist *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckAuditInfo")))
@interface ScmSdkCheckAuditInfo : ScmSdkBase
- (instancetype)initWithIsCanBeCreated:(BOOL)isCanBeCreated isOpenAuditMaxCount:(BOOL)isOpenAuditMaxCount isOpenAuditExists:(BOOL)isOpenAuditExists __attribute__((swift_name("init(isCanBeCreated:isOpenAuditMaxCount:isOpenAuditExists:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCheckAuditInfo *)doCopyIsCanBeCreated:(BOOL)isCanBeCreated isOpenAuditMaxCount:(BOOL)isOpenAuditMaxCount isOpenAuditExists:(BOOL)isOpenAuditExists __attribute__((swift_name("doCopy(isCanBeCreated:isOpenAuditMaxCount:isOpenAuditExists:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isCanBeCreated __attribute__((swift_name("isCanBeCreated")));
@property (readonly) BOOL isOpenAuditExists __attribute__((swift_name("isOpenAuditExists")));
@property (readonly) BOOL isOpenAuditMaxCount __attribute__((swift_name("isOpenAuditMaxCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckItemComment")))
@interface ScmSdkCheckItemComment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId serverId:(ScmSdkInt * _Nullable)serverId description:(NSString * _Nullable)description persistent:(BOOL)persistent date:(NSString *)date commentAttachments:(NSArray<ScmSdkCommentAttachment *> * _Nullable)commentAttachments userName:(NSString *)userName __attribute__((swift_name("init(id:auditCheckItemId:serverId:description:persistent:date:commentAttachments:userName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkCommentAttachment *> * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCheckItemComment *)doCopyId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId serverId:(ScmSdkInt * _Nullable)serverId description:(NSString * _Nullable)description persistent:(BOOL)persistent date:(NSString *)date commentAttachments:(NSArray<ScmSdkCommentAttachment *> * _Nullable)commentAttachments userName:(NSString *)userName __attribute__((swift_name("doCopy(id:auditCheckItemId:serverId:description:persistent:date:commentAttachments:userName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSArray<ScmSdkCommentAttachment *> * _Nullable commentAttachments __attribute__((swift_name("commentAttachments")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL persistent __attribute__((swift_name("persistent")));
@property (readonly) ScmSdkInt * _Nullable serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CommentAttachment")))
@interface ScmSdkCommentAttachment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id commentId:(int32_t)commentId serverId:(ScmSdkInt * _Nullable)serverId fileName:(NSString *)fileName filePath:(NSString *)filePath remoteName:(NSString *)remoteName mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("init(id:commentId:serverId:fileName:filePath:remoteName:mimeType:isPosted:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCommentAttachment *)doCopyId:(int32_t)id commentId:(int32_t)commentId serverId:(ScmSdkInt * _Nullable)serverId fileName:(NSString *)fileName filePath:(NSString *)filePath remoteName:(NSString *)remoteName mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("doCopy(id:commentId:serverId:fileName:filePath:remoteName:mimeType:isPosted:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t commentId __attribute__((swift_name("commentId")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *filePath __attribute__((swift_name("filePath")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isPosted __attribute__((swift_name("isPosted")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) ScmSdkInt * _Nullable serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletedSiteAudit")))
@interface ScmSdkCompletedSiteAudit : ScmSdkBase
- (instancetype)initWithId:(int32_t)id startDate:(NSString *)startDate endDate:(NSString *)endDate locationName:(NSString *)locationName location:(ScmSdkCompletedSiteAuditLocation *)location template:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)template_ userName:(NSString *)userName status:(int32_t)status unauditedItems:(int32_t)unauditedItems __attribute__((swift_name("init(id:startDate:endDate:locationName:location:template:userName:status:unauditedItems:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCompletedSiteAuditLocation *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCompletedSiteAudit *)doCopyId:(int32_t)id startDate:(NSString *)startDate endDate:(NSString *)endDate locationName:(NSString *)locationName location:(ScmSdkCompletedSiteAuditLocation *)location template:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)template_ userName:(NSString *)userName status:(int32_t)status unauditedItems:(int32_t)unauditedItems __attribute__((swift_name("doCopy(id:startDate:endDate:locationName:location:template:userName:status:unauditedItems:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *endDate __attribute__((swift_name("endDate")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) ScmSdkCompletedSiteAuditLocation *location __attribute__((swift_name("location")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) int32_t status __attribute__((swift_name("status")));
@property (readonly, getter=template) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *template_ __attribute__((swift_name("template_")));
@property (readonly) int32_t unauditedItems __attribute__((swift_name("unauditedItems")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CompletedSiteAudit.Location")))
@interface ScmSdkCompletedSiteAuditLocation : ScmSdkBase
- (instancetype)initWithId:(int32_t)id storeId:(NSString *)storeId name:(NSString *)name city:(NSString *)city state:(NSString *)state zip:(NSString *)zip address:(NSString *)address countryCode:(NSString *)countryCode __attribute__((swift_name("init(id:storeId:name:city:state:zip:address:countryCode:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCompletedSiteAuditLocation *)doCopyId:(int32_t)id storeId:(NSString *)storeId name:(NSString *)name city:(NSString *)city state:(NSString *)state zip:(NSString *)zip address:(NSString *)address countryCode:(NSString *)countryCode __attribute__((swift_name("doCopy(id:storeId:name:city:state:zip:address:countryCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address __attribute__((swift_name("address")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *countryCode __attribute__((swift_name("countryCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocalCommentInfo")))
@interface ScmSdkLocalCommentInfo : ScmSdkBase
- (instancetype)initWithCommentId:(int32_t)commentId uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments __attribute__((swift_name("init(commentId:uploadedAttachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkCommentAttachment *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocalCommentInfo *)doCopyCommentId:(int32_t)commentId uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments __attribute__((swift_name("doCopy(commentId:uploadedAttachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t commentId __attribute__((swift_name("commentId")));
@property (readonly) NSArray<ScmSdkCommentAttachment *> *uploadedAttachments __attribute__((swift_name("uploadedAttachments")));
@end


/**
 * Result of uploading an audit.
 * [isSaved] [true] if server save audit
 * [message] - Test for email.
 * [checkListsCount] Amount of check lists.
 * [areasCount] Amount of areas.
 * [workOrdersCount] Amount of work orders which attached to the audit.
 * [commentsCount] Amount of comments in audit.
 * [id] Id of new created audit.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PostAuditInfo")))
@interface ScmSdkPostAuditInfo : ScmSdkBase
- (instancetype)initWithIsSaved:(BOOL)isSaved message:(NSString *)message checkListsCount:(int32_t)checkListsCount areasCount:(int32_t)areasCount workOrdersCount:(int32_t)workOrdersCount commentsCount:(int32_t)commentsCount auditId:(ScmSdkInt * _Nullable)auditId __attribute__((swift_name("init(isSaved:message:checkListsCount:areasCount:workOrdersCount:commentsCount:auditId:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Result of uploading an audit.
 * [isSaved] [true] if server save audit
 * [message] - Test for email.
 * [checkListsCount] Amount of check lists.
 * [areasCount] Amount of areas.
 * [workOrdersCount] Amount of work orders which attached to the audit.
 * [commentsCount] Amount of comments in audit.
 * [id] Id of new created audit.
 */
- (ScmSdkPostAuditInfo *)doCopyIsSaved:(BOOL)isSaved message:(NSString *)message checkListsCount:(int32_t)checkListsCount areasCount:(int32_t)areasCount workOrdersCount:(int32_t)workOrdersCount commentsCount:(int32_t)commentsCount auditId:(ScmSdkInt * _Nullable)auditId __attribute__((swift_name("doCopy(isSaved:message:checkListsCount:areasCount:workOrdersCount:commentsCount:auditId:)")));

/**
 * Result of uploading an audit.
 * [isSaved] [true] if server save audit
 * [message] - Test for email.
 * [checkListsCount] Amount of check lists.
 * [areasCount] Amount of areas.
 * [workOrdersCount] Amount of work orders which attached to the audit.
 * [commentsCount] Amount of comments in audit.
 * [id] Id of new created audit.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Result of uploading an audit.
 * [isSaved] [true] if server save audit
 * [message] - Test for email.
 * [checkListsCount] Amount of check lists.
 * [areasCount] Amount of areas.
 * [workOrdersCount] Amount of work orders which attached to the audit.
 * [commentsCount] Amount of comments in audit.
 * [id] Id of new created audit.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Result of uploading an audit.
 * [isSaved] [true] if server save audit
 * [message] - Test for email.
 * [checkListsCount] Amount of check lists.
 * [areasCount] Amount of areas.
 * [workOrdersCount] Amount of work orders which attached to the audit.
 * [commentsCount] Amount of comments in audit.
 * [id] Id of new created audit.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t areasCount __attribute__((swift_name("areasCount")));
@property (readonly) ScmSdkInt * _Nullable auditId __attribute__((swift_name("auditId")));
@property (readonly) int32_t checkListsCount __attribute__((swift_name("checkListsCount")));
@property (readonly) int32_t commentsCount __attribute__((swift_name("commentsCount")));
@property (readonly) BOOL isSaved __attribute__((swift_name("isSaved")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@property (readonly) int32_t workOrdersCount __attribute__((swift_name("workOrdersCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QuantityUnit")))
@interface ScmSdkQuantityUnit : ScmSdkKotlinEnum<ScmSdkQuantityUnit *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkQuantityUnit *quantity __attribute__((swift_name("quantity")));
@property (class, readonly) ScmSdkQuantityUnit *currency __attribute__((swift_name("currency")));
+ (ScmSdkKotlinArray<ScmSdkQuantityUnit *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchHistoryItem")))
@interface ScmSdkSearchHistoryItem : ScmSdkBase
- (instancetype)initWithUserId:(int64_t)userId date:(NSString *)date text:(NSString *)text __attribute__((swift_name("init(userId:date:text:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSearchHistoryItem *)doCopyUserId:(int64_t)userId date:(NSString *)date text:(NSString *)text __attribute__((swift_name("doCopy(userId:date:text:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@property (readonly) int64_t userId __attribute__((swift_name("userId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchHistoryItemParams")))
@interface ScmSdkSearchHistoryItemParams : ScmSdkBase
- (instancetype)initWithDate:(NSString *)date text:(NSString *)text __attribute__((swift_name("init(date:text:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSearchHistoryItemParams *)doCopyDate:(NSString *)date text:(NSString *)text __attribute__((swift_name("doCopy(date:text:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateAuditAttachment")))
@interface ScmSdkUpdateAuditAttachment : ScmSdkBase
- (instancetype)initWithAuditAttachment:(ScmSdkAuditAttachment *)auditAttachment isNeedToUpload:(BOOL)isNeedToUpload __attribute__((swift_name("init(auditAttachment:isNeedToUpload:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkAuditAttachment *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUpdateAuditAttachment *)doCopyAuditAttachment:(ScmSdkAuditAttachment *)auditAttachment isNeedToUpload:(BOOL)isNeedToUpload __attribute__((swift_name("doCopy(auditAttachment:isNeedToUpload:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAuditAttachment *auditAttachment __attribute__((swift_name("auditAttachment")));
@property (readonly) BOOL isNeedToUpload __attribute__((swift_name("isNeedToUpload")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UploadCommentInfo")))
@interface ScmSdkUploadCommentInfo : ScmSdkBase
- (instancetype)initWithCommentId:(int32_t)commentId uploadedAttachments:(NSArray<ScmSdkAuditAttachment *> *)uploadedAttachments __attribute__((swift_name("init(commentId:uploadedAttachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkAuditAttachment *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUploadCommentInfo *)doCopyCommentId:(int32_t)commentId uploadedAttachments:(NSArray<ScmSdkAuditAttachment *> *)uploadedAttachments __attribute__((swift_name("doCopy(commentId:uploadedAttachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t commentId __attribute__((swift_name("commentId")));
@property (readonly) NSArray<ScmSdkAuditAttachment *> *uploadedAttachments __attribute__((swift_name("uploadedAttachments")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UploadWorkOrderTemplateInfo")))
@interface ScmSdkUploadWorkOrderTemplateInfo : ScmSdkBase
- (instancetype)initWithWorkOrderTemplateInfo:(int32_t)workOrderTemplateInfo uploadedAttachments:(NSArray<ScmSdkAuditAttachment *> *)uploadedAttachments __attribute__((swift_name("init(workOrderTemplateInfo:uploadedAttachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkAuditAttachment *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUploadWorkOrderTemplateInfo *)doCopyWorkOrderTemplateInfo:(int32_t)workOrderTemplateInfo uploadedAttachments:(NSArray<ScmSdkAuditAttachment *> *)uploadedAttachments __attribute__((swift_name("doCopy(workOrderTemplateInfo:uploadedAttachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkAuditAttachment *> *uploadedAttachments __attribute__((swift_name("uploadedAttachments")));
@property (readonly) int32_t workOrderTemplateInfo __attribute__((swift_name("workOrderTemplateInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderAttachment")))
@interface ScmSdkWorkOrderAttachment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId serverId:(ScmSdkInt * _Nullable)serverId fileName:(NSString *)fileName filePath:(NSString *)filePath remoteName:(NSString *)remoteName mimeType:(NSString *)mimeType description:(NSString *)description url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("init(id:workOrderTemplateId:serverId:fileName:filePath:remoteName:mimeType:description:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderAttachment *)doCopyId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId serverId:(ScmSdkInt * _Nullable)serverId fileName:(NSString *)fileName filePath:(NSString *)filePath remoteName:(NSString *)remoteName mimeType:(NSString *)mimeType description:(NSString *)description url:(NSString *)url urlResized:(NSString *)urlResized __attribute__((swift_name("doCopy(id:workOrderTemplateId:serverId:fileName:filePath:remoteName:mimeType:description:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *filePath __attribute__((swift_name("filePath")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) ScmSdkInt * _Nullable serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((swift_name("WorkOrderTemplateExistence")))
@protocol ScmSdkWorkOrderTemplateExistence
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplateExistenceExist")))
@interface ScmSdkWorkOrderTemplateExistenceExist : ScmSdkBase <ScmSdkWorkOrderTemplateExistence>
- (instancetype)initWithModel:(ScmSdkWorkOrderTemplate *)model __attribute__((swift_name("init(model:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkWorkOrderTemplate *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateExistenceExist *)doCopyModel:(ScmSdkWorkOrderTemplate *)model __attribute__((swift_name("doCopy(model:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkWorkOrderTemplate *model __attribute__((swift_name("model")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplateExistenceNotExist")))
@interface ScmSdkWorkOrderTemplateExistenceNotExist : ScmSdkBase <ScmSdkWorkOrderTemplateExistence>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)notExist __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderTemplateExistenceNotExist *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemAttachment")))
@interface ScmSdkStatisticItemAttachment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId url:(NSString *)url mimeType:(NSString *)mimeType fileName:(NSString *)fileName __attribute__((swift_name("init(id:serverId:url:mimeType:fileName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemAttachment *)doCopyId:(int32_t)id serverId:(int32_t)serverId url:(NSString *)url mimeType:(NSString *)mimeType fileName:(NSString *)fileName __attribute__((swift_name("doCopy(id:serverId:url:mimeType:fileName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemComment")))
@interface ScmSdkStatisticItemComment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date description:(NSString *)description attachments:(NSArray<ScmSdkStatisticItemAttachment *> *)attachments __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:date:description:attachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkStatisticItemAttachment *> *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemComment *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date description:(NSString *)description attachments:(NSArray<ScmSdkStatisticItemAttachment *> *)attachments __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:date:description:attachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkStatisticItemAttachment *> *attachments __attribute__((swift_name("attachments")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemComponents")))
@interface ScmSdkStatisticItemComponents : ScmSdkBase
- (instancetype)initWithWorkOrders:(NSArray<ScmSdkStatisticItemWorkOrder *> *)workOrders comments:(NSArray<ScmSdkStatisticItemComment *> *)comments quantity:(ScmSdkStatisticItemQuantity * _Nullable)quantity __attribute__((swift_name("init(workOrders:comments:quantity:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkStatisticItemWorkOrder *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkStatisticItemComment *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemQuantity * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemComponents *)doCopyWorkOrders:(NSArray<ScmSdkStatisticItemWorkOrder *> *)workOrders comments:(NSArray<ScmSdkStatisticItemComment *> *)comments quantity:(ScmSdkStatisticItemQuantity * _Nullable)quantity __attribute__((swift_name("doCopy(workOrders:comments:quantity:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkStatisticItemComment *> *comments __attribute__((swift_name("comments")));
@property (readonly) ScmSdkStatisticItemQuantity * _Nullable quantity __attribute__((swift_name("quantity")));
@property (readonly) NSArray<ScmSdkStatisticItemWorkOrder *> *workOrders __attribute__((swift_name("workOrders")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemQuantity")))
@interface ScmSdkStatisticItemQuantity : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId currency:(NSString *)currency value:(int32_t)value __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:currency:value:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemQuantity *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId currency:(NSString *)currency value:(int32_t)value __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:currency:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *currency __attribute__((swift_name("currency")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemWorkOrder")))
@interface ScmSdkStatisticItemWorkOrder : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId description:(NSString *)description priority:(NSString *)priority scheduleDate:(NSString *)scheduleDate problemCode:(NSString *)problemCode attachments:(NSArray<ScmSdkStatisticItemAttachment *> *)attachments __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:description:priority:scheduleDate:problemCode:attachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkStatisticItemAttachment *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemWorkOrder *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId description:(NSString *)description priority:(NSString *)priority scheduleDate:(NSString *)scheduleDate problemCode:(NSString *)problemCode attachments:(NSArray<ScmSdkStatisticItemAttachment *> *)attachments __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:description:priority:scheduleDate:problemCode:attachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkStatisticItemAttachment *> *attachments __attribute__((swift_name("attachments")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problemCode __attribute__((swift_name("problemCode")));
@property (readonly) NSString *scheduleDate __attribute__((swift_name("scheduleDate")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@end

__attribute__((swift_name("ExistedWorkOrder")))
@interface ScmSdkExistedWorkOrder : ScmSdkBase
@property (readonly) NSString *checkItemId __attribute__((swift_name("checkItemId")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExistedWorkOrder.NotUploaded")))
@interface ScmSdkExistedWorkOrderNotUploaded : ScmSdkExistedWorkOrder
- (instancetype)initWithServerId:(int32_t)serverId checkItemId:(NSString *)checkItemId throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("init(serverId:checkItemId:throwable:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkExistedWorkOrderNotUploaded *)doCopyServerId:(int32_t)serverId checkItemId:(NSString *)checkItemId throwable:(ScmSdkKotlinThrowable * _Nullable)throwable __attribute__((swift_name("doCopy(serverId:checkItemId:throwable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *checkItemId __attribute__((swift_name("checkItemId")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable throwable __attribute__((swift_name("throwable")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ExistedWorkOrder.Uploaded")))
@interface ScmSdkExistedWorkOrderUploaded : ScmSdkExistedWorkOrder
- (instancetype)initWithServerId:(int32_t)serverId checkItemId:(NSString *)checkItemId priority:(NSString *)priority trade:(NSString *)trade scheduledDate:(NSString *)scheduledDate description:(NSString *)description category:(NSString *)category problemCode:(NSString *)problemCode tradeId:(int32_t)tradeId attachments:(NSArray<ScmSdkWorkOrderAttachmentInfo *> *)attachments __attribute__((swift_name("init(serverId:checkItemId:priority:trade:scheduledDate:description:category:problemCode:tradeId:attachments:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderAttachmentInfo *> *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkExistedWorkOrderUploaded *)doCopyServerId:(int32_t)serverId checkItemId:(NSString *)checkItemId priority:(NSString *)priority trade:(NSString *)trade scheduledDate:(NSString *)scheduledDate description:(NSString *)description category:(NSString *)category problemCode:(NSString *)problemCode tradeId:(int32_t)tradeId attachments:(NSArray<ScmSdkWorkOrderAttachmentInfo *> *)attachments __attribute__((swift_name("doCopy(serverId:checkItemId:priority:trade:scheduledDate:description:category:problemCode:tradeId:attachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkWorkOrderAttachmentInfo *> *attachments __attribute__((swift_name("attachments")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *checkItemId __attribute__((swift_name("checkItemId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problemCode __attribute__((swift_name("problemCode")));
@property (readonly) NSString *scheduledDate __attribute__((swift_name("scheduledDate")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *trade __attribute__((swift_name("trade")));
@property (readonly) int32_t tradeId __attribute__((swift_name("tradeId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderAttachmentInfo")))
@interface ScmSdkWorkOrderAttachmentInfo : ScmSdkBase
- (instancetype)initWithId:(int32_t)id description:(NSString *)description name:(NSString *)name timeStamp:(NSString *)timeStamp uri:(NSString *)uri urlResized:(NSString *)urlResized __attribute__((swift_name("init(id:description:name:timeStamp:uri:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderAttachmentInfo *)doCopyId:(int32_t)id description:(NSString *)description name:(NSString *)name timeStamp:(NSString *)timeStamp uri:(NSString *)uri urlResized:(NSString *)urlResized __attribute__((swift_name("doCopy(id:description:name:timeStamp:uri:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *timeStamp __attribute__((swift_name("timeStamp")));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate")))
@interface ScmSdkWorkOrderTemplate : ScmSdkBase
- (instancetype)initWithId:(int32_t)id assetId:(ScmSdkInt * _Nullable)assetId purchaseNumber:(NSString * _Nullable)purchaseNumber description:(NSString *)description scheduledDate:(NSString *)scheduledDate priority:(NSString *)priority callerName:(NSString *)callerName problemCode:(NSString *)problemCode callDate:(NSString *)callDate comment:(NSString *)comment contractInfo:(ScmSdkWorkOrderTemplateContractInfo *)contractInfo nte:(float)nte additionalFields:(NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)additionalFields interactiveTroubleshootingFields:(NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)interactiveTroubleshootingFields issueRequestInfo:(ScmSdkWorkOrderTemplateIssueRequestInfo *)issueRequestInfo currencyId:(int32_t)currencyId problemSource:(NSString *)problemSource status:(ScmSdkWorkOrderTemplateStatus *)status attachmentsForUpload:(NSArray<ScmSdkAuditAttachment *> *)attachmentsForUpload attachments:(NSArray<ScmSdkWorkOrderAttachment *> *)attachments category:(NSString *)category setupId:(ScmSdkInt * _Nullable)setupId weatherTypeId:(ScmSdkInt * _Nullable)weatherTypeId weatherTypeName:(NSString * _Nullable)weatherTypeName selection:(NSString *)selection recallWorkOrderId:(ScmSdkInt * _Nullable)recallWorkOrderId recallWorkOrderSelection:(NSString *)recallWorkOrderSelection additionalApprovalCodes:(NSArray<ScmSdkWorkOrderTemplateAdditionalApprovalCode *> *)additionalApprovalCodes glCode:(NSString *)glCode providerEmails:(NSString *)providerEmails workOrderNumber:(NSString *)workOrderNumber __attribute__((swift_name("init(id:assetId:purchaseNumber:description:scheduledDate:priority:callerName:problemCode:callDate:comment:contractInfo:nte:additionalFields:interactiveTroubleshootingFields:issueRequestInfo:currencyId:problemSource:status:attachmentsForUpload:attachments:category:setupId:weatherTypeId:weatherTypeName:selection:recallWorkOrderId:recallWorkOrderSelection:additionalApprovalCodes:glCode:providerEmails:workOrderNumber:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateContractInfo *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateIssueRequestInfo *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateStatus *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkAuditAttachment *> *)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderAttachment *> *)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkWorkOrderTemplateAdditionalApprovalCode *> *)component28 __attribute__((swift_name("component28()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component29 __attribute__((swift_name("component29()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component30 __attribute__((swift_name("component30()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component31 __attribute__((swift_name("component31()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplate *)doCopyId:(int32_t)id assetId:(ScmSdkInt * _Nullable)assetId purchaseNumber:(NSString * _Nullable)purchaseNumber description:(NSString *)description scheduledDate:(NSString *)scheduledDate priority:(NSString *)priority callerName:(NSString *)callerName problemCode:(NSString *)problemCode callDate:(NSString *)callDate comment:(NSString *)comment contractInfo:(ScmSdkWorkOrderTemplateContractInfo *)contractInfo nte:(float)nte additionalFields:(NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)additionalFields interactiveTroubleshootingFields:(NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *)interactiveTroubleshootingFields issueRequestInfo:(ScmSdkWorkOrderTemplateIssueRequestInfo *)issueRequestInfo currencyId:(int32_t)currencyId problemSource:(NSString *)problemSource status:(ScmSdkWorkOrderTemplateStatus *)status attachmentsForUpload:(NSArray<ScmSdkAuditAttachment *> *)attachmentsForUpload attachments:(NSArray<ScmSdkWorkOrderAttachment *> *)attachments category:(NSString *)category setupId:(ScmSdkInt * _Nullable)setupId weatherTypeId:(ScmSdkInt * _Nullable)weatherTypeId weatherTypeName:(NSString * _Nullable)weatherTypeName selection:(NSString *)selection recallWorkOrderId:(ScmSdkInt * _Nullable)recallWorkOrderId recallWorkOrderSelection:(NSString *)recallWorkOrderSelection additionalApprovalCodes:(NSArray<ScmSdkWorkOrderTemplateAdditionalApprovalCode *> *)additionalApprovalCodes glCode:(NSString *)glCode providerEmails:(NSString *)providerEmails workOrderNumber:(NSString *)workOrderNumber __attribute__((swift_name("doCopy(id:assetId:purchaseNumber:description:scheduledDate:priority:callerName:problemCode:callDate:comment:contractInfo:nte:additionalFields:interactiveTroubleshootingFields:issueRequestInfo:currencyId:problemSource:status:attachmentsForUpload:attachments:category:setupId:weatherTypeId:weatherTypeName:selection:recallWorkOrderId:recallWorkOrderSelection:additionalApprovalCodes:glCode:providerEmails:workOrderNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkWorkOrderTemplateAdditionalApprovalCode *> *additionalApprovalCodes __attribute__((swift_name("additionalApprovalCodes")));
@property (readonly) NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *additionalFields __attribute__((swift_name("additionalFields")));
@property (readonly) ScmSdkInt * _Nullable assetId __attribute__((swift_name("assetId")));
@property (readonly) NSArray<ScmSdkWorkOrderAttachment *> *attachments __attribute__((swift_name("attachments")));
@property (readonly) NSArray<ScmSdkAuditAttachment *> *attachmentsForUpload __attribute__((swift_name("attachmentsForUpload")));
@property (readonly) NSString *callDate __attribute__((swift_name("callDate")));
@property (readonly) NSString *callerName __attribute__((swift_name("callerName")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *comment __attribute__((swift_name("comment")));
@property (readonly) ScmSdkWorkOrderTemplateContractInfo *contractInfo __attribute__((swift_name("contractInfo")));
@property (readonly) int32_t currencyId __attribute__((swift_name("currencyId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *glCode __attribute__((swift_name("glCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSArray<ScmSdkWorkOrderTemplateAdditionalField *> *interactiveTroubleshootingFields __attribute__((swift_name("interactiveTroubleshootingFields")));
@property (readonly) ScmSdkWorkOrderTemplateIssueRequestInfo *issueRequestInfo __attribute__((swift_name("issueRequestInfo")));
@property (readonly) float nte __attribute__((swift_name("nte")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problemCode __attribute__((swift_name("problemCode")));
@property (readonly) NSString *problemSource __attribute__((swift_name("problemSource")));
@property (readonly) NSString *providerEmails __attribute__((swift_name("providerEmails")));
@property (readonly) NSString * _Nullable purchaseNumber __attribute__((swift_name("purchaseNumber")));
@property (readonly) ScmSdkInt * _Nullable recallWorkOrderId __attribute__((swift_name("recallWorkOrderId")));
@property (readonly) NSString *recallWorkOrderSelection __attribute__((swift_name("recallWorkOrderSelection")));
@property (readonly) NSString *scheduledDate __attribute__((swift_name("scheduledDate")));
@property (readonly) NSString *selection __attribute__((swift_name("selection")));
@property (readonly) ScmSdkInt * _Nullable setupId __attribute__((swift_name("setupId")));
@property (readonly) ScmSdkWorkOrderTemplateStatus *status __attribute__((swift_name("status")));
@property (readonly) ScmSdkInt * _Nullable weatherTypeId __attribute__((swift_name("weatherTypeId")));
@property (readonly) NSString * _Nullable weatherTypeName __attribute__((swift_name("weatherTypeName")));
@property (readonly) NSString *workOrderNumber __attribute__((swift_name("workOrderNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate.AdditionalApprovalCode")))
@interface ScmSdkWorkOrderTemplateAdditionalApprovalCode : ScmSdkBase
- (instancetype)initWithTitle:(NSString *)title value:(NSString *)value __attribute__((swift_name("init(title:value:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateAdditionalApprovalCode *)doCopyTitle:(NSString *)title value:(NSString *)value __attribute__((swift_name("doCopy(title:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate.AdditionalField")))
@interface ScmSdkWorkOrderTemplateAdditionalField : ScmSdkBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateAdditionalField *)doCopyName:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate.ContractInfo")))
@interface ScmSdkWorkOrderTemplateContractInfo : ScmSdkBase
- (instancetype)initWithLocationId:(int32_t)locationId providerId:(int32_t)providerId tradeName:(NSString *)tradeName __attribute__((swift_name("init(locationId:providerId:tradeName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateContractInfo *)doCopyLocationId:(int32_t)locationId providerId:(int32_t)providerId tradeName:(NSString *)tradeName __attribute__((swift_name("doCopy(locationId:providerId:tradeName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@property (readonly) NSString *tradeName __attribute__((swift_name("tradeName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate.IssueRequestInfo")))
@interface ScmSdkWorkOrderTemplateIssueRequestInfo : ScmSdkBase
- (instancetype)initWithAreaId:(int32_t)areaId problemType:(NSString *)problemType equipmentType:(NSString *)equipmentType extendedAreaName:(NSString *)extendedAreaName __attribute__((swift_name("init(areaId:problemType:equipmentType:extendedAreaName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateIssueRequestInfo *)doCopyAreaId:(int32_t)areaId problemType:(NSString *)problemType equipmentType:(NSString *)equipmentType extendedAreaName:(NSString *)extendedAreaName __attribute__((swift_name("doCopy(areaId:problemType:equipmentType:extendedAreaName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t areaId __attribute__((swift_name("areaId")));
@property (readonly) NSString *equipmentType __attribute__((swift_name("equipmentType")));
@property (readonly) NSString *extendedAreaName __attribute__((swift_name("extendedAreaName")));
@property (readonly) NSString *problemType __attribute__((swift_name("problemType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTemplate.Status")))
@interface ScmSdkWorkOrderTemplateStatus : ScmSdkBase
- (instancetype)initWithPrimary:(NSString *)primary extended:(NSString *)extended __attribute__((swift_name("init(primary:extended:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTemplateStatus *)doCopyPrimary:(NSString *)primary extended:(NSString *)extended __attribute__((swift_name("doCopy(primary:extended:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *extended __attribute__((swift_name("extended")));
@property (readonly) NSString *primary __attribute__((swift_name("primary")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttachmentLoadingResult")))
@interface ScmSdkAttachmentLoadingResult : ScmSdkBase
- (instancetype)initWithTotalAttachmentsCount:(int32_t)totalAttachmentsCount uploadedAttachCount:(int32_t)uploadedAttachCount __attribute__((swift_name("init(totalAttachmentsCount:uploadedAttachCount:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAttachmentLoadingResult *)doCopyTotalAttachmentsCount:(int32_t)totalAttachmentsCount uploadedAttachCount:(int32_t)uploadedAttachCount __attribute__((swift_name("doCopy(totalAttachmentsCount:uploadedAttachCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t totalAttachmentsCount __attribute__((swift_name("totalAttachmentsCount")));
@property (readonly) int32_t uploadedAttachCount __attribute__((swift_name("uploadedAttachCount")));
@end

__attribute__((swift_name("SiteAuditBackgroundUploadMode")))
@protocol ScmSdkSiteAuditBackgroundUploadMode
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditBackgroundUploadModeCompleteOpen")))
@interface ScmSdkSiteAuditBackgroundUploadModeCompleteOpen : ScmSdkBase <ScmSdkSiteAuditBackgroundUploadMode>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)completeOpen __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditBackgroundUploadModeCompleteOpen *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditBackgroundUploadModeCreateOpen")))
@interface ScmSdkSiteAuditBackgroundUploadModeCreateOpen : ScmSdkBase <ScmSdkSiteAuditBackgroundUploadMode>
- (instancetype)initWithIsUnmarkedAudit:(BOOL)isUnmarkedAudit __attribute__((swift_name("init(isUnmarkedAudit:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditBackgroundUploadModeCreateOpen *)doCopyIsUnmarkedAudit:(BOOL)isUnmarkedAudit __attribute__((swift_name("doCopy(isUnmarkedAudit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isUnmarkedAudit __attribute__((swift_name("isUnmarkedAudit")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditBackgroundUploadModePost")))
@interface ScmSdkSiteAuditBackgroundUploadModePost : ScmSdkBase <ScmSdkSiteAuditBackgroundUploadMode>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)post __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSiteAuditBackgroundUploadModePost *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditBackgroundUploadModeUpdateCompleted")))
@interface ScmSdkSiteAuditBackgroundUploadModeUpdateCompleted : ScmSdkBase <ScmSdkSiteAuditBackgroundUploadMode>
- (instancetype)initWithIsNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit isSitePlanningStatus:(BOOL)isSitePlanningStatus __attribute__((swift_name("init(isNeedToDelete:isUnmarkedAudit:isSitePlanningStatus:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditBackgroundUploadModeUpdateCompleted *)doCopyIsNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit isSitePlanningStatus:(BOOL)isSitePlanningStatus __attribute__((swift_name("doCopy(isNeedToDelete:isUnmarkedAudit:isSitePlanningStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isNeedToDelete __attribute__((swift_name("isNeedToDelete")));
@property (readonly) BOOL isSitePlanningStatus __attribute__((swift_name("isSitePlanningStatus")));
@property (readonly) BOOL isUnmarkedAudit __attribute__((swift_name("isUnmarkedAudit")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditBackgroundUploadModeUpdateOpen")))
@interface ScmSdkSiteAuditBackgroundUploadModeUpdateOpen : ScmSdkBase <ScmSdkSiteAuditBackgroundUploadMode>
- (instancetype)initWithIsNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit __attribute__((swift_name("init(isNeedToDelete:isUnmarkedAudit:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditBackgroundUploadModeUpdateOpen *)doCopyIsNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit __attribute__((swift_name("doCopy(isNeedToDelete:isUnmarkedAudit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isNeedToDelete __attribute__((swift_name("isNeedToDelete")));
@property (readonly) BOOL isUnmarkedAudit __attribute__((swift_name("isUnmarkedAudit")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemTemplate")))
@interface ScmSdkAuditCheckItemTemplate : ScmSdkBase
- (instancetype)initWithCheckListTemplateId:(int32_t)checkListTemplateId name:(NSString *)name description:(NSString *)description passThreshold:(int32_t)passThreshold ratingSystem:(ScmSdkAuditCheckItemRatingSystem *)ratingSystem range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("init(checkListTemplateId:name:description:passThreshold:ratingSystem:range:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemRatingSystem *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemTemplate *)doCopyCheckListTemplateId:(int32_t)checkListTemplateId name:(NSString *)name description:(NSString *)description passThreshold:(int32_t)passThreshold ratingSystem:(ScmSdkAuditCheckItemRatingSystem *)ratingSystem range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("doCopy(checkListTemplateId:name:description:passThreshold:ratingSystem:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t checkListTemplateId __attribute__((swift_name("checkListTemplateId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t passThreshold __attribute__((swift_name("passThreshold")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) ScmSdkAuditCheckItemRatingSystem *ratingSystem __attribute__((swift_name("ratingSystem")));
@end


/**
 * [id] - id of name of Audit template check list.
 * [name] - name of Audit template check list. Must be unique.
 * [sortOrder] - can be used for sorting.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckListTemplate")))
@interface ScmSdkAuditCheckListTemplate : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("init(id:name:sortOrder:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * [id] - id of name of Audit template check list.
 * [name] - name of Audit template check list. Must be unique.
 * [sortOrder] - can be used for sorting.
 */
- (ScmSdkAuditCheckListTemplate *)doCopyId:(int32_t)id name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("doCopy(id:name:sortOrder:)")));

/**
 * [id] - id of name of Audit template check list.
 * [name] - name of Audit template check list. Must be unique.
 * [sortOrder] - can be used for sorting.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * [id] - id of name of Audit template check list.
 * [name] - name of Audit template check list. Must be unique.
 * [sortOrder] - can be used for sorting.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * [id] - id of name of Audit template check list.
 * [name] - name of Audit template check list. Must be unique.
 * [sortOrder] - can be used for sorting.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckListTemplateParams")))
@interface ScmSdkAuditCheckListTemplateParams : ScmSdkBase
- (instancetype)initWithAuditInfoTemplateId:(int32_t)auditInfoTemplateId checkListTemplateId:(int32_t)checkListTemplateId auditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName __attribute__((swift_name("init(auditInfoTemplateId:checkListTemplateId:auditAreaId:auditCheckListName:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Old model")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckListTemplateParams *)doCopyAuditInfoTemplateId:(int32_t)auditInfoTemplateId checkListTemplateId:(int32_t)checkListTemplateId auditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName __attribute__((swift_name("doCopy(auditInfoTemplateId:checkListTemplateId:auditAreaId:auditCheckListName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditAreaId __attribute__((swift_name("auditAreaId")));
@property (readonly) NSString *auditCheckListName __attribute__((swift_name("auditCheckListName")));
@property (readonly) int32_t auditInfoTemplateId __attribute__((swift_name("auditInfoTemplateId")));
@property (readonly) int32_t checkListTemplateId __attribute__((swift_name("checkListTemplateId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckListTemplateWithSortOrderParams")))
@interface ScmSdkAuditCheckListTemplateWithSortOrderParams : ScmSdkBase
- (instancetype)initWithCheckListTemplateId:(int32_t)checkListTemplateId auditCheckListName:(NSString *)auditCheckListName sortOrder:(int32_t)sortOrder isCustom:(BOOL)isCustom __attribute__((swift_name("init(checkListTemplateId:auditCheckListName:sortOrder:isCustom:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckListTemplateWithSortOrderParams *)doCopyCheckListTemplateId:(int32_t)checkListTemplateId auditCheckListName:(NSString *)auditCheckListName sortOrder:(int32_t)sortOrder isCustom:(BOOL)isCustom __attribute__((swift_name("doCopy(checkListTemplateId:auditCheckListName:sortOrder:isCustom:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckListName __attribute__((swift_name("auditCheckListName")));
@property (readonly) int32_t checkListTemplateId __attribute__((swift_name("checkListTemplateId")));
@property (readonly) BOOL isCustom __attribute__((swift_name("isCustom")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoTemplate")))
@interface ScmSdkAuditInfoTemplate : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditInfoTemplate *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemRatingSystem")))
@interface ScmSdkAuditCheckItemRatingSystem : ScmSdkKotlinEnum<ScmSdkAuditCheckItemRatingSystem *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkAuditCheckItemRatingSystem *unknown __attribute__((swift_name("unknown")));
@property (class, readonly) ScmSdkAuditCheckItemRatingSystem *passFail __attribute__((swift_name("passFail")));
@property (class, readonly) ScmSdkAuditCheckItemRatingSystem *numeric __attribute__((swift_name("numeric")));
@property (class, readonly) ScmSdkAuditCheckItemRatingSystem *weighted __attribute__((swift_name("weighted")));
@property (class, readonly) ScmSdkAuditCheckItemRatingSystem *percentage __attribute__((swift_name("percentage")));
+ (ScmSdkKotlinArray<ScmSdkAuditCheckItemRatingSystem *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end


/**
 * Values for all rating systems [RatingSystem].
 */
__attribute__((swift_name("RatingValue")))
@protocol ScmSdkRatingValue
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueChecked")))
@interface ScmSdkRatingValueChecked : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)checked __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueChecked *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueFail")))
@interface ScmSdkRatingValueFail : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)fail __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueFail *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueGood")))
@interface ScmSdkRatingValueGood : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)good __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueGood *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueGreat")))
@interface ScmSdkRatingValueGreat : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)great __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueGreat *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueNA")))
@interface ScmSdkRatingValueNA : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nA __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueNA *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueNumeric")))
@interface ScmSdkRatingValueNumeric : ScmSdkBase <ScmSdkRatingValue>
- (instancetype)initWithNumber:(int32_t)number __attribute__((swift_name("init(number:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkRatingValueNumeric *)doCopyNumber:(int32_t)number __attribute__((swift_name("doCopy(number:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t number __attribute__((swift_name("number")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValuePercentage")))
@interface ScmSdkRatingValuePercentage : ScmSdkBase <ScmSdkRatingValue>
- (instancetype)initWithPercent:(int32_t)percent __attribute__((swift_name("init(percent:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkRatingValuePercentage *)doCopyPercent:(int32_t)percent __attribute__((swift_name("doCopy(percent:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t percent __attribute__((swift_name("percent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RatingValueUntouched")))
@interface ScmSdkRatingValueUntouched : ScmSdkBase <ScmSdkRatingValue>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)untouched __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkRatingValueUntouched *shared __attribute__((swift_name("shared")));
@end


/**
 * Parameters required for user data migration.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConfigurationMigrationParams")))
@interface ScmSdkConfigurationMigrationParams : ScmSdkBase
- (instancetype)initWithMigrationType:(ScmSdkMigrationTokenTypeParams *)migrationType token:(NSString *)token tokenType:(NSString *)tokenType refreshToken:(NSString *)refreshToken defaultSubscribeId:(int32_t)defaultSubscribeId __attribute__((swift_name("init(migrationType:token:tokenType:refreshToken:defaultSubscribeId:)"))) __attribute__((objc_designated_initializer));

/**
 * The help token type is necessary to understand
 * which user is logged in to the app
 */
- (ScmSdkMigrationTokenTypeParams *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * [token] to work authorized user
 * [token] can be Access, JWT or child JWT token
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * bearer or jwt
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * refresh token of Access, JWT or child JWT token
 */
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * only for universal user
 * the universal user must have a child of the subscriber
 * [defaultSubscribeId] id of subscriber
 */
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Parameters required for user data migration.
 */
- (ScmSdkConfigurationMigrationParams *)doCopyMigrationType:(ScmSdkMigrationTokenTypeParams *)migrationType token:(NSString *)token tokenType:(NSString *)tokenType refreshToken:(NSString *)refreshToken defaultSubscribeId:(int32_t)defaultSubscribeId __attribute__((swift_name("doCopy(migrationType:token:tokenType:refreshToken:defaultSubscribeId:)")));

/**
 * Parameters required for user data migration.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Parameters required for user data migration.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Parameters required for user data migration.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * only for universal user
 * the universal user must have a child of the subscriber
 * [defaultSubscribeId] id of subscriber
 */
@property (readonly) int32_t defaultSubscribeId __attribute__((swift_name("defaultSubscribeId")));

/**
 * The help token type is necessary to understand
 * which user is logged in to the app
 */
@property (readonly) ScmSdkMigrationTokenTypeParams *migrationType __attribute__((swift_name("migrationType")));

/**
 * refresh token of Access, JWT or child JWT token
 */
@property (readonly) NSString *refreshToken __attribute__((swift_name("refreshToken")));

/**
 * [token] to work authorized user
 * [token] can be Access, JWT or child JWT token
 */
@property (readonly) NSString *token __attribute__((swift_name("token")));

/**
 * bearer or jwt
 */
@property (readonly) NSString *tokenType __attribute__((swift_name("tokenType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MigrationTokenTypeParams")))
@interface ScmSdkMigrationTokenTypeParams : ScmSdkKotlinEnum<ScmSdkMigrationTokenTypeParams *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkMigrationTokenTypeParams *accessToken __attribute__((swift_name("accessToken")));
@property (class, readonly) ScmSdkMigrationTokenTypeParams *jwtToken __attribute__((swift_name("jwtToken")));
+ (ScmSdkKotlinArray<ScmSdkMigrationTokenTypeParams *> *)values __attribute__((swift_name("values()")));
@end


/**
 * API for migrating to the SDK for apps
 */
__attribute__((swift_name("ScmMigration")))
@protocol ScmSdkScmMigration
@required

/**
 * Method for migrating user data from the app to the SDK.
 * Performs the transfer of the user's tokens and requests the user's profile,
 * permissions to work, and so on.
 *
 * @param [params] - user tokens
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)migrationParams:(ScmSdkConfigurationMigrationParams *)params completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("migration(params:completionHandler:)")));
@end

__attribute__((swift_name("ScmLocations")))
@protocol ScmSdkScmLocations
@required

/**
 * @param [page] - Number of the current page.
 * @param [pageSize] - Limit to return items.
 * @param [search] - User input text.
 *
 * @return Current page with districts.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDistrictsPagePage:(int32_t)page pageSize:(int32_t)pageSize search:(NSString *)search completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getDistrictsPage(page:pageSize:search:completionHandler:)")));

/**
 * @return First location or null if there are no locations.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFirstLocationOrNullWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getFirstLocationOrNull(completionHandler:)")));

/**
 * @param [locationId] - Unique numeric identifier of the location to return the details for.
 *
 * @return [Location] for the selected identifier.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLocationByIdLocationId:(int32_t)locationId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getLocationById(locationId:completionHandler:)")));

/**
 * @param [storeId] - Alphanumeric location identifier in the client’s system. Assigned by and unique per subscriber.
 *
 * @return [Location] for the selected identifier.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLocationByStoreIdStoreId:(NSString *)storeId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getLocationByStoreId(storeId:completionHandler:)")));

/**
 * @param [locationId] - Unique numeric identifier of the location to return the notes for
 *
 * @return [Result] of operation
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLocationNotesLocationId:(int32_t)locationId completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getLocationNotes(locationId:completionHandler:)")));

/**
 * @param [page] - Number of the current page.
 * @param [pageSize] - Limit to return items.
 * @param [search] - User input text.
 * @param [latitude] - coordinate for distance calculating.
 * @param [longitude] - coordinate for distance calculating.
 *
 * @return Current page with locations.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLocationsPagePage:(int32_t)page pageSize:(int32_t)pageSize search:(NSString *)search latitude:(ScmSdkDouble * _Nullable)latitude longitude:(ScmSdkDouble * _Nullable)longitude completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getLocationsPage(page:pageSize:search:latitude:longitude:completionHandler:)")));

/**
 * @param [featureKey] - Unique identifier for understanding which feature want get selected store location
 *
 * @return [Result]<[Location]> for the selected feature or null if there is no selected locations.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getStoreLocationByFeatureKeyFeatureKey:(NSString *)featureKey completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getStoreLocationByFeatureKey(featureKey:completionHandler:)")));

/**
 * @param [locationId] - Unique numeric identifier of the location
 * @param [locNoteHeader] - [Pair] [String] [String] of Header and Value of note to update
 *
 * @return [Result] of operation
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateLocationNotesLocationId:(int32_t)locationId locNoteHeader:(ScmSdkKotlinPair<NSString *, NSString *> *)locNoteHeader completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("updateLocationNotes(locationId:locNoteHeader:completionHandler:)")));

/**
 * @param [featureKey] - Unique identifier for understanding which feature want update selected store location
 *
 * @return [Result] of operation
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateStoreLocationFeatureKey:(NSString *)featureKey location:(ScmSdkLocationsPageLocation *)location completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("updateStoreLocation(featureKey:location:completionHandler:)")));
@end


/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 * @param [districts] - district names.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DistrictsPage")))
@interface ScmSdkDistrictsPage : ScmSdkBase
- (instancetype)initWithDistricts:(NSSet<NSString *> *)districts page:(int32_t)page hasNext:(BOOL)hasNext __attribute__((swift_name("init(districts:page:hasNext:)"))) __attribute__((objc_designated_initializer));
- (NSSet<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 * @param [districts] - district names.
 */
- (ScmSdkDistrictsPage *)doCopyDistricts:(NSSet<NSString *> *)districts page:(int32_t)page hasNext:(BOOL)hasNext __attribute__((swift_name("doCopy(districts:page:hasNext:)")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 * @param [districts] - district names.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 * @param [districts] - district names.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 * @param [districts] - district names.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<NSString *> *districts __attribute__((swift_name("districts")));
@property (readonly) BOOL hasNext __attribute__((swift_name("hasNext")));
@property (readonly) int32_t page __attribute__((swift_name("page")));
@end


/**
 * @param [location] - first location.
 * @param [hasNext] - has next location.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FirstLocation")))
@interface ScmSdkFirstLocation : ScmSdkBase
- (instancetype)initWithLocation:(ScmSdkLocationsPageLocation *)location hasNext:(BOOL)hasNext __attribute__((swift_name("init(location:hasNext:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkLocationsPageLocation *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * @param [location] - first location.
 * @param [hasNext] - has next location.
 */
- (ScmSdkFirstLocation *)doCopyLocation:(ScmSdkLocationsPageLocation *)location hasNext:(BOOL)hasNext __attribute__((swift_name("doCopy(location:hasNext:)")));

/**
 * @param [location] - first location.
 * @param [hasNext] - has next location.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * @param [location] - first location.
 * @param [hasNext] - has next location.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * @param [location] - first location.
 * @param [hasNext] - has next location.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL hasNext __attribute__((swift_name("hasNext")));
@property (readonly) ScmSdkLocationsPageLocation *location __attribute__((swift_name("location")));
@end


/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocationsPage")))
@interface ScmSdkLocationsPage : ScmSdkBase
- (instancetype)initWithLocations:(NSArray<ScmSdkLocationsPageLocation *> *)locations page:(int32_t)page hasNext:(BOOL)hasNext __attribute__((swift_name("init(locations:page:hasNext:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkLocationsPageLocation *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 */
- (ScmSdkLocationsPage *)doCopyLocations:(NSArray<ScmSdkLocationsPageLocation *> *)locations page:(int32_t)page hasNext:(BOOL)hasNext __attribute__((swift_name("doCopy(locations:page:hasNext:)")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * @param [hasNext] - has next page.
 * @param [page] - current page.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL hasNext __attribute__((swift_name("hasNext")));
@property (readonly) NSArray<ScmSdkLocationsPageLocation *> *locations __attribute__((swift_name("locations")));
@property (readonly) int32_t page __attribute__((swift_name("page")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocationsPage.Location")))
@interface ScmSdkLocationsPageLocation : ScmSdkBase
- (instancetype)initWithId:(int32_t)id subscriberId:(int32_t)subscriberId storeId:(NSString *)storeId name:(NSString *)name latitude:(double)latitude longitude:(double)longitude address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state region:(NSString *)region district:(NSString *)district zip:(NSString *)zip country:(NSString *)country phone:(NSString *)phone contact:(NSString *)contact openDate:(NSString *)openDate closeDate:(NSString *)closeDate notes:(NSArray<ScmSdkLocationsPageLocationNotes *> *)notes distance:(ScmSdkDouble * _Nullable)distance __attribute__((swift_name("init(id:subscriberId:storeId:name:latitude:longitude:address1:address2:city:state:region:district:zip:country:phone:contact:openDate:closeDate:notes:distance:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkLocationsPageLocationNotes *> *)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDouble * _Nullable)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocationsPageLocation *)doCopyId:(int32_t)id subscriberId:(int32_t)subscriberId storeId:(NSString *)storeId name:(NSString *)name latitude:(double)latitude longitude:(double)longitude address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state region:(NSString *)region district:(NSString *)district zip:(NSString *)zip country:(NSString *)country phone:(NSString *)phone contact:(NSString *)contact openDate:(NSString *)openDate closeDate:(NSString *)closeDate notes:(NSArray<ScmSdkLocationsPageLocationNotes *> *)notes distance:(ScmSdkDouble * _Nullable)distance __attribute__((swift_name("doCopy(id:subscriberId:storeId:name:latitude:longitude:address1:address2:city:state:region:district:zip:country:phone:contact:openDate:closeDate:notes:distance:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address1 __attribute__((swift_name("address1")));
@property (readonly) NSString *address2 __attribute__((swift_name("address2")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *closeDate __attribute__((swift_name("closeDate")));
@property (readonly) NSString *contact __attribute__((swift_name("contact")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) ScmSdkDouble * _Nullable distance __attribute__((swift_name("distance")));
@property (readonly) NSString *district __attribute__((swift_name("district")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) double latitude __attribute__((swift_name("latitude")));
@property (readonly) double longitude __attribute__((swift_name("longitude")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<ScmSdkLocationsPageLocationNotes *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString *openDate __attribute__((swift_name("openDate")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) NSString *region __attribute__((swift_name("region")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocationsPage.LocationNotes")))
@interface ScmSdkLocationsPageLocationNotes : ScmSdkBase
- (instancetype)initWithId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("init(id:headerId:value:header:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocationsPageLocationNotes *)doCopyId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("doCopy(id:headerId:value:header:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *header __attribute__((swift_name("header")));
@property (readonly) int32_t headerId __attribute__((swift_name("headerId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Note")))
@interface ScmSdkNote : ScmSdkBase
- (instancetype)initWithId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("init(id:headerId:value:header:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNote *)doCopyId:(int32_t)id headerId:(int32_t)headerId value:(NSString *)value header:(NSString *)header __attribute__((swift_name("doCopy(id:headerId:value:header:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *header __attribute__((swift_name("header")));
@property (readonly) int32_t headerId __attribute__((swift_name("headerId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("ScmWorkOrder")))
@protocol ScmSdkScmWorkOrder
@required

/**
 * Returns assets, which are attached to the work order.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAssetsByWorkOrderIdWorkOrderId:(int32_t)workOrderId pageSize:(int32_t)pageSize pageNumber:(int32_t)pageNumber completionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderAsset *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAssetsByWorkOrderId(workOrderId:pageSize:pageNumber:completionHandler:)")));

/**
 * Get all categories.
 * @return Categories  [Map] key - id, value - title.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCategoriesWithCompletionHandler:(void (^)(NSDictionary<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCategories(completionHandler:)")));

/**
 * Return category by id.
 * @return Category ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownCategoryId]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCategoryByIdId:(int32_t)id completionHandler:(void (^)(ScmSdkKotlinPair<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCategoryById(id:completionHandler:)")));

/**
 * Get list of work orders (items for list) by [filters].
 * @param filters Filters for search work orders.
 * @param orderBy Field for sorting work orders, for ex. "ScheduleDate desc".
 * @return List of models for list (short model) [SdkWorkOrderShort].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFilteredWorkOrdersFilters:(ScmSdkWorkOrdersFilters *)filters orderBy:(NSString * _Nullable)orderBy completionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderShort *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFilteredWorkOrders(filters:orderBy:completionHandler:)")));

/**
 * Get all priorities.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPrioritiesWithNonSelectable:(BOOL)withNonSelectable completionHandler:(void (^)(NSArray<ScmSdkSdkPriority *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPriorities(withNonSelectable:completionHandler:)")));

/**
 * Return priority by id.
 * @throws [WorkOrderException.WorkOrderUnknownPriorityId]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPriorityByIdId:(int32_t)id completionHandler:(void (^)(ScmSdkSdkPriority * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPriorityById(id:completionHandler:)")));

/**
 * Return provider by id.
 * @return Provider ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownProviderId]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProviderByIdId:(int32_t)id completionHandler:(void (^)(ScmSdkKotlinPair<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProviderById(id:completionHandler:)")));

/**
 * Get all providers.
 * @return Providers  [Map] key - id, value - title.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProvidersWithCompletionHandler:(void (^)(NSDictionary<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProviders(completionHandler:)")));

/**
 * Get all providers.
 * @return Providers list by by trade and location id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProvidersByTradeLocationId:(int32_t)locationId trade:(NSString *)trade assetId:(ScmSdkInt * _Nullable)assetId completionHandler:(void (^)(NSArray<ScmSdkProvider *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProvidersByTrade(locationId:trade:assetId:completionHandler:)")));

/**
 * Return trade by id.
 * @throws [WorkOrderException.WorkOrderUnknownTradeId]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTradeByIdId:(int32_t)id completionHandler:(void (^)(ScmSdkSdkTrade * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTradeById(id:completionHandler:)")));

/**
 * Get all trades.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTradesWithCompletionHandler:(void (^)(NSArray<ScmSdkSdkTrade *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTrades(completionHandler:)")));

/**
 * Return weather type by id.
 * @return Weather type ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownWeatherTypeId]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWeatherTypeByIdId:(int32_t)id completionHandler:(void (^)(ScmSdkKotlinPair<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWeatherTypeById(id:completionHandler:)")));

/**
 * Get all weather types.
 * @return Weather types  [Map] key - id, value - title.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWeatherTypesWithCompletionHandler:(void (^)(NSDictionary<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWeatherTypes(completionHandler:)")));

/**
 * Returns all work order activities by work order id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderActivitiesWorkOrderId:(int32_t)workOrderId completionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderActivity *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderActivities(workOrderId:completionHandler:)")));

/**
 * Returns Budgets by workOrderIds
 * @param fiscalPeriodTime = "Period", "Quarter" or "Year"
 * @param workOrderId = id of work orders
 * @return [SdkWorkOrdersBudgets] of workorders budgets.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderBudgetFiscalPeriodTime:(ScmSdkFiscalPeriodType *)fiscalPeriodTime workOrderId:(int32_t)workOrderId completionHandler:(void (^)(ScmSdkSdkWorkOrderBudget * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderBudget(fiscalPeriodTime:workOrderId:completionHandler:)")));

/**
 * Returns all data for work order by id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderByIdWorkOrderId:(int32_t)workOrderId completionHandler:(void (^)(ScmSdkSdkWorkOrder * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderById(workOrderId:completionHandler:)")));

/**
 * Returns work order last note by list of work order ids.
 * @param List[Int] of work order ids.
 *
 * @return Work order note [SdkNote].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderLastNoteWorkOrderIds:(NSArray<ScmSdkInt *> *)workOrderIds completionHandler:(void (^)(ScmSdkSdkNote * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderLastNote(workOrderIds:completionHandler:)")));

/**
 * Returns note recipients by work order id and note visibility.
 * @param workOrderId work order id.
 * @param noteVisibility note visibility as one of [SdkNoteVisibility].
 *
 * @return List[SdkNoteRecipient] of work order note recipients.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderNoteRecipientsWorkOrderId:(int32_t)workOrderId noteVisibility:(ScmSdkSdkNoteVisibility *)noteVisibility completionHandler:(void (^)(NSArray<ScmSdkSdkNoteRecipient *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderNoteRecipients(workOrderId:noteVisibility:completionHandler:)")));

/**
 * Returns work order notes by work order id.
 * @param workOrderId work order id.
 * @param isPinned [Boolean] flag tht indicates to return only pinned notes.
 * @return List of work order notes [SdkNote].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderNotesWorkOrderId:(int32_t)workOrderId isPinned:(ScmSdkBoolean * _Nullable)isPinned completionHandler:(void (^)(NSArray<ScmSdkSdkNote *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderNotes(workOrderId:isPinned:completionHandler:)")));

/**
 * Returns statuses by workorder
 * @param workOrderId work order id.
 * @param tradeId trade id. If [tradeId] is null will return all statuses.
 * Otherwise will return all filtered statuses + without filter
 * With invalid TradeId - BadRequest with message “Invalid Trade”
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderStatusListWorkOrderId:(int32_t)workOrderId tradeId:(ScmSdkInt * _Nullable)tradeId completionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderStatusList(workOrderId:tradeId:completionHandler:)")));

/**
 * Returns statuses by workorder
 * @param tradeId trade id. If [tradeId] is null will return all statuses.
 * Otherwise will return all filtered statuses + without filter
 * With invalid TradeId - BadRequest with message “Invalid Trade”
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderStatusListByTradeTradeId:(int32_t)tradeId completionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderStatusListByTrade(tradeId:completionHandler:)")));

/**
 * Returns statuses by workorder
 * Otherwise will return all statuses
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getWorkOrderStatusesWithCompletionHandler:(void (^)(NSArray<ScmSdkSdkWorkOrderStatus *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getWorkOrderStatuses(completionHandler:)")));

/**
 * Pins work order note by work order id and note id.
 * @param workOrderId work order id.
 * @param noteId note id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)pinWorkOrderNoteWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("pinWorkOrderNote(workOrderId:noteId:completionHandler:)")));

/**
 * Creates new work order note by work order id and note content.
 * @param params [PostNoteParams] params for create notes.
 *
 * @return [Int] Id of created note.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postWorkOrderNoteParams:(ScmSdkPostNoteParams *)params completionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postWorkOrderNote(params:completionHandler:)")));

/**
 * Unpins work order note by work order id and note id.
 * @param workOrderId work order id.
 * @param noteId note id.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)unPinWorkOrderNoteWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("unPinWorkOrderNote(workOrderId:noteId:completionHandler:)")));

/**
 * Updates work order note by work order id and note id.
 * @param params [UpdateNoteParams] params for update notes.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateWorkOrderNoteParams:(ScmSdkUpdateNoteParams *)params completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateWorkOrderNote(params:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Feedback")))
@interface ScmSdkFeedback : ScmSdkBase
- (instancetype)initWithId:(int32_t)id comment:(NSString *)comment date:(NSString *)date starScore:(int32_t)starScore userId:(int32_t)userId userName:(NSString *)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("init(id:comment:date:starScore:userId:userName:workOrderId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedback *)doCopyId:(int32_t)id comment:(NSString *)comment date:(NSString *)date starScore:(int32_t)starScore userId:(int32_t)userId userName:(NSString *)userName workOrderId:(int32_t)workOrderId __attribute__((swift_name("doCopy(id:comment:date:starScore:userId:userName:workOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *comment __attribute__((swift_name("comment")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t starScore __attribute__((swift_name("starScore")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkPriority")))
@interface ScmSdkSdkPriority : ScmSdkBase
- (instancetype)initWithId:(int32_t)id subscriberId:(int32_t)subscriberId title:(NSString *)title eta:(NSString *)eta isSkipNights:(BOOL)isSkipNights isSkipWeekends:(BOOL)isSkipWeekends isSelectable:(BOOL)isSelectable locationId:(ScmSdkInt * _Nullable)locationId trade:(ScmSdkSdkTrade * _Nullable)trade __attribute__((swift_name("init(id:subscriberId:title:eta:isSkipNights:isSkipWeekends:isSelectable:locationId:trade:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkTrade * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkPriority *)doCopyId:(int32_t)id subscriberId:(int32_t)subscriberId title:(NSString *)title eta:(NSString *)eta isSkipNights:(BOOL)isSkipNights isSkipWeekends:(BOOL)isSkipWeekends isSelectable:(BOOL)isSelectable locationId:(ScmSdkInt * _Nullable)locationId trade:(ScmSdkSdkTrade * _Nullable)trade __attribute__((swift_name("doCopy(id:subscriberId:title:eta:isSkipNights:isSkipWeekends:isSelectable:locationId:trade:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *eta __attribute__((swift_name("eta")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSelectable __attribute__((swift_name("isSelectable")));
@property (readonly) BOOL isSkipNights __attribute__((swift_name("isSkipNights")));
@property (readonly) BOOL isSkipWeekends __attribute__((swift_name("isSkipWeekends")));
@property (readonly) ScmSdkInt * _Nullable locationId __attribute__((swift_name("locationId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) ScmSdkSdkTrade * _Nullable trade __attribute__((swift_name("trade")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkTrade")))
@interface ScmSdkSdkTrade : ScmSdkBase
- (instancetype)initWithId:(int32_t)id title:(NSString *)title subscriberId:(int32_t)subscriberId __attribute__((swift_name("init(id:title:subscriberId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkTrade *)doCopyId:(int32_t)id title:(NSString *)title subscriberId:(int32_t)subscriberId __attribute__((swift_name("doCopy(id:title:subscriberId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder")))
@interface ScmSdkSdkWorkOrder : ScmSdkBase
- (instancetype)initWithId:(int32_t)id location:(ScmSdkLocationsPageLocation *)location assignee:(NSString *)assignee callDate:(NSString *)callDate caller:(NSString *)caller category:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)category completeDate:(NSString *)completeDate contractId:(int32_t)contractId createUserId:(int32_t)createUserId createUserIdentity:(NSString *)createUserIdentity locationId:(int32_t)locationId nte:(ScmSdkSdkWorkOrderNte *)nte problem:(ScmSdkSdkWorkOrderProblem *)problem projectId:(int32_t)projectId workOrderProvider:(ScmSdkWorkOrderProvider *)workOrderProvider providerPriorityName:(NSString *)providerPriorityName purchaseOrderNumber:(NSString *)purchaseOrderNumber reassignDate:(NSString *)reassignDate recordId:(int32_t)recordId scheduleDate:(NSString *)scheduleDate status:(ScmSdkSdkWorkOrderStatus_ *)status subscriberId:(int32_t)subscriberId recallRecordId:(int32_t)recallRecordId subscriberPriority:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)subscriberPriority trade:(ScmSdkSdkWorkOrderTrade *)trade updateDate:(NSString *)updateDate updateUserId:(int32_t)updateUserId updateUserIdentity:(NSString *)updateUserIdentity userIdentity:(NSString *)userIdentity weatherEvent:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)weatherEvent workOrderNumber:(NSString *)workOrderNumber assetCount:(int32_t)assetCount assets:(NSArray<ScmSdkSdkWorkOrderAsset *> *)assets lastNote:(ScmSdkSdkWorkOrderLastNote * _Nullable)lastNote validationStatus:(ScmSdkValidationStatus * _Nullable)validationStatus workOrderActivities:(NSArray<ScmSdkSdkWorkOrderActivity *> *)workOrderActivities resolution:(NSString *)resolution expirationDate:(NSString *)expirationDate approvalCode:(NSString *)approvalCode feedback:(ScmSdkFeedback * _Nullable)feedback isInvoiced:(BOOL)isInvoiced __attribute__((swift_name("init(id:location:assignee:callDate:caller:category:completeDate:contractId:createUserId:createUserIdentity:locationId:nte:problem:projectId:workOrderProvider:providerPriorityName:purchaseOrderNumber:reassignDate:recordId:scheduleDate:status:subscriberId:recallRecordId:subscriberPriority:trade:updateDate:updateUserId:updateUserIdentity:userIdentity:weatherEvent:workOrderNumber:assetCount:assets:lastNote:validationStatus:workOrderActivities:resolution:expirationDate:approvalCode:feedback:isInvoiced:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderNte *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderProblem *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderProvider *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocationsPageLocation *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatus_ *)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderTrade *)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component28 __attribute__((swift_name("component28()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component29 __attribute__((swift_name("component29()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component30 __attribute__((swift_name("component30()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component31 __attribute__((swift_name("component31()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component32 __attribute__((swift_name("component32()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkSdkWorkOrderAsset *> *)component33 __attribute__((swift_name("component33()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderLastNote * _Nullable)component34 __attribute__((swift_name("component34()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatus * _Nullable)component35 __attribute__((swift_name("component35()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkSdkWorkOrderActivity *> *)component36 __attribute__((swift_name("component36()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component37 __attribute__((swift_name("component37()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component38 __attribute__((swift_name("component38()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component39 __attribute__((swift_name("component39()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedback * _Nullable)component40 __attribute__((swift_name("component40()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component41 __attribute__((swift_name("component41()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrder *)doCopyId:(int32_t)id location:(ScmSdkLocationsPageLocation *)location assignee:(NSString *)assignee callDate:(NSString *)callDate caller:(NSString *)caller category:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)category completeDate:(NSString *)completeDate contractId:(int32_t)contractId createUserId:(int32_t)createUserId createUserIdentity:(NSString *)createUserIdentity locationId:(int32_t)locationId nte:(ScmSdkSdkWorkOrderNte *)nte problem:(ScmSdkSdkWorkOrderProblem *)problem projectId:(int32_t)projectId workOrderProvider:(ScmSdkWorkOrderProvider *)workOrderProvider providerPriorityName:(NSString *)providerPriorityName purchaseOrderNumber:(NSString *)purchaseOrderNumber reassignDate:(NSString *)reassignDate recordId:(int32_t)recordId scheduleDate:(NSString *)scheduleDate status:(ScmSdkSdkWorkOrderStatus_ *)status subscriberId:(int32_t)subscriberId recallRecordId:(int32_t)recallRecordId subscriberPriority:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)subscriberPriority trade:(ScmSdkSdkWorkOrderTrade *)trade updateDate:(NSString *)updateDate updateUserId:(int32_t)updateUserId updateUserIdentity:(NSString *)updateUserIdentity userIdentity:(NSString *)userIdentity weatherEvent:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)weatherEvent workOrderNumber:(NSString *)workOrderNumber assetCount:(int32_t)assetCount assets:(NSArray<ScmSdkSdkWorkOrderAsset *> *)assets lastNote:(ScmSdkSdkWorkOrderLastNote * _Nullable)lastNote validationStatus:(ScmSdkValidationStatus * _Nullable)validationStatus workOrderActivities:(NSArray<ScmSdkSdkWorkOrderActivity *> *)workOrderActivities resolution:(NSString *)resolution expirationDate:(NSString *)expirationDate approvalCode:(NSString *)approvalCode feedback:(ScmSdkFeedback * _Nullable)feedback isInvoiced:(BOOL)isInvoiced __attribute__((swift_name("doCopy(id:location:assignee:callDate:caller:category:completeDate:contractId:createUserId:createUserIdentity:locationId:nte:problem:projectId:workOrderProvider:providerPriorityName:purchaseOrderNumber:reassignDate:recordId:scheduleDate:status:subscriberId:recallRecordId:subscriberPriority:trade:updateDate:updateUserId:updateUserIdentity:userIdentity:weatherEvent:workOrderNumber:assetCount:assets:lastNote:validationStatus:workOrderActivities:resolution:expirationDate:approvalCode:feedback:isInvoiced:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *approvalCode __attribute__((swift_name("approvalCode")));
@property (readonly) int32_t assetCount __attribute__((swift_name("assetCount")));
@property (readonly) NSArray<ScmSdkSdkWorkOrderAsset *> *assets __attribute__((swift_name("assets")));
@property (readonly) NSString *assignee __attribute__((swift_name("assignee")));
@property (readonly) NSString *callDate __attribute__((swift_name("callDate")));
@property (readonly) NSString *caller __attribute__((swift_name("caller")));
@property (readonly) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *category __attribute__((swift_name("category")));
@property (readonly) NSString *completeDate __attribute__((swift_name("completeDate")));
@property (readonly) int32_t contractId __attribute__((swift_name("contractId")));
@property (readonly) int32_t createUserId __attribute__((swift_name("createUserId")));
@property (readonly) NSString *createUserIdentity __attribute__((swift_name("createUserIdentity")));
@property (readonly) NSString *expirationDate __attribute__((swift_name("expirationDate")));
@property (readonly) ScmSdkFeedback * _Nullable feedback __attribute__((swift_name("feedback")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isInvoiced __attribute__((swift_name("isInvoiced")));
@property (readonly) ScmSdkSdkWorkOrderLastNote * _Nullable lastNote __attribute__((swift_name("lastNote")));
@property (readonly) ScmSdkLocationsPageLocation *location __attribute__((swift_name("location")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) ScmSdkSdkWorkOrderNte *nte __attribute__((swift_name("nte")));
@property (readonly) ScmSdkSdkWorkOrderProblem *problem __attribute__((swift_name("problem")));
@property (readonly) int32_t projectId __attribute__((swift_name("projectId")));
@property (readonly) NSString *providerPriorityName __attribute__((swift_name("providerPriorityName")));
@property (readonly) NSString *purchaseOrderNumber __attribute__((swift_name("purchaseOrderNumber")));
@property (readonly) NSString *reassignDate __attribute__((swift_name("reassignDate")));
@property (readonly) int32_t recallRecordId __attribute__((swift_name("recallRecordId")));
@property (readonly) int32_t recordId __attribute__((swift_name("recordId")));
@property (readonly) NSString *resolution __attribute__((swift_name("resolution")));
@property (readonly) NSString *scheduleDate __attribute__((swift_name("scheduleDate")));
@property (readonly) ScmSdkSdkWorkOrderStatus_ *status __attribute__((swift_name("status")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *subscriberPriority __attribute__((swift_name("subscriberPriority")));
@property (readonly) ScmSdkSdkWorkOrderTrade *trade __attribute__((swift_name("trade")));
@property (readonly) NSString *updateDate __attribute__((swift_name("updateDate")));
@property (readonly) int32_t updateUserId __attribute__((swift_name("updateUserId")));
@property (readonly) NSString *updateUserIdentity __attribute__((swift_name("updateUserIdentity")));
@property (readonly) NSString *userIdentity __attribute__((swift_name("userIdentity")));
@property (readonly) ScmSdkValidationStatus * _Nullable validationStatus __attribute__((swift_name("validationStatus")));
@property (readonly) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *weatherEvent __attribute__((swift_name("weatherEvent")));
@property (readonly) NSArray<ScmSdkSdkWorkOrderActivity *> *workOrderActivities __attribute__((swift_name("workOrderActivities")));
@property (readonly) NSString *workOrderNumber __attribute__((swift_name("workOrderNumber")));
@property (readonly) ScmSdkWorkOrderProvider *workOrderProvider __attribute__((swift_name("workOrderProvider")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder.LastNote")))
@interface ScmSdkSdkWorkOrderLastNote : ScmSdkBase
- (instancetype)initWithId:(int32_t)id text:(NSString *)text date:(NSString *)date __attribute__((swift_name("init(id:text:date:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderLastNote *)doCopyId:(int32_t)id text:(NSString *)text date:(NSString *)date __attribute__((swift_name("doCopy(id:text:date:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder.Nte")))
@interface ScmSdkSdkWorkOrderNte : ScmSdkBase
- (instancetype)initWithCurrency:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)currency nteValue:(float)nteValue price:(ScmSdkFloat * _Nullable)price tax:(ScmSdkFloat * _Nullable)tax tax2:(ScmSdkFloat * _Nullable)tax2 tax2Type:(NSString *)tax2Type __attribute__((swift_name("init(currency:nteValue:price:tax:tax2:tax2Type:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderNte *)doCopyCurrency:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)currency nteValue:(float)nteValue price:(ScmSdkFloat * _Nullable)price tax:(ScmSdkFloat * _Nullable)tax tax2:(ScmSdkFloat * _Nullable)tax2 tax2Type:(NSString *)tax2Type __attribute__((swift_name("doCopy(currency:nteValue:price:tax:tax2:tax2Type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *currency __attribute__((swift_name("currency")));
@property (readonly) float nteValue __attribute__((swift_name("nteValue")));
@property (readonly) ScmSdkFloat * _Nullable price __attribute__((swift_name("price")));
@property (readonly) ScmSdkFloat * _Nullable tax __attribute__((swift_name("tax")));
@property (readonly) ScmSdkFloat * _Nullable tax2 __attribute__((swift_name("tax2")));
@property (readonly) NSString *tax2Type __attribute__((swift_name("tax2Type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder.Problem")))
@interface ScmSdkSdkWorkOrderProblem : ScmSdkBase
- (instancetype)initWithCode:(NSString *)code description:(NSString *)description source:(NSString *)source __attribute__((swift_name("init(code:description:source:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderProblem *)doCopyCode:(NSString *)code description:(NSString *)description source:(NSString *)source __attribute__((swift_name("doCopy(code:description:source:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *code __attribute__((swift_name("code")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *source __attribute__((swift_name("source")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder.Status")))
@interface ScmSdkSdkWorkOrderStatus_ : ScmSdkBase
- (instancetype)initWithExtended:(NSString *)extended id:(int32_t)id primary:(NSString *)primary __attribute__((swift_name("init(extended:id:primary:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatus_ *)doCopyExtended:(NSString *)extended id:(int32_t)id primary:(NSString *)primary __attribute__((swift_name("doCopy(extended:id:primary:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *extended __attribute__((swift_name("extended")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *primary __attribute__((swift_name("primary")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrder.Trade")))
@interface ScmSdkSdkWorkOrderTrade : ScmSdkBase
- (instancetype)initWithId:(int32_t)id primaryTrade:(NSString *)primaryTrade trade:(NSString *)trade __attribute__((swift_name("init(id:primaryTrade:trade:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderTrade *)doCopyId:(int32_t)id primaryTrade:(NSString *)primaryTrade trade:(NSString *)trade __attribute__((swift_name("doCopy(id:primaryTrade:trade:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *primaryTrade __attribute__((swift_name("primaryTrade")));
@property (readonly) NSString *trade __attribute__((swift_name("trade")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderActivity")))
@interface ScmSdkSdkWorkOrderActivity : ScmSdkBase
- (instancetype)initWithId:(int32_t)id callerId:(NSString *)callerId hasCheckInInfo:(BOOL)hasCheckInInfo hasCheckListResponse:(BOOL)hasCheckListResponse isTimeEdited:(BOOL)isTimeEdited name:(NSString *)name resolutionCode:(NSString *)resolutionCode timeIn:(NSString *)timeIn timeOut:(NSString *)timeOut userId:(NSString *)userId workOrderId:(int32_t)workOrderId workType:(NSString *)workType user:(ScmSdkSdkWorkOrderActivityUser * _Nullable)user __attribute__((swift_name("init(id:callerId:hasCheckInInfo:hasCheckListResponse:isTimeEdited:name:resolutionCode:timeIn:timeOut:userId:workOrderId:workType:user:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderActivityUser * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderActivity *)doCopyId:(int32_t)id callerId:(NSString *)callerId hasCheckInInfo:(BOOL)hasCheckInInfo hasCheckListResponse:(BOOL)hasCheckListResponse isTimeEdited:(BOOL)isTimeEdited name:(NSString *)name resolutionCode:(NSString *)resolutionCode timeIn:(NSString *)timeIn timeOut:(NSString *)timeOut userId:(NSString *)userId workOrderId:(int32_t)workOrderId workType:(NSString *)workType user:(ScmSdkSdkWorkOrderActivityUser * _Nullable)user __attribute__((swift_name("doCopy(id:callerId:hasCheckInInfo:hasCheckListResponse:isTimeEdited:name:resolutionCode:timeIn:timeOut:userId:workOrderId:workType:user:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *callerId __attribute__((swift_name("callerId")));
@property (readonly) BOOL hasCheckInInfo __attribute__((swift_name("hasCheckInInfo")));
@property (readonly) BOOL hasCheckListResponse __attribute__((swift_name("hasCheckListResponse")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isTimeEdited __attribute__((swift_name("isTimeEdited")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *resolutionCode __attribute__((swift_name("resolutionCode")));
@property (readonly) NSString *timeIn __attribute__((swift_name("timeIn")));
@property (readonly) NSString *timeOut __attribute__((swift_name("timeOut")));
@property (readonly) ScmSdkSdkWorkOrderActivityUser * _Nullable user __attribute__((swift_name("user")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@property (readonly) NSString *workType __attribute__((swift_name("workType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderActivity.User")))
@interface ScmSdkSdkWorkOrderActivityUser : ScmSdkBase
- (instancetype)initWithId:(int32_t)id userName:(NSString *)userName name:(NSString *)name fullName:(NSString *)fullName email:(NSString *)email __attribute__((swift_name("init(id:userName:name:fullName:email:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderActivityUser *)doCopyId:(int32_t)id userName:(NSString *)userName name:(NSString *)name fullName:(NSString *)fullName email:(NSString *)email __attribute__((swift_name("doCopy(id:userName:name:fullName:email:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) NSString *fullName __attribute__((swift_name("fullName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderAsset")))
@interface ScmSdkSdkWorkOrderAsset : ScmSdkBase
- (instancetype)initWithId:(int32_t)id tagId:(NSString *)tagId assetTag:(NSString *)assetTag serial:(NSString *)serial model:(NSString *)model brand:(NSString *)brand assetValidated:(BOOL)assetValidated validationRequired:(BOOL)validationRequired validationStatus:(int32_t)validationStatus tagValidationStatus:(int32_t)tagValidationStatus __attribute__((swift_name("init(id:tagId:assetTag:serial:model:brand:assetValidated:validationRequired:validationStatus:tagValidationStatus:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderAsset *)doCopyId:(int32_t)id tagId:(NSString *)tagId assetTag:(NSString *)assetTag serial:(NSString *)serial model:(NSString *)model brand:(NSString *)brand assetValidated:(BOOL)assetValidated validationRequired:(BOOL)validationRequired validationStatus:(int32_t)validationStatus tagValidationStatus:(int32_t)tagValidationStatus __attribute__((swift_name("doCopy(id:tagId:assetTag:serial:model:brand:assetValidated:validationRequired:validationStatus:tagValidationStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *assetTag __attribute__((swift_name("assetTag")));
@property (readonly) BOOL assetValidated __attribute__((swift_name("assetValidated")));
@property (readonly) NSString *brand __attribute__((swift_name("brand")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *model __attribute__((swift_name("model")));
@property (readonly) NSString *serial __attribute__((swift_name("serial")));
@property (readonly) NSString *tagId __attribute__((swift_name("tagId")));
@property (readonly) int32_t tagValidationStatus __attribute__((swift_name("tagValidationStatus")));
@property (readonly) BOOL validationRequired __attribute__((swift_name("validationRequired")));
@property (readonly) int32_t validationStatus __attribute__((swift_name("validationStatus")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderShort")))
@interface ScmSdkSdkWorkOrderShort : ScmSdkBase
- (instancetype)initWithWorkOrderId:(int32_t)workOrderId description:(NSString *)description status:(ScmSdkSdkWorkOrderStatus_ *)status trade:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)trade priority:(NSString *)priority provider:(NSString *)provider category:(NSString *)category scheduledDate:(NSString *)scheduledDate callDate:(NSString *)callDate validationStatus:(ScmSdkValidationStatus * _Nullable)validationStatus feedback:(ScmSdkFeedback * _Nullable)feedback location:(ScmSdkWorkOrderLocation *)location isInvoiced:(BOOL)isInvoiced source:(NSString *)source __attribute__((swift_name("init(workOrderId:description:status:trade:priority:provider:category:scheduledDate:callDate:validationStatus:feedback:location:isInvoiced:source:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatus * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedback * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderLocation *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatus_ *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderShort *)doCopyWorkOrderId:(int32_t)workOrderId description:(NSString *)description status:(ScmSdkSdkWorkOrderStatus_ *)status trade:(ScmSdkKotlinPair<ScmSdkInt *, NSString *> *)trade priority:(NSString *)priority provider:(NSString *)provider category:(NSString *)category scheduledDate:(NSString *)scheduledDate callDate:(NSString *)callDate validationStatus:(ScmSdkValidationStatus * _Nullable)validationStatus feedback:(ScmSdkFeedback * _Nullable)feedback location:(ScmSdkWorkOrderLocation *)location isInvoiced:(BOOL)isInvoiced source:(NSString *)source __attribute__((swift_name("doCopy(workOrderId:description:status:trade:priority:provider:category:scheduledDate:callDate:validationStatus:feedback:location:isInvoiced:source:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *callDate __attribute__((swift_name("callDate")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) ScmSdkFeedback * _Nullable feedback __attribute__((swift_name("feedback")));
@property (readonly) BOOL isInvoiced __attribute__((swift_name("isInvoiced")));
@property (readonly) ScmSdkWorkOrderLocation *location __attribute__((swift_name("location")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *provider __attribute__((swift_name("provider")));
@property (readonly) NSString *scheduledDate __attribute__((swift_name("scheduledDate")));
@property (readonly) NSString *source __attribute__((swift_name("source")));
@property (readonly) ScmSdkSdkWorkOrderStatus_ *status __attribute__((swift_name("status")));
@property (readonly) ScmSdkKotlinPair<ScmSdkInt *, NSString *> *trade __attribute__((swift_name("trade")));
@property (readonly) ScmSdkValidationStatus * _Nullable validationStatus __attribute__((swift_name("validationStatus")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderStatus")))
@interface ScmSdkSdkWorkOrderStatus : ScmSdkBase
- (instancetype)initWithId:(NSString *)id name:(NSString *)name extended:(NSArray<NSString *> *)extended extendedStatuses:(NSArray<ScmSdkSdkWorkOrderStatusExtended *> *)extendedStatuses constraints:(NSArray<ScmSdkSdkWorkOrderStatusConstraints *> *)constraints __attribute__((swift_name("init(id:name:extended:extendedStatuses:constraints:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkSdkWorkOrderStatusExtended *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkSdkWorkOrderStatusConstraints *> *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatus *)doCopyId:(NSString *)id name:(NSString *)name extended:(NSArray<NSString *> *)extended extendedStatuses:(NSArray<ScmSdkSdkWorkOrderStatusExtended *> *)extendedStatuses constraints:(NSArray<ScmSdkSdkWorkOrderStatusConstraints *> *)constraints __attribute__((swift_name("doCopy(id:name:extended:extendedStatuses:constraints:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkSdkWorkOrderStatusConstraints *> *constraints __attribute__((swift_name("constraints")));
@property (readonly) NSArray<NSString *> *extended __attribute__((swift_name("extended")));
@property (readonly) NSArray<ScmSdkSdkWorkOrderStatusExtended *> *extendedStatuses __attribute__((swift_name("extendedStatuses")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderStatusConstraints")))
@interface ScmSdkSdkWorkOrderStatusConstraints : ScmSdkBase
- (instancetype)initWithExtended:(NSString *)extended isResolutionTextRequired:(BOOL)isResolutionTextRequired isShippingInfoRequired:(BOOL)isShippingInfoRequired isResolutionCodesRequired:(BOOL)isResolutionCodesRequired isScheduledDateRequired:(BOOL)isScheduledDateRequired askForReviews:(BOOL)askForReviews __attribute__((swift_name("init(extended:isResolutionTextRequired:isShippingInfoRequired:isResolutionCodesRequired:isScheduledDateRequired:askForReviews:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatusConstraints *)doCopyExtended:(NSString *)extended isResolutionTextRequired:(BOOL)isResolutionTextRequired isShippingInfoRequired:(BOOL)isShippingInfoRequired isResolutionCodesRequired:(BOOL)isResolutionCodesRequired isScheduledDateRequired:(BOOL)isScheduledDateRequired askForReviews:(BOOL)askForReviews __attribute__((swift_name("doCopy(extended:isResolutionTextRequired:isShippingInfoRequired:isResolutionCodesRequired:isScheduledDateRequired:askForReviews:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL askForReviews __attribute__((swift_name("askForReviews")));
@property (readonly) NSString *extended __attribute__((swift_name("extended")));
@property (readonly) BOOL isResolutionCodesRequired __attribute__((swift_name("isResolutionCodesRequired")));
@property (readonly) BOOL isResolutionTextRequired __attribute__((swift_name("isResolutionTextRequired")));
@property (readonly) BOOL isScheduledDateRequired __attribute__((swift_name("isScheduledDateRequired")));
@property (readonly) BOOL isShippingInfoRequired __attribute__((swift_name("isShippingInfoRequired")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderStatusExtended")))
@interface ScmSdkSdkWorkOrderStatusExtended : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderStatusExtended *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidationStatus")))
@interface ScmSdkValidationStatus : ScmSdkBase
- (instancetype)initWithAssetsValidationStatuses:(NSArray<ScmSdkValidationStatusAssetsValidationStatus *> *)assetsValidationStatuses commonWoValidationStatus:(NSString *)commonWoValidationStatus userRuleValidationType:(int32_t)userRuleValidationType workOrderId:(int32_t)workOrderId __attribute__((swift_name("init(assetsValidationStatuses:commonWoValidationStatus:userRuleValidationType:workOrderId:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkValidationStatusAssetsValidationStatus *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatus *)doCopyAssetsValidationStatuses:(NSArray<ScmSdkValidationStatusAssetsValidationStatus *> *)assetsValidationStatuses commonWoValidationStatus:(NSString *)commonWoValidationStatus userRuleValidationType:(int32_t)userRuleValidationType workOrderId:(int32_t)workOrderId __attribute__((swift_name("doCopy(assetsValidationStatuses:commonWoValidationStatus:userRuleValidationType:workOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkValidationStatusAssetsValidationStatus *> *assetsValidationStatuses __attribute__((swift_name("assetsValidationStatuses")));
@property (readonly) NSString *commonWoValidationStatus __attribute__((swift_name("commonWoValidationStatus")));
@property (readonly) int32_t userRuleValidationType __attribute__((swift_name("userRuleValidationType")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidationStatus.AssetsValidationStatus")))
@interface ScmSdkValidationStatusAssetsValidationStatus : ScmSdkBase
- (instancetype)initWithAssetId:(int32_t)assetId trackingNumber:(int32_t)trackingNumber unableToValidateReason:(ScmSdkValidationStatusUnableToValidateReason *)unableToValidateReason validationStatus:(int32_t)validationStatus __attribute__((swift_name("init(assetId:trackingNumber:unableToValidateReason:validationStatus:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatusUnableToValidateReason *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatusAssetsValidationStatus *)doCopyAssetId:(int32_t)assetId trackingNumber:(int32_t)trackingNumber unableToValidateReason:(ScmSdkValidationStatusUnableToValidateReason *)unableToValidateReason validationStatus:(int32_t)validationStatus __attribute__((swift_name("doCopy(assetId:trackingNumber:unableToValidateReason:validationStatus:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t assetId __attribute__((swift_name("assetId")));
@property (readonly) int32_t trackingNumber __attribute__((swift_name("trackingNumber")));
@property (readonly) ScmSdkValidationStatusUnableToValidateReason *unableToValidateReason __attribute__((swift_name("unableToValidateReason")));
@property (readonly) int32_t validationStatus __attribute__((swift_name("validationStatus")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ValidationStatus.UnableToValidateReason")))
@interface ScmSdkValidationStatusUnableToValidateReason : ScmSdkBase
- (instancetype)initWithValidationStatusId:(int32_t)validationStatusId validationStatusReason:(NSString *)validationStatusReason __attribute__((swift_name("init(validationStatusId:validationStatusReason:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkValidationStatusUnableToValidateReason *)doCopyValidationStatusId:(int32_t)validationStatusId validationStatusReason:(NSString *)validationStatusReason __attribute__((swift_name("doCopy(validationStatusId:validationStatusReason:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t validationStatusId __attribute__((swift_name("validationStatusId")));
@property (readonly) NSString *validationStatusReason __attribute__((swift_name("validationStatusReason")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderLocation")))
@interface ScmSdkWorkOrderLocation : ScmSdkBase
- (instancetype)initWithId:(int32_t)id storeId:(NSString *)storeId name:(NSString *)name city:(NSString *)city state:(NSString *)state zip:(NSString *)zip address1:(NSString *)address1 address2:(NSString *)address2 countryCode:(NSString *)countryCode isOpened:(BOOL)isOpened __attribute__((swift_name("init(id:storeId:name:city:state:zip:address1:address2:countryCode:isOpened:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderLocation *)doCopyId:(int32_t)id storeId:(NSString *)storeId name:(NSString *)name city:(NSString *)city state:(NSString *)state zip:(NSString *)zip address1:(NSString *)address1 address2:(NSString *)address2 countryCode:(NSString *)countryCode isOpened:(BOOL)isOpened __attribute__((swift_name("doCopy(id:storeId:name:city:state:zip:address1:address2:countryCode:isOpened:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address1 __attribute__((swift_name("address1")));
@property (readonly) NSString *address2 __attribute__((swift_name("address2")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *countryCode __attribute__((swift_name("countryCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isOpened __attribute__((swift_name("isOpened")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderProvider")))
@interface ScmSdkWorkOrderProvider : ScmSdkBase
- (instancetype)initWithId:(int32_t)id city:(NSString *)city email:(NSString *)email name:(NSString *)name phone:(NSString *)phone reviewsInfo:(ScmSdkWorkOrderProviderReviewsInfo *)reviewsInfo state:(NSString *)state zip:(NSString *)zip __attribute__((swift_name("init(id:city:email:name:phone:reviewsInfo:state:zip:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderProviderReviewsInfo *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderProvider *)doCopyId:(int32_t)id city:(NSString *)city email:(NSString *)email name:(NSString *)name phone:(NSString *)phone reviewsInfo:(ScmSdkWorkOrderProviderReviewsInfo *)reviewsInfo state:(NSString *)state zip:(NSString *)zip __attribute__((swift_name("doCopy(id:city:email:name:phone:reviewsInfo:state:zip:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) ScmSdkWorkOrderProviderReviewsInfo *reviewsInfo __attribute__((swift_name("reviewsInfo")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderProvider.ReviewsInfo")))
@interface ScmSdkWorkOrderProviderReviewsInfo : ScmSdkBase
- (instancetype)initWithAverageRating:(float)averageRating recentReviewDate:(NSString *)recentReviewDate reviewsNumber:(int32_t)reviewsNumber __attribute__((swift_name("init(averageRating:recentReviewDate:reviewsNumber:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderProviderReviewsInfo *)doCopyAverageRating:(float)averageRating recentReviewDate:(NSString *)recentReviewDate reviewsNumber:(int32_t)reviewsNumber __attribute__((swift_name("doCopy(averageRating:recentReviewDate:reviewsNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float averageRating __attribute__((swift_name("averageRating")));
@property (readonly) NSString *recentReviewDate __attribute__((swift_name("recentReviewDate")));
@property (readonly) int32_t reviewsNumber __attribute__((swift_name("reviewsNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Asset")))
@interface ScmSdkAsset : ScmSdkBase
- (instancetype)initWithId:(int32_t)id tagId:(NSString *)tagId assetTag:(NSString *)assetTag assetTypeId:(int32_t)assetTypeId brand:(NSString *)brand modelNumber:(NSString *)modelNumber serialNumber:(NSString *)serialNumber workOrderArea:(NSString *)workOrderArea brandId:(int32_t)brandId storeId:(int32_t)storeId storeCode:(NSString *)storeCode area:(NSString *)area trade:(NSString *)trade tradeId:(int32_t)tradeId type:(NSString *)type isActive:(BOOL)isActive installDate:(NSString *)installDate purchaseDate:(NSString *)purchaseDate warranty:(ScmSdkAssetAssetWarranty * _Nullable)warranty usesRefrigerant:(int32_t)usesRefrigerant isLeased:(BOOL)isLeased lifeExpectancy:(int32_t)lifeExpectancy originalValue:(float)originalValue leaseDate:(NSString *)leaseDate leasePeriod:(int32_t)leasePeriod condition:(int32_t)condition energyEfficiency:(NSString *)energyEfficiency capacity:(NSString *)capacity hasTagged:(BOOL)hasTagged clearTag:(BOOL)clearTag validationRequired:(BOOL)validationRequired validated:(BOOL)validated tagValidationStatus:(int32_t)tagValidationStatus description:(NSString *)description additionalTradesNames:(NSString *)additionalTradesNames assetTypeGroupId:(int32_t)assetTypeGroupId spend:(float)spend __attribute__((swift_name("init(id:tagId:assetTag:assetTypeId:brand:modelNumber:serialNumber:workOrderArea:brandId:storeId:storeCode:area:trade:tradeId:type:isActive:installDate:purchaseDate:warranty:usesRefrigerant:isLeased:lifeExpectancy:originalValue:leaseDate:leasePeriod:condition:energyEfficiency:capacity:hasTagged:clearTag:validationRequired:validated:tagValidationStatus:description:additionalTradesNames:assetTypeGroupId:spend:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarranty * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component28 __attribute__((swift_name("component28()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component29 __attribute__((swift_name("component29()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component30 __attribute__((swift_name("component30()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component31 __attribute__((swift_name("component31()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component32 __attribute__((swift_name("component32()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component33 __attribute__((swift_name("component33()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component34 __attribute__((swift_name("component34()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component35 __attribute__((swift_name("component35()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component36 __attribute__((swift_name("component36()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component37 __attribute__((swift_name("component37()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAsset *)doCopyId:(int32_t)id tagId:(NSString *)tagId assetTag:(NSString *)assetTag assetTypeId:(int32_t)assetTypeId brand:(NSString *)brand modelNumber:(NSString *)modelNumber serialNumber:(NSString *)serialNumber workOrderArea:(NSString *)workOrderArea brandId:(int32_t)brandId storeId:(int32_t)storeId storeCode:(NSString *)storeCode area:(NSString *)area trade:(NSString *)trade tradeId:(int32_t)tradeId type:(NSString *)type isActive:(BOOL)isActive installDate:(NSString *)installDate purchaseDate:(NSString *)purchaseDate warranty:(ScmSdkAssetAssetWarranty * _Nullable)warranty usesRefrigerant:(int32_t)usesRefrigerant isLeased:(BOOL)isLeased lifeExpectancy:(int32_t)lifeExpectancy originalValue:(float)originalValue leaseDate:(NSString *)leaseDate leasePeriod:(int32_t)leasePeriod condition:(int32_t)condition energyEfficiency:(NSString *)energyEfficiency capacity:(NSString *)capacity hasTagged:(BOOL)hasTagged clearTag:(BOOL)clearTag validationRequired:(BOOL)validationRequired validated:(BOOL)validated tagValidationStatus:(int32_t)tagValidationStatus description:(NSString *)description additionalTradesNames:(NSString *)additionalTradesNames assetTypeGroupId:(int32_t)assetTypeGroupId spend:(float)spend __attribute__((swift_name("doCopy(id:tagId:assetTag:assetTypeId:brand:modelNumber:serialNumber:workOrderArea:brandId:storeId:storeCode:area:trade:tradeId:type:isActive:installDate:purchaseDate:warranty:usesRefrigerant:isLeased:lifeExpectancy:originalValue:leaseDate:leasePeriod:condition:energyEfficiency:capacity:hasTagged:clearTag:validationRequired:validated:tagValidationStatus:description:additionalTradesNames:assetTypeGroupId:spend:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *additionalTradesNames __attribute__((swift_name("additionalTradesNames")));
@property (readonly) NSString *area __attribute__((swift_name("area")));
@property (readonly) NSString *assetTag __attribute__((swift_name("assetTag")));
@property (readonly) int32_t assetTypeGroupId __attribute__((swift_name("assetTypeGroupId")));
@property (readonly) int32_t assetTypeId __attribute__((swift_name("assetTypeId")));
@property (readonly) NSString *brand __attribute__((swift_name("brand")));
@property (readonly) int32_t brandId __attribute__((swift_name("brandId")));
@property (readonly) NSString *capacity __attribute__((swift_name("capacity")));
@property (readonly) BOOL clearTag __attribute__((swift_name("clearTag")));
@property (readonly) int32_t condition __attribute__((swift_name("condition")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *energyEfficiency __attribute__((swift_name("energyEfficiency")));
@property (readonly) BOOL hasTagged __attribute__((swift_name("hasTagged")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *installDate __attribute__((swift_name("installDate")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isLeased __attribute__((swift_name("isLeased")));
@property (readonly) NSString *leaseDate __attribute__((swift_name("leaseDate")));
@property (readonly) int32_t leasePeriod __attribute__((swift_name("leasePeriod")));
@property (readonly) int32_t lifeExpectancy __attribute__((swift_name("lifeExpectancy")));
@property (readonly) NSString *modelNumber __attribute__((swift_name("modelNumber")));
@property (readonly) float originalValue __attribute__((swift_name("originalValue")));
@property (readonly) NSString *purchaseDate __attribute__((swift_name("purchaseDate")));
@property (readonly) NSString *serialNumber __attribute__((swift_name("serialNumber")));
@property (readonly) float spend __attribute__((swift_name("spend")));
@property (readonly) NSString *storeCode __attribute__((swift_name("storeCode")));
@property (readonly) int32_t storeId __attribute__((swift_name("storeId")));
@property (readonly) NSString *tagId __attribute__((swift_name("tagId")));
@property (readonly) int32_t tagValidationStatus __attribute__((swift_name("tagValidationStatus")));
@property (readonly) NSString *trade __attribute__((swift_name("trade")));
@property (readonly) int32_t tradeId __attribute__((swift_name("tradeId")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) int32_t usesRefrigerant __attribute__((swift_name("usesRefrigerant")));
@property (readonly) BOOL validated __attribute__((swift_name("validated")));
@property (readonly) BOOL validationRequired __attribute__((swift_name("validationRequired")));
@property (readonly) ScmSdkAssetAssetWarranty * _Nullable warranty __attribute__((swift_name("warranty")));
@property (readonly) NSString *workOrderArea __attribute__((swift_name("workOrderArea")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Asset.AssetWarranty")))
@interface ScmSdkAssetAssetWarranty : ScmSdkBase
- (instancetype)initWithExpirationDate:(NSString *)expirationDate providerId:(int32_t)providerId provider:(ScmSdkAssetAssetWarrantyProvider * _Nullable)provider nte:(float)nte priority:(NSString *)priority category:(NSString *)category expiration:(ScmSdkAssetAssetWarrantyExpiration * _Nullable)expiration __attribute__((swift_name("init(expirationDate:providerId:provider:nte:priority:category:expiration:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarrantyProvider * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarrantyExpiration * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarranty *)doCopyExpirationDate:(NSString *)expirationDate providerId:(int32_t)providerId provider:(ScmSdkAssetAssetWarrantyProvider * _Nullable)provider nte:(float)nte priority:(NSString *)priority category:(NSString *)category expiration:(ScmSdkAssetAssetWarrantyExpiration * _Nullable)expiration __attribute__((swift_name("doCopy(expirationDate:providerId:provider:nte:priority:category:expiration:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) ScmSdkAssetAssetWarrantyExpiration * _Nullable expiration __attribute__((swift_name("expiration")));
@property (readonly) NSString *expirationDate __attribute__((swift_name("expirationDate")));
@property (readonly) float nte __attribute__((swift_name("nte")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) ScmSdkAssetAssetWarrantyProvider * _Nullable provider __attribute__((swift_name("provider")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Asset.AssetWarrantyExpiration")))
@interface ScmSdkAssetAssetWarrantyExpiration : ScmSdkBase
- (instancetype)initWithType:(NSString *)type period:(int32_t)period __attribute__((swift_name("init(type:period:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarrantyExpiration *)doCopyType:(NSString *)type period:(int32_t)period __attribute__((swift_name("doCopy(type:period:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t period __attribute__((swift_name("period")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Asset.AssetWarrantyProvider")))
@interface ScmSdkAssetAssetWarrantyProvider : ScmSdkBase
- (instancetype)initWithType:(NSString *)type value:(int32_t)value name:(NSString *)name __attribute__((swift_name("init(type:value:name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetAssetWarrantyProvider *)doCopyType:(NSString *)type value:(int32_t)value name:(NSString *)name __attribute__((swift_name("doCopy(type:value:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AssetsInfo")))
@interface ScmSdkAssetsInfo : ScmSdkBase
- (instancetype)initWithAssets:(NSArray<ScmSdkAsset *> *)assets assetRequired:(BOOL)assetRequired assetEntry:(NSString *)assetEntry __attribute__((swift_name("init(assets:assetRequired:assetEntry:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkAsset *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetsInfo *)doCopyAssets:(NSArray<ScmSdkAsset *> *)assets assetRequired:(BOOL)assetRequired assetEntry:(NSString *)assetEntry __attribute__((swift_name("doCopy(assets:assetRequired:assetEntry:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *assetEntry __attribute__((swift_name("assetEntry")));
@property (readonly) BOOL assetRequired __attribute__((swift_name("assetRequired")));
@property (readonly) NSArray<ScmSdkAsset *> *assets __attribute__((swift_name("assets")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkLastLogins")))
@interface ScmSdkSdkLastLogins : ScmSdkBase
- (instancetype)initWithId:(int64_t)id dateTime:(NSString *)dateTime isSuccess:(BOOL)isSuccess details:(NSString *)details __attribute__((swift_name("init(id:dateTime:isSuccess:details:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkLastLogins *)doCopyId:(int64_t)id dateTime:(NSString *)dateTime isSuccess:(BOOL)isSuccess details:(NSString *)details __attribute__((swift_name("doCopy(id:dateTime:isSuccess:details:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) NSString *details __attribute__((swift_name("details")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSuccess __attribute__((swift_name("isSuccess")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkReviews")))
@interface ScmSdkSdkReviews : ScmSdkBase
- (instancetype)initWithId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("init(id:dateTime:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkReviews *)doCopyId:(int64_t)id dateTime:(NSString *)dateTime __attribute__((swift_name("doCopy(id:dateTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IssueField")))
@interface ScmSdkIssueField : ScmSdkBase
- (instancetype)initWithId:(NSString *)id areaName:(NSString *)areaName problemType:(NSString *)problemType problem:(NSString *)problem item:(NSString *)item forValue:(NSString *)forValue header:(NSString *)header errorText:(NSString *)errorText exclude:(NSString *)exclude min:(NSString *)min max:(NSString *)max step:(NSString *)step helptip:(NSString *)helptip expectedValue:(NSString *)expectedValue type:(int32_t)type allow:(int32_t)allow options:(NSArray<NSString *> *)options isRequired:(BOOL)isRequired isDisableFilter:(BOOL)isDisableFilter decisions:(NSArray<ScmSdkIssueFieldDecision *> *)decisions mediaUrl:(NSString *)mediaUrl __attribute__((swift_name("init(id:areaName:problemType:problem:item:forValue:header:errorText:exclude:min:max:step:helptip:expectedValue:type:allow:options:isRequired:isDisableFilter:decisions:mediaUrl:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkIssueFieldDecision *> *)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkIssueField *)doCopyId:(NSString *)id areaName:(NSString *)areaName problemType:(NSString *)problemType problem:(NSString *)problem item:(NSString *)item forValue:(NSString *)forValue header:(NSString *)header errorText:(NSString *)errorText exclude:(NSString *)exclude min:(NSString *)min max:(NSString *)max step:(NSString *)step helptip:(NSString *)helptip expectedValue:(NSString *)expectedValue type:(int32_t)type allow:(int32_t)allow options:(NSArray<NSString *> *)options isRequired:(BOOL)isRequired isDisableFilter:(BOOL)isDisableFilter decisions:(NSArray<ScmSdkIssueFieldDecision *> *)decisions mediaUrl:(NSString *)mediaUrl __attribute__((swift_name("doCopy(id:areaName:problemType:problem:item:forValue:header:errorText:exclude:min:max:step:helptip:expectedValue:type:allow:options:isRequired:isDisableFilter:decisions:mediaUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t allow __attribute__((swift_name("allow")));
@property (readonly) NSString *areaName __attribute__((swift_name("areaName")));
@property (readonly) NSArray<ScmSdkIssueFieldDecision *> *decisions __attribute__((swift_name("decisions")));
@property (readonly) NSString *errorText __attribute__((swift_name("errorText")));
@property (readonly) NSString *exclude __attribute__((swift_name("exclude")));
@property (readonly) NSString *expectedValue __attribute__((swift_name("expectedValue")));
@property (readonly) NSString *forValue __attribute__((swift_name("forValue")));
@property (readonly) NSString *header __attribute__((swift_name("header")));
@property (readonly) NSString *helptip __attribute__((swift_name("helptip")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) BOOL isDisableFilter __attribute__((swift_name("isDisableFilter")));
@property (readonly) BOOL isRequired __attribute__((swift_name("isRequired")));
@property (readonly) NSString *item __attribute__((swift_name("item")));
@property (readonly) NSString *max __attribute__((swift_name("max")));
@property (readonly) NSString *mediaUrl __attribute__((swift_name("mediaUrl")));
@property (readonly) NSString *min __attribute__((swift_name("min")));
@property (readonly) NSArray<NSString *> *options __attribute__((swift_name("options")));
@property (readonly) NSString *problem __attribute__((swift_name("problem")));
@property (readonly) NSString *problemType __attribute__((swift_name("problemType")));
@property (readonly) NSString *step __attribute__((swift_name("step")));
@property (readonly) int32_t type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("IssueField.Decision")))
@interface ScmSdkIssueFieldDecision : ScmSdkBase
- (instancetype)initWithOptionValue:(NSString *)optionValue nextQuestion:(NSString *)nextQuestion tradeOverride:(NSString *)tradeOverride categoryOverride:(NSString *)categoryOverride priorityOverride:(NSString *)priorityOverride __attribute__((swift_name("init(optionValue:nextQuestion:tradeOverride:categoryOverride:priorityOverride:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkIssueFieldDecision *)doCopyOptionValue:(NSString *)optionValue nextQuestion:(NSString *)nextQuestion tradeOverride:(NSString *)tradeOverride categoryOverride:(NSString *)categoryOverride priorityOverride:(NSString *)priorityOverride __attribute__((swift_name("doCopy(optionValue:nextQuestion:tradeOverride:categoryOverride:priorityOverride:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *categoryOverride __attribute__((swift_name("categoryOverride")));
@property (readonly) NSString *nextQuestion __attribute__((swift_name("nextQuestion")));
@property (readonly) NSString *optionValue __attribute__((swift_name("optionValue")));
@property (readonly) NSString *priorityOverride __attribute__((swift_name("priorityOverride")));
@property (readonly) NSString *tradeOverride __attribute__((swift_name("tradeOverride")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Provider")))
@interface ScmSdkProvider : ScmSdkBase
- (instancetype)initWithId:(int32_t)id providerId:(int32_t)providerId name:(NSString *)name providerName:(NSString *)providerName phone:(NSString *)phone rank:(int32_t)rank isDefault:(BOOL)isDefault address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state zip:(NSString *)zip country:(NSString *)country fullName:(NSString *)fullName recipientEmail:(NSString *)recipientEmail reviewsInfo:(ScmSdkProviderFeedbackReviewsInfo * _Nullable)reviewsInfo feedback:(ScmSdkProviderFeedback * _Nullable)feedback myProviderReview:(ScmSdkProviderFeedback * _Nullable)myProviderReview isReviewedByMe:(BOOL)isReviewedByMe doNotDispatch:(BOOL)doNotDispatch __attribute__((swift_name("init(id:providerId:name:providerName:phone:rank:isDefault:address1:address2:city:state:zip:country:fullName:recipientEmail:reviewsInfo:feedback:myProviderReview:isReviewedByMe:doNotDispatch:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderFeedbackReviewsInfo * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderFeedback * _Nullable)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderFeedback * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProvider *)doCopyId:(int32_t)id providerId:(int32_t)providerId name:(NSString *)name providerName:(NSString *)providerName phone:(NSString *)phone rank:(int32_t)rank isDefault:(BOOL)isDefault address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state zip:(NSString *)zip country:(NSString *)country fullName:(NSString *)fullName recipientEmail:(NSString *)recipientEmail reviewsInfo:(ScmSdkProviderFeedbackReviewsInfo * _Nullable)reviewsInfo feedback:(ScmSdkProviderFeedback * _Nullable)feedback myProviderReview:(ScmSdkProviderFeedback * _Nullable)myProviderReview isReviewedByMe:(BOOL)isReviewedByMe doNotDispatch:(BOOL)doNotDispatch __attribute__((swift_name("doCopy(id:providerId:name:providerName:phone:rank:isDefault:address1:address2:city:state:zip:country:fullName:recipientEmail:reviewsInfo:feedback:myProviderReview:isReviewedByMe:doNotDispatch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address1 __attribute__((swift_name("address1")));
@property (readonly) NSString *address2 __attribute__((swift_name("address2")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) BOOL doNotDispatch __attribute__((swift_name("doNotDispatch")));
@property (readonly) ScmSdkProviderFeedback * _Nullable feedback __attribute__((swift_name("feedback")));
@property (readonly) NSString *fullName __attribute__((swift_name("fullName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isDefault __attribute__((swift_name("isDefault")));
@property (readonly) BOOL isReviewedByMe __attribute__((swift_name("isReviewedByMe")));
@property (readonly) ScmSdkProviderFeedback * _Nullable myProviderReview __attribute__((swift_name("myProviderReview")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@property (readonly) NSString *providerName __attribute__((swift_name("providerName")));
@property (readonly) int32_t rank __attribute__((swift_name("rank")));
@property (readonly) NSString *recipientEmail __attribute__((swift_name("recipientEmail")));
@property (readonly) ScmSdkProviderFeedbackReviewsInfo * _Nullable reviewsInfo __attribute__((swift_name("reviewsInfo")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Provider.Feedback")))
@interface ScmSdkProviderFeedback : ScmSdkBase
- (instancetype)initWithId:(int32_t)id score:(int32_t)score comment:(NSString *)comment date:(NSString *)date workOrderId:(int32_t)workOrderId providerId:(int32_t)providerId userId:(int32_t)userId userName:(NSString *)userName __attribute__((swift_name("init(id:score:comment:date:workOrderId:providerId:userId:userName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderFeedback *)doCopyId:(int32_t)id score:(int32_t)score comment:(NSString *)comment date:(NSString *)date workOrderId:(int32_t)workOrderId providerId:(int32_t)providerId userId:(int32_t)userId userName:(NSString *)userName __attribute__((swift_name("doCopy(id:score:comment:date:workOrderId:providerId:userId:userName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *comment __attribute__((swift_name("comment")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@property (readonly) int32_t score __attribute__((swift_name("score")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Provider.FeedbackReviewsInfo")))
@interface ScmSdkProviderFeedbackReviewsInfo : ScmSdkBase
- (instancetype)initWithRating:(float)rating count:(int32_t)count recentDate:(NSString *)recentDate __attribute__((swift_name("init(rating:count:recentDate:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderFeedbackReviewsInfo *)doCopyRating:(float)rating count:(int32_t)count recentDate:(NSString *)recentDate __attribute__((swift_name("doCopy(rating:count:recentDate:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t count __attribute__((swift_name("count")));
@property (readonly) float rating __attribute__((swift_name("rating")));
@property (readonly) NSString *recentDate __attribute__((swift_name("recentDate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo")))
@interface ScmSdkServiceRequestInfo : ScmSdkBase
- (instancetype)initWithIssueChoice:(ScmSdkServiceRequestInfoIssueChoice * _Nullable)issueChoice providerList:(NSArray<ScmSdkProvider *> *)providerList providersNotFoundMessage:(NSString *)providersNotFoundMessage callerName:(NSString *)callerName scheduledDateOffsetFromCallDate:(int32_t)scheduledDateOffsetFromCallDate assetsInfo:(ScmSdkAssetsInfo * _Nullable)assetsInfo setupRequestConfirm:(ScmSdkServiceRequestInfoSetupRequestConfirm * _Nullable)setupRequestConfirm setupRequest:(ScmSdkServiceRequestInfoSetupRequest * _Nullable)setupRequest setupGeneral:(ScmSdkServiceRequestInfoSetupGeneral * _Nullable)setupGeneral categories:(NSDictionary<ScmSdkInt *, NSString *> *)categories priorities:(NSArray<ScmSdkServiceRequestInfoPriority *> *)priorities weatherTypes:(NSDictionary<ScmSdkInt *, NSString *> *)weatherTypes currency:(ScmSdkServiceRequestInfoCurrency * _Nullable)currency userSettings:(ScmSdkServiceRequestInfoUserSettings * _Nullable)userSettings __attribute__((swift_name("init(issueChoice:providerList:providersNotFoundMessage:callerName:scheduledDateOffsetFromCallDate:assetsInfo:setupRequestConfirm:setupRequest:setupGeneral:categories:priorities:weatherTypes:currency:userSettings:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkServiceRequestInfoIssueChoice * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSDictionary<ScmSdkInt *, NSString *> *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkServiceRequestInfoPriority *> *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSDictionary<ScmSdkInt *, NSString *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoCurrency * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoUserSettings * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkProvider *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAssetsInfo * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupRequestConfirm * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupRequest * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupGeneral * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfo *)doCopyIssueChoice:(ScmSdkServiceRequestInfoIssueChoice * _Nullable)issueChoice providerList:(NSArray<ScmSdkProvider *> *)providerList providersNotFoundMessage:(NSString *)providersNotFoundMessage callerName:(NSString *)callerName scheduledDateOffsetFromCallDate:(int32_t)scheduledDateOffsetFromCallDate assetsInfo:(ScmSdkAssetsInfo * _Nullable)assetsInfo setupRequestConfirm:(ScmSdkServiceRequestInfoSetupRequestConfirm * _Nullable)setupRequestConfirm setupRequest:(ScmSdkServiceRequestInfoSetupRequest * _Nullable)setupRequest setupGeneral:(ScmSdkServiceRequestInfoSetupGeneral * _Nullable)setupGeneral categories:(NSDictionary<ScmSdkInt *, NSString *> *)categories priorities:(NSArray<ScmSdkServiceRequestInfoPriority *> *)priorities weatherTypes:(NSDictionary<ScmSdkInt *, NSString *> *)weatherTypes currency:(ScmSdkServiceRequestInfoCurrency * _Nullable)currency userSettings:(ScmSdkServiceRequestInfoUserSettings * _Nullable)userSettings __attribute__((swift_name("doCopy(issueChoice:providerList:providersNotFoundMessage:callerName:scheduledDateOffsetFromCallDate:assetsInfo:setupRequestConfirm:setupRequest:setupGeneral:categories:priorities:weatherTypes:currency:userSettings:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAssetsInfo * _Nullable assetsInfo __attribute__((swift_name("assetsInfo")));
@property (readonly) NSString *callerName __attribute__((swift_name("callerName")));
@property (readonly) NSDictionary<ScmSdkInt *, NSString *> *categories __attribute__((swift_name("categories")));
@property (readonly) ScmSdkServiceRequestInfoCurrency * _Nullable currency __attribute__((swift_name("currency")));
@property (readonly) ScmSdkServiceRequestInfoIssueChoice * _Nullable issueChoice __attribute__((swift_name("issueChoice")));
@property (readonly) NSArray<ScmSdkServiceRequestInfoPriority *> *priorities __attribute__((swift_name("priorities")));
@property (readonly) NSArray<ScmSdkProvider *> *providerList __attribute__((swift_name("providerList")));
@property (readonly) NSString *providersNotFoundMessage __attribute__((swift_name("providersNotFoundMessage")));
@property (readonly) int32_t scheduledDateOffsetFromCallDate __attribute__((swift_name("scheduledDateOffsetFromCallDate")));
@property (readonly) ScmSdkServiceRequestInfoSetupGeneral * _Nullable setupGeneral __attribute__((swift_name("setupGeneral")));
@property (readonly) ScmSdkServiceRequestInfoSetupRequest * _Nullable setupRequest __attribute__((swift_name("setupRequest")));
@property (readonly) ScmSdkServiceRequestInfoSetupRequestConfirm * _Nullable setupRequestConfirm __attribute__((swift_name("setupRequestConfirm")));
@property (readonly) ScmSdkServiceRequestInfoUserSettings * _Nullable userSettings __attribute__((swift_name("userSettings")));
@property (readonly) NSDictionary<ScmSdkInt *, NSString *> *weatherTypes __attribute__((swift_name("weatherTypes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.Currency")))
@interface ScmSdkServiceRequestInfoCurrency : ScmSdkBase
- (instancetype)initWithId:(int32_t)id alphabeticalCode:(NSString *)alphabeticalCode __attribute__((swift_name("init(id:alphabeticalCode:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoCurrency *)doCopyId:(int32_t)id alphabeticalCode:(NSString *)alphabeticalCode __attribute__((swift_name("doCopy(id:alphabeticalCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *alphabeticalCode __attribute__((swift_name("alphabeticalCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.IssueChoice")))
@interface ScmSdkServiceRequestInfoIssueChoice : ScmSdkBase
- (instancetype)initWithType:(NSString *)type equipmentType:(NSString *)equipmentType problem:(NSString *)problem trade:(NSString *)trade priority:(NSString *)priority equipmentEntry:(NSString *)equipmentEntry category:(NSString *)category comments:(NSString *)comments troubleshootingMessage:(NSString *)troubleshootingMessage currency:(NSString *)currency approvalCode:(NSString *)approvalCode isRequireAttachment:(BOOL)isRequireAttachment isRequireEquipment:(BOOL)isRequireEquipment providerRank:(int32_t)providerRank additionalFields:(NSArray<ScmSdkIssueField *> *)additionalFields nte:(float)nte mediaUrl:(NSString *)mediaUrl __attribute__((swift_name("init(type:equipmentType:problem:trade:priority:equipmentEntry:category:comments:troubleshootingMessage:currency:approvalCode:isRequireAttachment:isRequireEquipment:providerRank:additionalFields:nte:mediaUrl:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkIssueField *> *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoIssueChoice *)doCopyType:(NSString *)type equipmentType:(NSString *)equipmentType problem:(NSString *)problem trade:(NSString *)trade priority:(NSString *)priority equipmentEntry:(NSString *)equipmentEntry category:(NSString *)category comments:(NSString *)comments troubleshootingMessage:(NSString *)troubleshootingMessage currency:(NSString *)currency approvalCode:(NSString *)approvalCode isRequireAttachment:(BOOL)isRequireAttachment isRequireEquipment:(BOOL)isRequireEquipment providerRank:(int32_t)providerRank additionalFields:(NSArray<ScmSdkIssueField *> *)additionalFields nte:(float)nte mediaUrl:(NSString *)mediaUrl __attribute__((swift_name("doCopy(type:equipmentType:problem:trade:priority:equipmentEntry:category:comments:troubleshootingMessage:currency:approvalCode:isRequireAttachment:isRequireEquipment:providerRank:additionalFields:nte:mediaUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkIssueField *> *additionalFields __attribute__((swift_name("additionalFields")));
@property (readonly) NSString *approvalCode __attribute__((swift_name("approvalCode")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *comments __attribute__((swift_name("comments")));
@property (readonly) NSString *currency __attribute__((swift_name("currency")));
@property (readonly) NSString *equipmentEntry __attribute__((swift_name("equipmentEntry")));
@property (readonly) NSString *equipmentType __attribute__((swift_name("equipmentType")));
@property (readonly) BOOL isRequireAttachment __attribute__((swift_name("isRequireAttachment")));
@property (readonly) BOOL isRequireEquipment __attribute__((swift_name("isRequireEquipment")));
@property (readonly) NSString *mediaUrl __attribute__((swift_name("mediaUrl")));
@property (readonly) float nte __attribute__((swift_name("nte")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problem __attribute__((swift_name("problem")));
@property (readonly) int32_t providerRank __attribute__((swift_name("providerRank")));
@property (readonly) NSString *trade __attribute__((swift_name("trade")));
@property (readonly) NSString *troubleshootingMessage __attribute__((swift_name("troubleshootingMessage")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.Priority")))
@interface ScmSdkServiceRequestInfoPriority : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name scheduledDate:(NSString *)scheduledDate eta:(NSString *)eta isSelectable:(BOOL)isSelectable __attribute__((swift_name("init(id:name:scheduledDate:eta:isSelectable:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoPriority *)doCopyId:(int32_t)id name:(NSString *)name scheduledDate:(NSString *)scheduledDate eta:(NSString *)eta isSelectable:(BOOL)isSelectable __attribute__((swift_name("doCopy(id:name:scheduledDate:eta:isSelectable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *eta __attribute__((swift_name("eta")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSelectable __attribute__((swift_name("isSelectable")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *scheduledDate __attribute__((swift_name("scheduledDate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.SetupGeneral")))
@interface ScmSdkServiceRequestInfoSetupGeneral : ScmSdkBase
- (instancetype)initWithIsAllowAddingAttachments:(BOOL)isAllowAddingAttachments isRequireAttachments:(BOOL)isRequireAttachments __attribute__((swift_name("init(isAllowAddingAttachments:isRequireAttachments:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupGeneral *)doCopyIsAllowAddingAttachments:(BOOL)isAllowAddingAttachments isRequireAttachments:(BOOL)isRequireAttachments __attribute__((swift_name("doCopy(isAllowAddingAttachments:isRequireAttachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isAllowAddingAttachments __attribute__((swift_name("isAllowAddingAttachments")));
@property (readonly) BOOL isRequireAttachments __attribute__((swift_name("isRequireAttachments")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.SetupRequest")))
@interface ScmSdkServiceRequestInfoSetupRequest : ScmSdkBase
- (instancetype)initWithIsNteToZeroForRecalls:(BOOL)isNteToZeroForRecalls isOriginalVendorForRecalls:(BOOL)isOriginalVendorForRecalls isEnableEquipment:(BOOL)isEnableEquipment __attribute__((swift_name("init(isNteToZeroForRecalls:isOriginalVendorForRecalls:isEnableEquipment:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupRequest *)doCopyIsNteToZeroForRecalls:(BOOL)isNteToZeroForRecalls isOriginalVendorForRecalls:(BOOL)isOriginalVendorForRecalls isEnableEquipment:(BOOL)isEnableEquipment __attribute__((swift_name("doCopy(isNteToZeroForRecalls:isOriginalVendorForRecalls:isEnableEquipment:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isEnableEquipment __attribute__((swift_name("isEnableEquipment")));
@property (readonly) BOOL isNteToZeroForRecalls __attribute__((swift_name("isNteToZeroForRecalls")));
@property (readonly) BOOL isOriginalVendorForRecalls __attribute__((swift_name("isOriginalVendorForRecalls")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.SetupRequestConfirm")))
@interface ScmSdkServiceRequestInfoSetupRequestConfirm : ScmSdkBase
- (instancetype)initWithIsChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeableNte:(BOOL)isChangeableNte isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isEnablePo:(BOOL)isEnablePo isPoRequired:(BOOL)isPoRequired __attribute__((swift_name("init(isChangeableCategory:isChangeablePriority:isChangeableNte:isChangeableScheduledDate:isChangeableProvider:isEnablePo:isPoRequired:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoSetupRequestConfirm *)doCopyIsChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeableNte:(BOOL)isChangeableNte isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isEnablePo:(BOOL)isEnablePo isPoRequired:(BOOL)isPoRequired __attribute__((swift_name("doCopy(isChangeableCategory:isChangeablePriority:isChangeableNte:isChangeableScheduledDate:isChangeableProvider:isEnablePo:isPoRequired:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isChangeableCategory __attribute__((swift_name("isChangeableCategory")));
@property (readonly) BOOL isChangeableNte __attribute__((swift_name("isChangeableNte")));
@property (readonly) BOOL isChangeablePriority __attribute__((swift_name("isChangeablePriority")));
@property (readonly) BOOL isChangeableProvider __attribute__((swift_name("isChangeableProvider")));
@property (readonly) BOOL isChangeableScheduledDate __attribute__((swift_name("isChangeableScheduledDate")));
@property (readonly) BOOL isEnablePo __attribute__((swift_name("isEnablePo")));
@property (readonly) BOOL isPoRequired __attribute__((swift_name("isPoRequired")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceRequestInfo.UserSettings")))
@interface ScmSdkServiceRequestInfoUserSettings : ScmSdkBase
- (instancetype)initWithMaximumNteAmount:(float)maximumNteAmount __attribute__((swift_name("init(maximumNteAmount:)"))) __attribute__((objc_designated_initializer));
- (float)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkServiceRequestInfoUserSettings *)doCopyMaximumNteAmount:(float)maximumNteAmount __attribute__((swift_name("doCopy(maximumNteAmount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float maximumNteAmount __attribute__((swift_name("maximumNteAmount")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNote")))
@interface ScmSdkSdkNote : ScmSdkBase
- (instancetype)initWithId:(int32_t)id number:(int32_t)number workOrderNumber:(NSString *)workOrderNumber isPinned:(BOOL)isPinned content:(NSString *)content createdDate:(NSString *)createdDate actionRequired:(BOOL)actionRequired mailedTo:(NSString *)mailedTo createdBy:(NSString *)createdBy visibility:(int32_t)visibility visibilityFormat:(ScmSdkSdkNoteVisibility *)visibilityFormat userId:(int32_t)userId subscriberId:(int32_t)subscriberId providerId:(int32_t)providerId attachments:(NSArray<ScmSdkSdkNoteSdkNoteAttachment *> *)attachments __attribute__((swift_name("init(id:number:workOrderNumber:isPinned:content:createdDate:actionRequired:mailedTo:createdBy:visibility:visibilityFormat:userId:subscriberId:providerId:attachments:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkSdkNoteCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkNoteVisibility *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkSdkNoteSdkNoteAttachment *> *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkNote *)doCopyId:(int32_t)id number:(int32_t)number workOrderNumber:(NSString *)workOrderNumber isPinned:(BOOL)isPinned content:(NSString *)content createdDate:(NSString *)createdDate actionRequired:(BOOL)actionRequired mailedTo:(NSString *)mailedTo createdBy:(NSString *)createdBy visibility:(int32_t)visibility visibilityFormat:(ScmSdkSdkNoteVisibility *)visibilityFormat userId:(int32_t)userId subscriberId:(int32_t)subscriberId providerId:(int32_t)providerId attachments:(NSArray<ScmSdkSdkNoteSdkNoteAttachment *> *)attachments __attribute__((swift_name("doCopy(id:number:workOrderNumber:isPinned:content:createdDate:actionRequired:mailedTo:createdBy:visibility:visibilityFormat:userId:subscriberId:providerId:attachments:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL actionRequired __attribute__((swift_name("actionRequired")));
@property (readonly) NSArray<ScmSdkSdkNoteSdkNoteAttachment *> *attachments __attribute__((swift_name("attachments")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSString *createdBy __attribute__((swift_name("createdBy")));
@property (readonly) NSString *createdDate __attribute__((swift_name("createdDate")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isPinned __attribute__((swift_name("isPinned")));
@property (readonly) NSString *mailedTo __attribute__((swift_name("mailedTo")));
@property (readonly) int32_t number __attribute__((swift_name("number")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) int32_t visibility __attribute__((swift_name("visibility")));
@property (readonly) ScmSdkSdkNoteVisibility *visibilityFormat __attribute__((swift_name("visibilityFormat")));
@property (readonly) NSString *workOrderNumber __attribute__((swift_name("workOrderNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNote.Companion")))
@interface ScmSdkSdkNoteCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkNoteCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNote.SdkNoteAttachment")))
@interface ScmSdkSdkNoteSdkNoteAttachment : ScmSdkBase
- (instancetype)initWithId:(int32_t)id description:(NSString *)description name:(NSString *)name uri:(NSString *)uri visibility:(NSString *)visibility dateTime:(NSString *)dateTime __attribute__((swift_name("init(id:description:name:uri:visibility:dateTime:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkSdkNoteSdkNoteAttachmentCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkNoteSdkNoteAttachment *)doCopyId:(int32_t)id description:(NSString *)description name:(NSString *)name uri:(NSString *)uri visibility:(NSString *)visibility dateTime:(NSString *)dateTime __attribute__((swift_name("doCopy(id:description:name:uri:visibility:dateTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@property (readonly) NSString *visibility __attribute__((swift_name("visibility")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNote.SdkNoteAttachmentCompanion")))
@interface ScmSdkSdkNoteSdkNoteAttachmentCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkNoteSdkNoteAttachmentCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNoteRecipient")))
@interface ScmSdkSdkNoteRecipient : ScmSdkBase
- (instancetype)initWithId:(int32_t)id userName:(NSString *)userName email:(NSString *)email recipientType:(NSString *)recipientType __attribute__((swift_name("init(id:userName:email:recipientType:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkNoteRecipient *)doCopyId:(int32_t)id userName:(NSString *)userName email:(NSString *)email recipientType:(NSString *)recipientType __attribute__((swift_name("doCopy(id:userName:email:recipientType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *email __attribute__((swift_name("email")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *recipientType __attribute__((swift_name("recipientType")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNoteVisibility")))
@interface ScmSdkSdkNoteVisibility : ScmSdkKotlinEnum<ScmSdkSdkNoteVisibility *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkSdkNoteVisibilityCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkSdkNoteVisibility *visibleToEveryOne __attribute__((swift_name("visibleToEveryOne")));
@property (class, readonly) ScmSdkSdkNoteVisibility *visibleToProvider __attribute__((swift_name("visibleToProvider")));
@property (class, readonly) ScmSdkSdkNoteVisibility *visibleToClient __attribute__((swift_name("visibleToClient")));
@property (class, readonly) ScmSdkSdkNoteVisibility *notVisible __attribute__((swift_name("notVisible")));
+ (ScmSdkKotlinArray<ScmSdkSdkNoteVisibility *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkNoteVisibility.Companion")))
@interface ScmSdkSdkNoteVisibilityCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkNoteVisibilityCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkSdkNoteVisibility *)fromType:(NSString * _Nullable)type __attribute__((swift_name("from(type:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderBudget")))
@interface ScmSdkSdkWorkOrderBudget : ScmSdkBase
- (instancetype)initWithBudgetId:(int32_t)budgetId currencyId:(int32_t)currencyId currencyCode:(NSString *)currencyCode startDate:(NSString *)startDate endDate:(NSString *)endDate totalAmount:(double)totalAmount incurredAmount:(double)incurredAmount forecastedAmount:(double)forecastedAmount remainingAmount:(double)remainingAmount riskType:(ScmSdkSdkWorkOrderBudgetSdkRiskType *)riskType workOrderId:(int32_t)workOrderId fiscalPeriodId:(int32_t)fiscalPeriodId fiscalPeriodName:(NSString * _Nullable)fiscalPeriodName quarter:(ScmSdkSdkWorkOrderBudgetSdkQuarter *)quarter calendarName:(NSString * _Nullable)calendarName budgetAmountId:(int32_t)budgetAmountId workOrderIncurredAmount:(ScmSdkDouble * _Nullable)workOrderIncurredAmount workOrderForecastedAmount:(ScmSdkDouble * _Nullable)workOrderForecastedAmount updatedDate:(NSString * _Nullable)updatedDate workOrderCount:(int32_t)workOrderCount __attribute__((swift_name("init(budgetId:currencyId:currencyCode:startDate:endDate:totalAmount:incurredAmount:forecastedAmount:remainingAmount:riskType:workOrderId:fiscalPeriodId:fiscalPeriodName:quarter:calendarName:budgetAmountId:workOrderIncurredAmount:workOrderForecastedAmount:updatedDate:workOrderCount:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderBudgetSdkRiskType *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderBudgetSdkQuarter *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDouble * _Nullable)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDouble * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSdkWorkOrderBudget *)doCopyBudgetId:(int32_t)budgetId currencyId:(int32_t)currencyId currencyCode:(NSString *)currencyCode startDate:(NSString *)startDate endDate:(NSString *)endDate totalAmount:(double)totalAmount incurredAmount:(double)incurredAmount forecastedAmount:(double)forecastedAmount remainingAmount:(double)remainingAmount riskType:(ScmSdkSdkWorkOrderBudgetSdkRiskType *)riskType workOrderId:(int32_t)workOrderId fiscalPeriodId:(int32_t)fiscalPeriodId fiscalPeriodName:(NSString * _Nullable)fiscalPeriodName quarter:(ScmSdkSdkWorkOrderBudgetSdkQuarter *)quarter calendarName:(NSString * _Nullable)calendarName budgetAmountId:(int32_t)budgetAmountId workOrderIncurredAmount:(ScmSdkDouble * _Nullable)workOrderIncurredAmount workOrderForecastedAmount:(ScmSdkDouble * _Nullable)workOrderForecastedAmount updatedDate:(NSString * _Nullable)updatedDate workOrderCount:(int32_t)workOrderCount __attribute__((swift_name("doCopy(budgetId:currencyId:currencyCode:startDate:endDate:totalAmount:incurredAmount:forecastedAmount:remainingAmount:riskType:workOrderId:fiscalPeriodId:fiscalPeriodName:quarter:calendarName:budgetAmountId:workOrderIncurredAmount:workOrderForecastedAmount:updatedDate:workOrderCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t budgetAmountId __attribute__((swift_name("budgetAmountId")));
@property (readonly) int32_t budgetId __attribute__((swift_name("budgetId")));
@property (readonly) NSString * _Nullable calendarName __attribute__((swift_name("calendarName")));
@property (readonly) NSString *currencyCode __attribute__((swift_name("currencyCode")));
@property (readonly) int32_t currencyId __attribute__((swift_name("currencyId")));
@property (readonly) NSString *endDate __attribute__((swift_name("endDate")));
@property (readonly) int32_t fiscalPeriodId __attribute__((swift_name("fiscalPeriodId")));
@property (readonly) NSString * _Nullable fiscalPeriodName __attribute__((swift_name("fiscalPeriodName")));
@property (readonly) double forecastedAmount __attribute__((swift_name("forecastedAmount")));
@property (readonly) double incurredAmount __attribute__((swift_name("incurredAmount")));
@property (readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *quarter __attribute__((swift_name("quarter")));
@property (readonly) double remainingAmount __attribute__((swift_name("remainingAmount")));
@property (readonly) ScmSdkSdkWorkOrderBudgetSdkRiskType *riskType __attribute__((swift_name("riskType")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) double totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) NSString * _Nullable updatedDate __attribute__((swift_name("updatedDate")));
@property (readonly) int32_t workOrderCount __attribute__((swift_name("workOrderCount")));
@property (readonly) ScmSdkDouble * _Nullable workOrderForecastedAmount __attribute__((swift_name("workOrderForecastedAmount")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@property (readonly) ScmSdkDouble * _Nullable workOrderIncurredAmount __attribute__((swift_name("workOrderIncurredAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderBudget.SdkQuarter")))
@interface ScmSdkSdkWorkOrderBudgetSdkQuarter : ScmSdkKotlinEnum<ScmSdkSdkWorkOrderBudgetSdkQuarter *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkSdkWorkOrderBudgetSdkQuarterCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *none __attribute__((swift_name("none")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *q1 __attribute__((swift_name("q1")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *q2 __attribute__((swift_name("q2")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *q3 __attribute__((swift_name("q3")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkQuarter *q4 __attribute__((swift_name("q4")));
+ (ScmSdkKotlinArray<ScmSdkSdkWorkOrderBudgetSdkQuarter *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderBudget.SdkQuarterCompanion")))
@interface ScmSdkSdkWorkOrderBudgetSdkQuarterCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkWorkOrderBudgetSdkQuarterCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkSdkWorkOrderBudgetSdkQuarter *)findQuarterValue:(NSString * _Nullable)value __attribute__((swift_name("findQuarter(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderBudget.SdkRiskType")))
@interface ScmSdkSdkWorkOrderBudgetSdkRiskType : ScmSdkKotlinEnum<ScmSdkSdkWorkOrderBudgetSdkRiskType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkSdkWorkOrderBudgetSdkRiskTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkRiskType *onTrack __attribute__((swift_name("onTrack")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkRiskType *atRisk __attribute__((swift_name("atRisk")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkRiskType *overspend __attribute__((swift_name("overspend")));
@property (class, readonly) ScmSdkSdkWorkOrderBudgetSdkRiskType *none __attribute__((swift_name("none")));
+ (ScmSdkKotlinArray<ScmSdkSdkWorkOrderBudgetSdkRiskType *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SdkWorkOrderBudget.SdkRiskTypeCompanion")))
@interface ScmSdkSdkWorkOrderBudgetSdkRiskTypeCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSdkWorkOrderBudgetSdkRiskTypeCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkSdkWorkOrderBudgetSdkRiskType *)findRiskTypeValue:(NSString * _Nullable)value __attribute__((swift_name("findRiskType(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FiscalPeriodType")))
@interface ScmSdkFiscalPeriodType : ScmSdkKotlinEnum<ScmSdkFiscalPeriodType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkFiscalPeriodType *period __attribute__((swift_name("period")));
@property (class, readonly) ScmSdkFiscalPeriodType *quarter __attribute__((swift_name("quarter")));
@property (class, readonly) ScmSdkFiscalPeriodType *year __attribute__((swift_name("year")));
+ (ScmSdkKotlinArray<ScmSdkFiscalPeriodType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t periodId __attribute__((swift_name("periodId")));
@property (readonly) NSString *periodType __attribute__((swift_name("periodType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PostNoteParams")))
@interface ScmSdkPostNoteParams : ScmSdkBase
- (instancetype)initWithWorkOrderId:(int32_t)workOrderId noteContent:(NSString *)noteContent mailTo:(NSString * _Nullable)mailTo actionRequired:(ScmSdkBoolean * _Nullable)actionRequired attachmentsIds:(NSArray<ScmSdkInt *> * _Nullable)attachmentsIds __attribute__((swift_name("init(workOrderId:noteContent:mailTo:actionRequired:attachmentsIds:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkPostNoteParams *)doCopyWorkOrderId:(int32_t)workOrderId noteContent:(NSString *)noteContent mailTo:(NSString * _Nullable)mailTo actionRequired:(ScmSdkBoolean * _Nullable)actionRequired attachmentsIds:(NSArray<ScmSdkInt *> * _Nullable)attachmentsIds __attribute__((swift_name("doCopy(workOrderId:noteContent:mailTo:actionRequired:attachmentsIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkBoolean * _Nullable actionRequired __attribute__((swift_name("actionRequired")));
@property (readonly) NSArray<ScmSdkInt *> * _Nullable attachmentsIds __attribute__((swift_name("attachmentsIds")));
@property (readonly) NSString * _Nullable mailTo __attribute__((swift_name("mailTo")));
@property (readonly) NSString *noteContent __attribute__((swift_name("noteContent")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateNoteParams")))
@interface ScmSdkUpdateNoteParams : ScmSdkBase
- (instancetype)initWithWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId mailTo:(NSString *)mailTo noteContent:(NSString *)noteContent originalNoteContent:(NSString *)originalNoteContent __attribute__((swift_name("init(workOrderId:noteId:mailTo:noteContent:originalNoteContent:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUpdateNoteParams *)doCopyWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId mailTo:(NSString *)mailTo noteContent:(NSString *)noteContent originalNoteContent:(NSString *)originalNoteContent __attribute__((swift_name("doCopy(workOrderId:noteId:mailTo:noteContent:originalNoteContent:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *mailTo __attribute__((swift_name("mailTo")));
@property (readonly) NSString *noteContent __attribute__((swift_name("noteContent")));
@property (readonly) int32_t noteId __attribute__((swift_name("noteId")));
@property (readonly) NSString *originalNoteContent __attribute__((swift_name("originalNoteContent")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((swift_name("WeatherTypeIdsParams")))
@protocol ScmSdkWeatherTypeIdsParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeatherTypeIdsParamsAll")))
@interface ScmSdkWeatherTypeIdsParamsAll : ScmSdkBase <ScmSdkWeatherTypeIdsParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWeatherTypeIdsParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeatherTypeIdsParamsWeatherTypeIds")))
@interface ScmSdkWeatherTypeIdsParamsWeatherTypeIds : ScmSdkBase <ScmSdkWeatherTypeIdsParams>
- (instancetype)initWithWeatherTypeIds:(NSArray<ScmSdkInt *> *)weatherTypeIds __attribute__((swift_name("init(weatherTypeIds:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkInt *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWeatherTypeIdsParamsWeatherTypeIds *)doCopyWeatherTypeIds:(NSArray<ScmSdkInt *> *)weatherTypeIds __attribute__((swift_name("doCopy(weatherTypeIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkInt *> *weatherTypeIds __attribute__((swift_name("weatherTypeIds")));
@end

__attribute__((swift_name("WeatherTypesParams")))
@protocol ScmSdkWeatherTypesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeatherTypesParamsAll")))
@interface ScmSdkWeatherTypesParamsAll : ScmSdkBase <ScmSdkWeatherTypesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWeatherTypesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeatherTypesParamsWeatherTypes")))
@interface ScmSdkWeatherTypesParamsWeatherTypes : ScmSdkBase <ScmSdkWeatherTypesParams>
- (instancetype)initWithWeatherTypes:(NSArray<NSString *> *)weatherTypes __attribute__((swift_name("init(weatherTypes:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWeatherTypesParamsWeatherTypes *)doCopyWeatherTypes:(NSArray<NSString *> *)weatherTypes __attribute__((swift_name("doCopy(weatherTypes:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *weatherTypes __attribute__((swift_name("weatherTypes")));
@end

__attribute__((swift_name("WorkOrderCategoriesParams")))
@protocol ScmSdkWorkOrderCategoriesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderCategoriesParamsAll")))
@interface ScmSdkWorkOrderCategoriesParamsAll : ScmSdkBase <ScmSdkWorkOrderCategoriesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderCategoriesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderCategoriesParamsCategories")))
@interface ScmSdkWorkOrderCategoriesParamsCategories : ScmSdkBase <ScmSdkWorkOrderCategoriesParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("init(titles:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderCategoriesParamsCategories *)doCopyTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("doCopy(titles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((swift_name("WorkOrderDatesParams")))
@protocol ScmSdkWorkOrderDatesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderDatesParamsAll")))
@interface ScmSdkWorkOrderDatesParamsAll : ScmSdkBase <ScmSdkWorkOrderDatesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderDatesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderDatesParamsDate")))
@interface ScmSdkWorkOrderDatesParamsDate : ScmSdkBase <ScmSdkWorkOrderDatesParams>
- (instancetype)initWithDateFrom:(NSString *)dateFrom dateTo:(NSString *)dateTo isAllowNull:(ScmSdkBoolean * _Nullable)isAllowNull __attribute__((swift_name("init(dateFrom:dateTo:isAllowNull:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderDatesParamsDate *)doCopyDateFrom:(NSString *)dateFrom dateTo:(NSString *)dateTo isAllowNull:(ScmSdkBoolean * _Nullable)isAllowNull __attribute__((swift_name("doCopy(dateFrom:dateTo:isAllowNull:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateFrom __attribute__((swift_name("dateFrom")));
@property (readonly) NSString *dateTo __attribute__((swift_name("dateTo")));
@property (readonly) ScmSdkBoolean * _Nullable isAllowNull __attribute__((swift_name("isAllowNull")));
@end

__attribute__((swift_name("WorkOrderIdsParams")))
@protocol ScmSdkWorkOrderIdsParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderIdsParamsAll")))
@interface ScmSdkWorkOrderIdsParamsAll : ScmSdkBase <ScmSdkWorkOrderIdsParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderIdsParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderIdsParamsIds")))
@interface ScmSdkWorkOrderIdsParamsIds : ScmSdkBase <ScmSdkWorkOrderIdsParams>
- (instancetype)initWithIds:(NSArray<ScmSdkInt *> *)ids __attribute__((swift_name("init(ids:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkInt *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderIdsParamsIds *)doCopyIds:(NSArray<ScmSdkInt *> *)ids __attribute__((swift_name("doCopy(ids:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkInt *> *ids __attribute__((swift_name("ids")));
@end

__attribute__((swift_name("WorkOrderInvoicedStatusParams")))
@protocol ScmSdkWorkOrderInvoicedStatusParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderInvoicedStatusParamsAll")))
@interface ScmSdkWorkOrderInvoicedStatusParamsAll : ScmSdkBase <ScmSdkWorkOrderInvoicedStatusParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderInvoicedStatusParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderInvoicedStatusParamsInvoiced")))
@interface ScmSdkWorkOrderInvoicedStatusParamsInvoiced : ScmSdkBase <ScmSdkWorkOrderInvoicedStatusParams>
- (instancetype)initWithIsInvoiced:(BOOL)isInvoiced __attribute__((swift_name("init(isInvoiced:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderInvoicedStatusParamsInvoiced *)doCopyIsInvoiced:(BOOL)isInvoiced __attribute__((swift_name("doCopy(isInvoiced:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isInvoiced __attribute__((swift_name("isInvoiced")));
@end

__attribute__((swift_name("WorkOrderLocationsParams")))
@protocol ScmSdkWorkOrderLocationsParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderLocationsParamsAll")))
@interface ScmSdkWorkOrderLocationsParamsAll : ScmSdkBase <ScmSdkWorkOrderLocationsParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderLocationsParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderLocationsParamsLocations")))
@interface ScmSdkWorkOrderLocationsParamsLocations : ScmSdkBase <ScmSdkWorkOrderLocationsParams>
- (instancetype)initWithLocationIds:(NSArray<ScmSdkInt *> *)locationIds storeIds:(NSArray<NSString *> *)storeIds __attribute__((swift_name("init(locationIds:storeIds:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkInt *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderLocationsParamsLocations *)doCopyLocationIds:(NSArray<ScmSdkInt *> *)locationIds storeIds:(NSArray<NSString *> *)storeIds __attribute__((swift_name("doCopy(locationIds:storeIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkInt *> *locationIds __attribute__((swift_name("locationIds")));
@property (readonly) NSArray<NSString *> *storeIds __attribute__((swift_name("storeIds")));
@end

__attribute__((swift_name("WorkOrderNotToExceedAmount")))
@protocol ScmSdkWorkOrderNotToExceedAmount
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderNotToExceedAmountData")))
@interface ScmSdkWorkOrderNotToExceedAmountData : ScmSdkBase <ScmSdkWorkOrderNotToExceedAmount>
- (instancetype)initWithValueFrom:(int32_t)valueFrom valueTo:(int32_t)valueTo __attribute__((swift_name("init(valueFrom:valueTo:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderNotToExceedAmountData *)doCopyValueFrom:(int32_t)valueFrom valueTo:(int32_t)valueTo __attribute__((swift_name("doCopy(valueFrom:valueTo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t valueFrom __attribute__((swift_name("valueFrom")));
@property (readonly) int32_t valueTo __attribute__((swift_name("valueTo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderNotToExceedAmountNone")))
@interface ScmSdkWorkOrderNotToExceedAmountNone : ScmSdkBase <ScmSdkWorkOrderNotToExceedAmount>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)none __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderNotToExceedAmountNone *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("WorkOrderNumbersParams")))
@protocol ScmSdkWorkOrderNumbersParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderNumbersParamsAll")))
@interface ScmSdkWorkOrderNumbersParamsAll : ScmSdkBase <ScmSdkWorkOrderNumbersParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderNumbersParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderNumbersParamsWorkOrderNumbers")))
@interface ScmSdkWorkOrderNumbersParamsWorkOrderNumbers : ScmSdkBase <ScmSdkWorkOrderNumbersParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("init(titles:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderNumbersParamsWorkOrderNumbers *)doCopyTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("doCopy(titles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((swift_name("WorkOrderPrioritiesParams")))
@protocol ScmSdkWorkOrderPrioritiesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderPrioritiesParamsAll")))
@interface ScmSdkWorkOrderPrioritiesParamsAll : ScmSdkBase <ScmSdkWorkOrderPrioritiesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderPrioritiesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderPrioritiesParamsPriorities")))
@interface ScmSdkWorkOrderPrioritiesParamsPriorities : ScmSdkBase <ScmSdkWorkOrderPrioritiesParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("init(titles:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderPrioritiesParamsPriorities *)doCopyTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("doCopy(titles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((swift_name("WorkOrderProvidersParams")))
@protocol ScmSdkWorkOrderProvidersParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderProvidersParamsAll")))
@interface ScmSdkWorkOrderProvidersParamsAll : ScmSdkBase <ScmSdkWorkOrderProvidersParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderProvidersParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderProvidersParamsProviders")))
@interface ScmSdkWorkOrderProvidersParamsProviders : ScmSdkBase <ScmSdkWorkOrderProvidersParams>
- (instancetype)initWithIds:(NSArray<ScmSdkInt *> *)ids __attribute__((swift_name("init(ids:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkInt *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderProvidersParamsProviders *)doCopyIds:(NSArray<ScmSdkInt *> *)ids __attribute__((swift_name("doCopy(ids:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkInt *> *ids __attribute__((swift_name("ids")));
@end

__attribute__((swift_name("WorkOrderPurchaseNumbersParams")))
@protocol ScmSdkWorkOrderPurchaseNumbersParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderPurchaseNumbersParamsAll")))
@interface ScmSdkWorkOrderPurchaseNumbersParamsAll : ScmSdkBase <ScmSdkWorkOrderPurchaseNumbersParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderPurchaseNumbersParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderPurchaseNumbersParamsPurchaseNumbers")))
@interface ScmSdkWorkOrderPurchaseNumbersParamsPurchaseNumbers : ScmSdkBase <ScmSdkWorkOrderPurchaseNumbersParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("init(titles:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderPurchaseNumbersParamsPurchaseNumbers *)doCopyTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("doCopy(titles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((swift_name("WorkOrderStatusesParams")))
@protocol ScmSdkWorkOrderStatusesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderStatusesParamsAll")))
@interface ScmSdkWorkOrderStatusesParamsAll : ScmSdkBase <ScmSdkWorkOrderStatusesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderStatusesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderStatusesParamsStatuses")))
@interface ScmSdkWorkOrderStatusesParamsStatuses : ScmSdkBase <ScmSdkWorkOrderStatusesParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("init(titles:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderStatusesParamsStatuses *)doCopyTitles:(NSArray<NSString *> *)titles __attribute__((swift_name("doCopy(titles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((swift_name("WorkOrderTradesParams")))
@protocol ScmSdkWorkOrderTradesParams
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTradesParamsAll")))
@interface ScmSdkWorkOrderTradesParamsAll : ScmSdkBase <ScmSdkWorkOrderTradesParams>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrderTradesParamsAll *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderTradesParamsTrades")))
@interface ScmSdkWorkOrderTradesParamsTrades : ScmSdkBase <ScmSdkWorkOrderTradesParams>
- (instancetype)initWithTitles:(NSArray<NSString *> *)titles isUseFullTextSearch:(BOOL)isUseFullTextSearch __attribute__((swift_name("init(titles:isUseFullTextSearch:)"))) __attribute__((objc_designated_initializer));
- (NSArray<NSString *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderTradesParamsTrades *)doCopyTitles:(NSArray<NSString *> *)titles isUseFullTextSearch:(BOOL)isUseFullTextSearch __attribute__((swift_name("doCopy(titles:isUseFullTextSearch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isUseFullTextSearch __attribute__((swift_name("isUseFullTextSearch")));
@property (readonly) NSArray<NSString *> *titles __attribute__((swift_name("titles")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersFilters")))
@interface ScmSdkWorkOrdersFilters : ScmSdkBase
- (instancetype)initWithPagination:(id<ScmSdkWorkOrdersPagination>)pagination categories:(id<ScmSdkWorkOrderCategoriesParams>)categories callDate:(id<ScmSdkWorkOrderDatesParams>)callDate scheduleDate:(id<ScmSdkWorkOrderDatesParams>)scheduleDate workOrderIds:(id<ScmSdkWorkOrderIdsParams>)workOrderIds locations:(id<ScmSdkWorkOrderLocationsParams>)locations notToExceedAmount:(id<ScmSdkWorkOrderNotToExceedAmount>)notToExceedAmount workOrderNumbers:(id<ScmSdkWorkOrderNumbersParams>)workOrderNumbers priorities:(id<ScmSdkWorkOrderPrioritiesParams>)priorities providers:(id<ScmSdkWorkOrderProvidersParams>)providers purchase:(id<ScmSdkWorkOrderPurchaseNumbersParams>)purchase statuses:(id<ScmSdkWorkOrderStatusesParams>)statuses extendedStatuses:(id<ScmSdkWorkOrderStatusesParams>)extendedStatuses trades:(id<ScmSdkWorkOrderTradesParams>)trades weatherTypeIds:(id<ScmSdkWeatherTypeIdsParams>)weatherTypeIds weatherTypes:(id<ScmSdkWeatherTypesParams>)weatherTypes isInvoiced:(id<ScmSdkWorkOrderInvoicedStatusParams>)isInvoiced __attribute__((swift_name("init(pagination:categories:callDate:scheduleDate:workOrderIds:locations:notToExceedAmount:workOrderNumbers:priorities:providers:purchase:statuses:extendedStatuses:trades:weatherTypeIds:weatherTypes:isInvoiced:)"))) __attribute__((objc_designated_initializer));
- (id<ScmSdkWorkOrdersPagination>)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderProvidersParams>)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderPurchaseNumbersParams>)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderStatusesParams>)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderStatusesParams>)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderTradesParams>)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWeatherTypeIdsParams>)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWeatherTypesParams>)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderInvoicedStatusParams>)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderCategoriesParams>)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderDatesParams>)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderDatesParams>)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderIdsParams>)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderLocationsParams>)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderNotToExceedAmount>)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderNumbersParams>)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkWorkOrderPrioritiesParams>)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrdersFilters *)doCopyPagination:(id<ScmSdkWorkOrdersPagination>)pagination categories:(id<ScmSdkWorkOrderCategoriesParams>)categories callDate:(id<ScmSdkWorkOrderDatesParams>)callDate scheduleDate:(id<ScmSdkWorkOrderDatesParams>)scheduleDate workOrderIds:(id<ScmSdkWorkOrderIdsParams>)workOrderIds locations:(id<ScmSdkWorkOrderLocationsParams>)locations notToExceedAmount:(id<ScmSdkWorkOrderNotToExceedAmount>)notToExceedAmount workOrderNumbers:(id<ScmSdkWorkOrderNumbersParams>)workOrderNumbers priorities:(id<ScmSdkWorkOrderPrioritiesParams>)priorities providers:(id<ScmSdkWorkOrderProvidersParams>)providers purchase:(id<ScmSdkWorkOrderPurchaseNumbersParams>)purchase statuses:(id<ScmSdkWorkOrderStatusesParams>)statuses extendedStatuses:(id<ScmSdkWorkOrderStatusesParams>)extendedStatuses trades:(id<ScmSdkWorkOrderTradesParams>)trades weatherTypeIds:(id<ScmSdkWeatherTypeIdsParams>)weatherTypeIds weatherTypes:(id<ScmSdkWeatherTypesParams>)weatherTypes isInvoiced:(id<ScmSdkWorkOrderInvoicedStatusParams>)isInvoiced __attribute__((swift_name("doCopy(pagination:categories:callDate:scheduleDate:workOrderIds:locations:notToExceedAmount:workOrderNumbers:priorities:providers:purchase:statuses:extendedStatuses:trades:weatherTypeIds:weatherTypes:isInvoiced:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkWorkOrderDatesParams> callDate __attribute__((swift_name("callDate")));
@property (readonly) id<ScmSdkWorkOrderCategoriesParams> categories __attribute__((swift_name("categories")));
@property (readonly) id<ScmSdkWorkOrderStatusesParams> extendedStatuses __attribute__((swift_name("extendedStatuses")));
@property (readonly) id<ScmSdkWorkOrderInvoicedStatusParams> isInvoiced __attribute__((swift_name("isInvoiced")));
@property (readonly) id<ScmSdkWorkOrderLocationsParams> locations __attribute__((swift_name("locations")));
@property (readonly) id<ScmSdkWorkOrderNotToExceedAmount> notToExceedAmount __attribute__((swift_name("notToExceedAmount")));
@property (readonly) id<ScmSdkWorkOrdersPagination> pagination __attribute__((swift_name("pagination")));
@property (readonly) id<ScmSdkWorkOrderPrioritiesParams> priorities __attribute__((swift_name("priorities")));
@property (readonly) id<ScmSdkWorkOrderProvidersParams> providers __attribute__((swift_name("providers")));
@property (readonly) id<ScmSdkWorkOrderPurchaseNumbersParams> purchase __attribute__((swift_name("purchase")));
@property (readonly) id<ScmSdkWorkOrderDatesParams> scheduleDate __attribute__((swift_name("scheduleDate")));
@property (readonly) id<ScmSdkWorkOrderStatusesParams> statuses __attribute__((swift_name("statuses")));
@property (readonly) id<ScmSdkWorkOrderTradesParams> trades __attribute__((swift_name("trades")));
@property (readonly) id<ScmSdkWeatherTypeIdsParams> weatherTypeIds __attribute__((swift_name("weatherTypeIds")));
@property (readonly) id<ScmSdkWeatherTypesParams> weatherTypes __attribute__((swift_name("weatherTypes")));
@property (readonly) id<ScmSdkWorkOrderIdsParams> workOrderIds __attribute__((swift_name("workOrderIds")));
@property (readonly) id<ScmSdkWorkOrderNumbersParams> workOrderNumbers __attribute__((swift_name("workOrderNumbers")));
@end

__attribute__((swift_name("WorkOrdersPagination")))
@protocol ScmSdkWorkOrdersPagination
@required
@end


/**
 * startPage = 0, pageSize = 100
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersPaginationDefaultForLargeData")))
@interface ScmSdkWorkOrdersPaginationDefaultForLargeData : ScmSdkBase <ScmSdkWorkOrdersPagination>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * startPage = 0, pageSize = 100
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)defaultForLargeData __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrdersPaginationDefaultForLargeData *shared __attribute__((swift_name("shared")));
@end


/**
 * startPage = 0, pageSize = 20
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersPaginationDefaultFromServer")))
@interface ScmSdkWorkOrdersPaginationDefaultFromServer : ScmSdkBase <ScmSdkWorkOrdersPagination>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * startPage = 0, pageSize = 20
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)defaultFromServer __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkWorkOrdersPaginationDefaultFromServer *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrdersPaginationPagination")))
@interface ScmSdkWorkOrdersPaginationPagination : ScmSdkBase <ScmSdkWorkOrdersPagination>
- (instancetype)initWithStartPage:(int32_t)startPage pageSize:(int32_t)pageSize __attribute__((swift_name("init(startPage:pageSize:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrdersPaginationPagination *)doCopyStartPage:(int32_t)startPage pageSize:(int32_t)pageSize __attribute__((swift_name("doCopy(startPage:pageSize:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t pageSize __attribute__((swift_name("pageSize")));
@property (readonly) int32_t startPage __attribute__((swift_name("startPage")));
@end


/**
 * API for work with filters for invoices.
 *
 * API provide filter invoices by as many parameters as required for user business needs.
 * User may also save selected filters for later use and clear all filters once user are finished.
 */
__attribute__((swift_name("ScmInvoiceFilters")))
@protocol ScmSdkScmInvoiceFilters
@required

/**
 * Method to add new filter.
 * New filter is set as default if there is no other default filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addNewFilterWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("addNewFilter(completionHandler:)")));

/**
 * Method to do filter as default.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)applyFilterFilterId:(int32_t)filterId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("applyFilter(filterId:completionHandler:)")));

/**
 * Get filter by id.
 *
 * @param filterId - filter id.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFilterFilterId:(int32_t)filterId completionHandler:(void (^)(ScmSdkInvoicesFilter * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getFilter(filterId:completionHandler:)")));

/**
 * Refresh data for invoices data.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshInvoicesFiltersDataWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("refreshInvoicesFiltersData(completionHandler:)")));

/**
 * Method to remove filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeFilterFilterId:(int32_t)filterId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeFilter(filterId:completionHandler:)")));

/**
 * Method to reset filter settings to default.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetFilterFilterId:(int32_t)filterId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("resetFilter(filterId:completionHandler:)")));

/**
 * Subscribe on invoice's filters.
 * Emits a new [List] every time the filters are changed.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 */
- (id<ScmSdkKotlinx_coroutines_coreFlow>)subscribe __attribute__((swift_name("subscribe()")));

/**
 *
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateAssignedToFilterId:(int32_t)filterId assignedTo:(NSArray<ScmSdkSelectedItem *> *)assignedTo completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateAssignedTo(filterId:assignedTo:completionHandler:)")));

/**
 * @param categories - filter categories.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateCategoriesFilterId:(int32_t)filterId categories:(id<ScmSdkInvoiceFilterSelectedItemsState>)categories completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateCategories(filterId:categories:completionHandler:)")));

/**
 *
 * @param districts - filter districts.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateDistrictsFilterId:(int32_t)filterId districts:(id<ScmSdkInvoiceFilterSelectedItemsState>)districts completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateDistricts(filterId:districts:completionHandler:)")));

/**
 *
 * @param maxAmount - max amount to invoices.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateMaxAmountFilterId:(int32_t)filterId maxAmount:(NSString *)maxAmount completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateMaxAmount(filterId:maxAmount:completionHandler:)")));

/**
 *
 * @param minAmount - min amount to invoices.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateMinAmountFilterId:(int32_t)filterId minAmount:(NSString *)minAmount completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateMinAmount(filterId:minAmount:completionHandler:)")));

/**
 *
 * @param monthsAgo - months ago.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateMonthsAgoFilterId:(int32_t)filterId monthsAgo:(int32_t)monthsAgo completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateMonthsAgo(filterId:monthsAgo:completionHandler:)")));

/**
 *
 * @param name - name of filter.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateNameFilterId:(int32_t)filterId name:(NSString *)name completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateName(filterId:name:completionHandler:)")));

/**
 *
 * @param providers - filter providers.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException].
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateProvidersFilterId:(int32_t)filterId providers:(id<ScmSdkInvoiceFilterSelectedItemsState>)providers completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateProviders(filterId:providers:completionHandler:)")));

/**
 *
 * @param sortByName - filter sortBy name.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateSortByFilterId:(int32_t)filterId sortByName:(NSString *)sortByName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateSortBy(filterId:sortByName:completionHandler:)")));

/**
 *
 * @param statuses - filter statuses.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateStatusesFilterId:(int32_t)filterId statuses:(NSArray<ScmSdkSelectedItem *> *)statuses completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateStatuses(filterId:statuses:completionHandler:)")));

/**
 *
 * @param trades - filter trades.
 * @param filterId - ID of current filter.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateTradesFilterId:(int32_t)filterId trades:(id<ScmSdkInvoiceFilterSelectedItemsState>)trades completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateTrades(filterId:trades:completionHandler:)")));
@end


/**
 * Provide API to change invoice Status and GlCode.
 * GL codes — also known as Approval Codes — are special codes that are used for accounting purposes.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560169028/Taking+Action+on+Invoices">Taking Action on Invoices</a>
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/2205549202/Updating+GL+Codes">Updating GL Codes</a>
 */
__attribute__((swift_name("ScmInvoiceUpdate")))
@protocol ScmSdkScmInvoiceUpdate
@required

/**
 * The invoice is accepted and can move forward for payment.
 *
 * @param invoiceId - invoice id.
 * @param glCode - GlCode.
 * @param additionalGlCodes -  list of Additional GlCodes for selected category.
 * @param comment - comment.
 * @param categoryName - category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)approveInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("approveInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:completionHandler:)")));

/**
 * Bulk approve invoices.
 *
 * @param invoiceIds - invoice id list.
 * @param glCode - GlCode.
 * @param comment - comment.
 * @param categoryName - category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bulkApproveInvoicesInvoiceIds:(NSArray<ScmSdkInt *> *)invoiceIds glCode:(NSString *)glCode comment:(NSString *)comment categoryName:(NSString *)categoryName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("bulkApproveInvoices(invoiceIds:glCode:comment:categoryName:completionHandler:)")));

/**
 * Returns all reasons why an invoice might be rejectedю
 *
 * @param subscriberId - subscriber id.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInvoiceRejectionReasonListSubscriberId:(int32_t)subscriberId completionHandler:(void (^)(NSArray<ScmSdkInvoiceRejectionReason *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInvoiceRejectionReasonList(subscriberId:completionHandler:)")));

/**
 * The invoice requires further review before being approved or rejected.
 *
 * @param invoiceId - invoice id.
 * @param glCode - GlCode.
 * @param additionalGlCodes -  list of Additional GlCodes for selected category.
 * @param comment - comment.
 * @param categoryName - category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)onHoldInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("onHoldInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:completionHandler:)")));

/**
 * The invoice costs and/or details are not agreed upon.
 * This action may require the service provider to resubmit the invoice.
 *
 * @param invoiceId - invoice id.
 * @param isNotifyProvider - whether the provider should be notified of the status change.
 * @param additionalEmails - emails to be notified.
 * @param glCode - GlCode.
 * @param additionalGlCodes -  list of Additional GlCodes for selected category.
 * @param comment - comment.
 * @param categoryName - category name.
 * @param rejectionReasonId - rejection reason id.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)rejectInvoiceInvoiceId:(int32_t)invoiceId isNotifyProvider:(BOOL)isNotifyProvider additionalEmails:(NSArray<NSString *> *)additionalEmails glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName rejectionReasonId:(ScmSdkInt * _Nullable)rejectionReasonId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("rejectInvoice(invoiceId:isNotifyProvider:additionalEmails:glCode:additionalGlCodes:comment:categoryName:rejectionReasonId:completionHandler:)")));

/**
 * Returns a step back to the previous person.
 *
 * @param invoiceId - invoice id.
 * @param glCode - GlCode.
 * @param additionalGlCodes -  list of Additional GlCodes for selected category.
 * @param comment - comment.
 * @param categoryName - category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)returnInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("returnInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:completionHandler:)")));

/**
 * After you add or change an invoice GL code,
 * the GL code for the work order linked to the invoice will automatically update.
 *
 * @param invoiceId - invoice id.
 * @param categoryName - invoice category name.
 * @param glCode - Gl code.
 * @param additionalGlCodes -  list of Additional GlCodes for selected category.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateGlCodeInvoiceId:(int32_t)invoiceId categoryName:(NSString *)categoryName glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateGlCode(invoiceId:categoryName:glCode:additionalGlCodes:completionHandler:)")));
@end


/**
 * Provide API to get invoices.
 *
 * Once a work order is completed, an invoice may be issued through Service Automation.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 * An invoice cannot be created without a work order, and each work order can only have one invoice.
 *
 * If the user is not logged in throws an exception:
 * @see[com.servicechannel.scmsdk.api.exceptions.UserFeatureException.AuthorizedUserOnlyException]
 */
__attribute__((swift_name("ScmInvoices")))
@protocol ScmSdkScmInvoices
@required

/**
 * When the invoice information in the listview is not enough to get a clear picture,
 * API provide data to get the invoice details information.
 *
 * @param invoiceId - invoice id.
 * @see [com.servicechannel.scmsdk.api.features.invoice.model.resposne.Invoice.id]
 *
 * @return [InvoiceDetails] - invoice details data.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInvoiceDetailsInvoiceId:(int32_t)invoiceId completionHandler:(void (^)(ScmSdkInvoiceDetails * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInvoiceDetails(invoiceId:completionHandler:)")));

/**
 * Method for loading invoices.
 * The default filter selected by the user is used to load invoices.
 * If the user changes the filter, it is necessary to reload invoices from the beginning,
 * by passing [command] = [InvoiceLoadCommand.INIT].
 *
 * On the Invoices List, user can get all invoices that user service providers submit to company.
 *
 * Invoices loading use pagination.
 * To load first page pass [command] = [InvoiceLoadCommand.INIT].
 * To load next pages pass [command] = [InvoiceLoadCommand.NEXT].
 * Every time you load next page, new invoices is added to the previous ones and returned in [InvoicesState].
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @param command - behavior to load invoices.
 * @return [InvoicesState] - invoices state.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInvoicesCommand:(ScmSdkInvoiceLoadCommand *)command completionHandler:(void (^)(ScmSdkInvoicesState * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInvoices(command:completionHandler:)")));
@end


/**
 * Provide API to get additional information about invoice.
 */
__attribute__((swift_name("ScmInvoicesInfo")))
@protocol ScmSdkScmInvoicesInfo
@required

/**
 * Get invoice attachments
 *
 * @param invoiceId - invoice id.
 *
 * @return List of [InvoiceAttachment] - attachments.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAttachmentsInvoiceId:(int32_t)invoiceId completionHandler:(void (^)(NSArray<ScmSdkInvoiceAttachment *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAttachments(invoiceId:completionHandler:)")));

/**
 * Get Invoices categories.
 * This method can be used for single and bulk update actions.
 *
 * @param invoiceIds - invoice ids.
 *
 * @return [Map] - where:
 * [Map.keys] - Category id,
 * [Map.values] - Category name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCategoriesInvoiceIds:(NSArray<ScmSdkInt *> *)invoiceIds completionHandler:(void (^)(NSDictionary<ScmSdkInt *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCategories(invoiceIds:completionHandler:)")));

/**
 * Get invoice emails
 *
 * @param invoiceId - invoice id.
 * @see [com.servicechannel.scmsdk.api.features.invoice.model.resposne.Invoice.id]
 *
 * @return List of strings - emails.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEmailsInvoiceId:(int32_t)invoiceId completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEmails(invoiceId:completionHandler:)")));

/**
 * Get predetermined Gl Codes by Invoice Trade.
 * If this method returns a list, a drop-down list of GlCodes must be shown for the user,
 * otherwise a simple input field must be displayed.
 * This method must be used only for single update actions, not for bulk actions.
 *
 * @param tradeId - invoice trade id.
 *
 * @return [Map] - where:
 * [Map.keys] - GlCode id,
 * [Map.values] - GlCode name.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557645834/Managing+GL+Codes">Managing GL Codes</a>
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPredeterminedGlCodesTradeId:(int32_t)tradeId completionHandler:(void (^)(NSDictionary<NSString *, NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPredeterminedGlCodes(tradeId:completionHandler:)")));

/**
 * Get [InvoiceUpdateInfo] - common additional info, used when updating Invoice status or Gl code.
 * This info must be re-requested every time the user changes the category.
 * This method should only be used for single update actions, not for bulk actions.
 *
 * @param invoiceId - invoice id.
 * @param categoryName - invoice category name.
 *
 * @return [InvoiceUpdateInfo]
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException]
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUpdateInfoInvoiceId:(int32_t)invoiceId categoryName:(NSString *)categoryName completionHandler:(void (^)(ScmSdkInvoiceUpdateInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUpdateInfo(invoiceId:categoryName:completionHandler:)")));
@end


/**
 * Provide API to search invoices.
 * Search for specific invoices by the criteria.
 *
 * @see [link](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560136259/Filtering+Sorting+and+Searching+for+Invoices)
 */
__attribute__((swift_name("ScmInvoicesSearch")))
@protocol ScmSdkScmInvoicesSearch
@required

/**
 * Search for invoices by [number] string.
 *
 * @param number - invoice number.
 * @return List<[Invoice]> - invoices.
 *
 * @throws [UserFeatureException.AuthorizedUserOnlyException],
 * [InvoicesException.SearchException.EmptySearchNumberException];
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)searchByNumberNumber:(NSString *)number completionHandler:(void (^)(NSArray<ScmSdkInvoice *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("searchByNumber(number:completionHandler:)")));
@end


/**
 * Commands for behavior to load invoices.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLoadCommand")))
@interface ScmSdkInvoiceLoadCommand : ScmSdkKotlinEnum<ScmSdkInvoiceLoadCommand *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Commands for behavior to load invoices.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceLoadCommand *theInit __attribute__((swift_name("theInit")));
@property (class, readonly) ScmSdkInvoiceLoadCommand *next __attribute__((swift_name("next")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceLoadCommand *> *)values __attribute__((swift_name("values()")));
@end


/**
 * Invoice information.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Invoice")))
@interface ScmSdkInvoice : ScmSdkBase
- (instancetype)initWithId:(int32_t)id number:(NSString *)number glCode:(NSString *)glCode status:(ScmSdkInvoiceStatus *)status createdDate:(NSString *)createdDate trade:(ScmSdkInvoiceTrade * _Nullable)trade category:(ScmSdkInvoiceCategory * _Nullable)category providerName:(NSString * _Nullable)providerName workOrder:(ScmSdkInvoiceWorkOrder *)workOrder totalAmount:(float)totalAmount currency:(ScmSdkInvoiceCurrency * _Nullable)currency location:(NSString *)location availableStatusActions:(NSArray<ScmSdkInvoiceAvailableStatusAction *> *)availableStatusActions isAnyMismatch:(BOOL)isAnyMismatch checkInOutInfo:(ScmSdkInvoiceCheckInOutInfo * _Nullable)checkInOutInfo clientRatesInfo:(ScmSdkInvoiceClientRatesInfo * _Nullable)clientRatesInfo taxValidationInfo:(ScmSdkInvoiceTaxValidationInfo * _Nullable)taxValidationInfo lineItems:(ScmSdkInvoiceLineItems *)lineItems __attribute__((swift_name("init(id:number:glCode:status:createdDate:trade:category:providerName:workOrder:totalAmount:currency:location:availableStatusActions:isAnyMismatch:checkInOutInfo:clientRatesInfo:taxValidationInfo:lineItems:)"))) __attribute__((objc_designated_initializer));

/**
 * ID of invoice.
 * Assigned by the system, a unique identifier in the system.
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Total amount.
 */
- (float)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Currency.
 */
- (ScmSdkInvoiceCurrency * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Location.
 * Concatenated from location Store Id and Short Name.
 */
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of available status actions.
 */
- (NSArray<ScmSdkInvoiceAvailableStatusAction *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * True if at least one of Line Item isMismatched = true.
 */
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Check in/out info.
 */
- (ScmSdkInvoiceCheckInOutInfo * _Nullable)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Client rates info.
 */
- (ScmSdkInvoiceClientRatesInfo * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Tax validation info
 */
- (ScmSdkInvoiceTaxValidationInfo * _Nullable)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Line Item Invoice by itemizing labor, materials, others and freights.
 */
- (ScmSdkInvoiceLineItems *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Number of invoice.
 * The user creates this value independently.
 * It must be unique for each invoice.
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * By default, an invoice has the same GL code as the work order associated with that invoice.
 * When a work order has no GL code, the invoice has no code either.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice Status.
 */
- (ScmSdkInvoiceStatus *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *
 * The date when the invoice was created.
 * The invoice date must be greater than the completion date of the work on the Work Order.
 */
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Trade.
 */
- (ScmSdkInvoiceTrade * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice Category.
 */
- (ScmSdkInvoiceCategory * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * A service provider name.
 */
- (NSString * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Work Order.
 */
- (ScmSdkInvoiceWorkOrder *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice information.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 */
- (ScmSdkInvoice *)doCopyId:(int32_t)id number:(NSString *)number glCode:(NSString *)glCode status:(ScmSdkInvoiceStatus *)status createdDate:(NSString *)createdDate trade:(ScmSdkInvoiceTrade * _Nullable)trade category:(ScmSdkInvoiceCategory * _Nullable)category providerName:(NSString * _Nullable)providerName workOrder:(ScmSdkInvoiceWorkOrder *)workOrder totalAmount:(float)totalAmount currency:(ScmSdkInvoiceCurrency * _Nullable)currency location:(NSString *)location availableStatusActions:(NSArray<ScmSdkInvoiceAvailableStatusAction *> *)availableStatusActions isAnyMismatch:(BOOL)isAnyMismatch checkInOutInfo:(ScmSdkInvoiceCheckInOutInfo * _Nullable)checkInOutInfo clientRatesInfo:(ScmSdkInvoiceClientRatesInfo * _Nullable)clientRatesInfo taxValidationInfo:(ScmSdkInvoiceTaxValidationInfo * _Nullable)taxValidationInfo lineItems:(ScmSdkInvoiceLineItems *)lineItems __attribute__((swift_name("doCopy(id:number:glCode:status:createdDate:trade:category:providerName:workOrder:totalAmount:currency:location:availableStatusActions:isAnyMismatch:checkInOutInfo:clientRatesInfo:taxValidationInfo:lineItems:)")));

/**
 * Invoice information.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Invoice information.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Invoice information.
 * An invoice is a financial document that specifies labor, material,
 * and other charges as well as the tax and invoice total amounts.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * List of available status actions.
 */
@property (readonly) NSArray<ScmSdkInvoiceAvailableStatusAction *> *availableStatusActions __attribute__((swift_name("availableStatusActions")));

/**
 *  Invoice Category.
 */
@property (readonly) ScmSdkInvoiceCategory * _Nullable category __attribute__((swift_name("category")));

/**
 *  Check in/out info.
 */
@property (readonly) ScmSdkInvoiceCheckInOutInfo * _Nullable checkInOutInfo __attribute__((swift_name("checkInOutInfo")));

/**
 *  Client rates info.
 */
@property (readonly) ScmSdkInvoiceClientRatesInfo * _Nullable clientRatesInfo __attribute__((swift_name("clientRatesInfo")));

/**
 *
 * The date when the invoice was created.
 * The invoice date must be greater than the completion date of the work on the Work Order.
 */
@property (readonly) NSString *createdDate __attribute__((swift_name("createdDate")));

/**
 * Currency.
 */
@property (readonly) ScmSdkInvoiceCurrency * _Nullable currency __attribute__((swift_name("currency")));

/**
 * By default, an invoice has the same GL code as the work order associated with that invoice.
 * When a work order has no GL code, the invoice has no code either.
 */
@property (readonly) NSString *glCode __attribute__((swift_name("glCode")));

/**
 * ID of invoice.
 * Assigned by the system, a unique identifier in the system.
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 * True if at least one of Line Item isMismatched = true.
 */
@property (readonly) BOOL isAnyMismatch __attribute__((swift_name("isAnyMismatch")));

/**
 * Line Item Invoice by itemizing labor, materials, others and freights.
 */
@property (readonly) ScmSdkInvoiceLineItems *lineItems __attribute__((swift_name("lineItems")));

/**
 * Location.
 * Concatenated from location Store Id and Short Name.
 */
@property (readonly) NSString *location __attribute__((swift_name("location")));

/**
 * Number of invoice.
 * The user creates this value independently.
 * It must be unique for each invoice.
 */
@property (readonly) NSString *number __attribute__((swift_name("number")));

/**
 * A service provider name.
 */
@property (readonly) NSString * _Nullable providerName __attribute__((swift_name("providerName")));

/**
 * Invoice Status.
 */
@property (readonly) ScmSdkInvoiceStatus *status __attribute__((swift_name("status")));

/**
 * Tax validation info
 */
@property (readonly) ScmSdkInvoiceTaxValidationInfo * _Nullable taxValidationInfo __attribute__((swift_name("taxValidationInfo")));

/**
 * Total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));

/**
 *  Trade.
 */
@property (readonly) ScmSdkInvoiceTrade * _Nullable trade __attribute__((swift_name("trade")));

/**
 * Work Order.
 */
@property (readonly) ScmSdkInvoiceWorkOrder *workOrder __attribute__((swift_name("workOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceAttachment")))
@interface ScmSdkInvoiceAttachment : ScmSdkBase
- (instancetype)initWithName:(NSString *)name uri:(NSString *)uri date:(NSString *)date __attribute__((swift_name("init(name:uri:date:)"))) __attribute__((objc_designated_initializer));

/**
 * Attachment name.
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Attachment URI.
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Attachment load date.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceAttachment *)doCopyName:(NSString *)name uri:(NSString *)uri date:(NSString *)date __attribute__((swift_name("doCopy(name:uri:date:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Attachment load date.
 */
@property (readonly) NSString *date __attribute__((swift_name("date")));

/**
 * Attachment name.
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));

/**
 * Attachment URI.
 */
@property (readonly) NSString *uri __attribute__((swift_name("uri")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceDetails")))
@interface ScmSdkInvoiceDetails : ScmSdkBase
- (instancetype)initWithId:(int32_t)id number:(NSString *)number totalAmount:(float)totalAmount subtotalAmount:(float)subtotalAmount currency:(ScmSdkInvoiceCurrency * _Nullable)currency status:(ScmSdkInvoiceStatus *)status projectId:(ScmSdkInt * _Nullable)projectId description:(NSString *)description additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> *)additionalGlCodes priority:(NSString *)priority proposal:(ScmSdkInvoiceDetailsProposal * _Nullable)proposal openBy:(ScmSdkInvoiceUserAction * _Nullable)openBy lastAction:(ScmSdkInvoiceUserAction * _Nullable)lastAction woAssigneeUser:(NSString * _Nullable)woAssigneeUser createdDate:(NSString *)createdDate glCode:(NSString *)glCode trade:(ScmSdkInvoiceTrade * _Nullable)trade category:(ScmSdkInvoiceCategory * _Nullable)category location:(NSString *)location providerName:(NSString * _Nullable)providerName availableStatusActions:(NSArray<ScmSdkInvoiceAvailableStatusAction *> *)availableStatusActions taxValidationInfo:(ScmSdkInvoiceTaxValidationInfo * _Nullable)taxValidationInfo workOrder:(ScmSdkInvoiceWorkOrder *)workOrder isAnyMismatch:(BOOL)isAnyMismatch lineItems:(ScmSdkInvoiceLineItems * _Nullable)lineItems taxInfo:(ScmSdkInvoiceTaxInfo * _Nullable)taxInfo taxCanadaInfo:(ScmSdkInvoiceTaxInfo * _Nullable)taxCanadaInfo checkInOutInfo:(ScmSdkInvoiceCheckInOutInfo * _Nullable)checkInOutInfo clientRatesInfo:(ScmSdkInvoiceClientRatesInfo * _Nullable)clientRatesInfo __attribute__((swift_name("init(id:number:totalAmount:subtotalAmount:currency:status:projectId:description:additionalGlCodes:priority:proposal:openBy:lastAction:woAssigneeUser:createdDate:glCode:trade:category:location:providerName:availableStatusActions:taxValidationInfo:workOrder:isAnyMismatch:lineItems:taxInfo:taxCanadaInfo:checkInOutInfo:clientRatesInfo:)"))) __attribute__((objc_designated_initializer));

/**
 * ID of invoice.
 * Assigned by the system, a unique identifier in the system.
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice priority.
 */
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *
 * Invoiced work orders that have an associated proposal.
 */
- (ScmSdkInvoiceDetailsProposal * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Open by user.
 */
- (ScmSdkInvoiceUserAction * _Nullable)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Last action.
 */
- (ScmSdkInvoiceUserAction * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Last action.
 */
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * The date when the invoice was created.
 * The invoice date must be greater than the completion date of the work on the Work Order.
 */
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * By default, an invoice has the same GL code as the work order associated with that invoice.
 * When a work order has no GL code, the invoice has no code either.
 */
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice Trade.
 */
- (ScmSdkInvoiceTrade * _Nullable)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice Category.
 */
- (ScmSdkInvoiceCategory * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Location.
 * Concatenated from location Store Id and Short Name.
 */
- (NSString *)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Number of invoice.
 * The user creates this value independently.
 * It must be unique for each invoice.
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * A service provider name.
 */
- (NSString * _Nullable)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of available status actions.
 */
- (NSArray<ScmSdkInvoiceAvailableStatusAction *> *)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Tax validation info.
 */
- (ScmSdkInvoiceTaxValidationInfo * _Nullable)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Work Order.
 */
- (ScmSdkInvoiceWorkOrder *)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * True if at least one of Line Item isMismatched = true.
 */
- (BOOL)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Line Item Invoice by itemizing labor, materials, others and freights.
 */
- (ScmSdkInvoiceLineItems * _Nullable)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice taxes information.
 */
- (ScmSdkInvoiceTaxInfo * _Nullable)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice second taxes. Multiple taxes are required for some Canadian locations.
 */
- (ScmSdkInvoiceTaxInfo * _Nullable)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Check in/out info.
 */
- (ScmSdkInvoiceCheckInOutInfo * _Nullable)component28 __attribute__((swift_name("component28()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Client rates info.
 */
- (ScmSdkInvoiceClientRatesInfo * _Nullable)component29 __attribute__((swift_name("component29()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Total amount.
 */
- (float)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Subtotal amount.
 */
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Currency.
 */
- (ScmSdkInvoiceCurrency * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice Status.
 */
- (ScmSdkInvoiceStatus *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice project id.
 */
- (ScmSdkInt * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice  description.
 */
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice additional Gl Codes (Approval Codes).
 */
- (NSArray<ScmSdkInvoiceAdditionalGlCode *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceDetails *)doCopyId:(int32_t)id number:(NSString *)number totalAmount:(float)totalAmount subtotalAmount:(float)subtotalAmount currency:(ScmSdkInvoiceCurrency * _Nullable)currency status:(ScmSdkInvoiceStatus *)status projectId:(ScmSdkInt * _Nullable)projectId description:(NSString *)description additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> *)additionalGlCodes priority:(NSString *)priority proposal:(ScmSdkInvoiceDetailsProposal * _Nullable)proposal openBy:(ScmSdkInvoiceUserAction * _Nullable)openBy lastAction:(ScmSdkInvoiceUserAction * _Nullable)lastAction woAssigneeUser:(NSString * _Nullable)woAssigneeUser createdDate:(NSString *)createdDate glCode:(NSString *)glCode trade:(ScmSdkInvoiceTrade * _Nullable)trade category:(ScmSdkInvoiceCategory * _Nullable)category location:(NSString *)location providerName:(NSString * _Nullable)providerName availableStatusActions:(NSArray<ScmSdkInvoiceAvailableStatusAction *> *)availableStatusActions taxValidationInfo:(ScmSdkInvoiceTaxValidationInfo * _Nullable)taxValidationInfo workOrder:(ScmSdkInvoiceWorkOrder *)workOrder isAnyMismatch:(BOOL)isAnyMismatch lineItems:(ScmSdkInvoiceLineItems * _Nullable)lineItems taxInfo:(ScmSdkInvoiceTaxInfo * _Nullable)taxInfo taxCanadaInfo:(ScmSdkInvoiceTaxInfo * _Nullable)taxCanadaInfo checkInOutInfo:(ScmSdkInvoiceCheckInOutInfo * _Nullable)checkInOutInfo clientRatesInfo:(ScmSdkInvoiceClientRatesInfo * _Nullable)clientRatesInfo __attribute__((swift_name("doCopy(id:number:totalAmount:subtotalAmount:currency:status:projectId:description:additionalGlCodes:priority:proposal:openBy:lastAction:woAssigneeUser:createdDate:glCode:trade:category:location:providerName:availableStatusActions:taxValidationInfo:workOrder:isAnyMismatch:lineItems:taxInfo:taxCanadaInfo:checkInOutInfo:clientRatesInfo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Invoice additional Gl Codes (Approval Codes).
 */
@property (readonly) NSArray<ScmSdkInvoiceAdditionalGlCode *> *additionalGlCodes __attribute__((swift_name("additionalGlCodes")));

/**
 * List of available status actions.
 */
@property (readonly) NSArray<ScmSdkInvoiceAvailableStatusAction *> *availableStatusActions __attribute__((swift_name("availableStatusActions")));

/**
 *  Invoice Category.
 */
@property (readonly) ScmSdkInvoiceCategory * _Nullable category __attribute__((swift_name("category")));

/**
 *  Check in/out info.
 */
@property (readonly) ScmSdkInvoiceCheckInOutInfo * _Nullable checkInOutInfo __attribute__((swift_name("checkInOutInfo")));

/**
 *  Client rates info.
 */
@property (readonly) ScmSdkInvoiceClientRatesInfo * _Nullable clientRatesInfo __attribute__((swift_name("clientRatesInfo")));

/**
 * The date when the invoice was created.
 * The invoice date must be greater than the completion date of the work on the Work Order.
 */
@property (readonly) NSString *createdDate __attribute__((swift_name("createdDate")));

/**
 * Currency.
 */
@property (readonly) ScmSdkInvoiceCurrency * _Nullable currency __attribute__((swift_name("currency")));

/**
 * Invoice  description.
 */
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));

/**
 * By default, an invoice has the same GL code as the work order associated with that invoice.
 * When a work order has no GL code, the invoice has no code either.
 */
@property (readonly) NSString *glCode __attribute__((swift_name("glCode")));

/**
 * ID of invoice.
 * Assigned by the system, a unique identifier in the system.
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 * True if at least one of Line Item isMismatched = true.
 */
@property (readonly) BOOL isAnyMismatch __attribute__((swift_name("isAnyMismatch")));

/**
 * Last action.
 */
@property (readonly) ScmSdkInvoiceUserAction * _Nullable lastAction __attribute__((swift_name("lastAction")));

/**
 * Line Item Invoice by itemizing labor, materials, others and freights.
 */
@property (readonly) ScmSdkInvoiceLineItems * _Nullable lineItems __attribute__((swift_name("lineItems")));

/**
 * Location.
 * Concatenated from location Store Id and Short Name.
 */
@property (readonly) NSString *location __attribute__((swift_name("location")));

/**
 * Number of invoice.
 * The user creates this value independently.
 * It must be unique for each invoice.
 */
@property (readonly) NSString *number __attribute__((swift_name("number")));

/**
 * Open by user.
 */
@property (readonly) ScmSdkInvoiceUserAction * _Nullable openBy __attribute__((swift_name("openBy")));

/**
 * Invoice priority.
 */
@property (readonly) NSString *priority __attribute__((swift_name("priority")));

/**
 * Invoice project id.
 */
@property (readonly) ScmSdkInt * _Nullable projectId __attribute__((swift_name("projectId")));

/**
 *
 * Invoiced work orders that have an associated proposal.
 */
@property (readonly) ScmSdkInvoiceDetailsProposal * _Nullable proposal __attribute__((swift_name("proposal")));

/**
 * A service provider name.
 */
@property (readonly) NSString * _Nullable providerName __attribute__((swift_name("providerName")));

/**
 * Invoice Status.
 */
@property (readonly) ScmSdkInvoiceStatus *status __attribute__((swift_name("status")));

/**
 * Subtotal amount.
 */
@property (readonly) float subtotalAmount __attribute__((swift_name("subtotalAmount")));

/**
 *  Invoice second taxes. Multiple taxes are required for some Canadian locations.
 */
@property (readonly) ScmSdkInvoiceTaxInfo * _Nullable taxCanadaInfo __attribute__((swift_name("taxCanadaInfo")));

/**
 *  Invoice taxes information.
 */
@property (readonly) ScmSdkInvoiceTaxInfo * _Nullable taxInfo __attribute__((swift_name("taxInfo")));

/**
 * Tax validation info.
 */
@property (readonly) ScmSdkInvoiceTaxValidationInfo * _Nullable taxValidationInfo __attribute__((swift_name("taxValidationInfo")));

/**
 * Total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));

/**
 *  Invoice Trade.
 */
@property (readonly) ScmSdkInvoiceTrade * _Nullable trade __attribute__((swift_name("trade")));

/**
 * Last action.
 */
@property (readonly) NSString * _Nullable woAssigneeUser __attribute__((swift_name("woAssigneeUser")));

/**
 * Work Order.
 */
@property (readonly) ScmSdkInvoiceWorkOrder *workOrder __attribute__((swift_name("workOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceDetails.Proposal")))
@interface ScmSdkInvoiceDetailsProposal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id number:(NSString *)number amount:(float)amount __attribute__((swift_name("init(id:number:amount:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceDetailsProposal *)doCopyId:(int32_t)id number:(NSString *)number amount:(float)amount __attribute__((swift_name("doCopy(id:number:amount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float amount __attribute__((swift_name("amount")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *number __attribute__((swift_name("number")));
@end


/**
 * In some cases we need this abstraction to indicate that All items was selected.
 * For example, when a list is loaded with pagination, we don't know all the items until the user loads them,
 * but we need to give to user the ability to select all items, even if he doesn't load all of them.
 */
__attribute__((swift_name("InvoiceFilterSelectedItemsState")))
@protocol ScmSdkInvoiceFilterSelectedItemsState
@required
@end


/**
 * All items in list are selected.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFilterSelectedItemsStateAll")))
@interface ScmSdkInvoiceFilterSelectedItemsStateAll : ScmSdkBase <ScmSdkInvoiceFilterSelectedItemsState>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * All items in list are selected.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)all __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoiceFilterSelectedItemsStateAll *shared __attribute__((swift_name("shared")));
@end


/**
 * Some of the list items are selected.
 * @param items - selected items.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFilterSelectedItemsStatePart")))
@interface ScmSdkInvoiceFilterSelectedItemsStatePart : ScmSdkBase <ScmSdkInvoiceFilterSelectedItemsState>
- (instancetype)initWithItems:(NSArray<ScmSdkSelectedItem *> *)items __attribute__((swift_name("init(items:)"))) __attribute__((objc_designated_initializer));
- (NSArray<ScmSdkSelectedItem *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Some of the list items are selected.
 * @param items - selected items.
 */
- (ScmSdkInvoiceFilterSelectedItemsStatePart *)doCopyItems:(NSArray<ScmSdkSelectedItem *> *)items __attribute__((swift_name("doCopy(items:)")));

/**
 * Some of the list items are selected.
 * @param items - selected items.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Some of the list items are selected.
 * @param items - selected items.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Some of the list items are selected.
 * @param items - selected items.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkSelectedItem *> *items __attribute__((swift_name("items")));
@end


/**
 *  Common additional info, used when updating Invoice status or Gl code.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceUpdateInfo")))
@interface ScmSdkInvoiceUpdateInfo : ScmSdkBase
- (instancetype)initWithDefaultGlCode:(NSString *)defaultGlCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> *)additionalGlCodes __attribute__((swift_name("init(defaultGlCode:additionalGlCodes:)"))) __attribute__((objc_designated_initializer));

/**
 * Default GlCode for selected category.
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of Additional GlCodes [InvoiceAdditionalGlCode] for selected category.
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557613076/Managing+Additional+Approval+Codes">Managing Additional Approval Codes</a>
 */
- (NSArray<ScmSdkInvoiceAdditionalGlCode *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Common additional info, used when updating Invoice status or Gl code.
 */
- (ScmSdkInvoiceUpdateInfo *)doCopyDefaultGlCode:(NSString *)defaultGlCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> *)additionalGlCodes __attribute__((swift_name("doCopy(defaultGlCode:additionalGlCodes:)")));

/**
 *  Common additional info, used when updating Invoice status or Gl code.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 *  Common additional info, used when updating Invoice status or Gl code.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 *  Common additional info, used when updating Invoice status or Gl code.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * List of Additional GlCodes [InvoiceAdditionalGlCode] for selected category.
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/557613076/Managing+Additional+Approval+Codes">Managing Additional Approval Codes</a>
 */
@property (readonly) NSArray<ScmSdkInvoiceAdditionalGlCode *> *additionalGlCodes __attribute__((swift_name("additionalGlCodes")));

/**
 * Default GlCode for selected category.
 */
@property (readonly) NSString *defaultGlCode __attribute__((swift_name("defaultGlCode")));
@end


/**
 *  Invoice Filter.
 *  Filter with [isDefault] = true will be used when fetching invoices list.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesFilter")))
@interface ScmSdkInvoicesFilter : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isDefault:(BOOL)isDefault name:(NSString *)name monthsAgo:(int32_t)monthsAgo minAmount:(NSString *)minAmount maxAmount:(NSString *)maxAmount sortBy:(NSArray<ScmSdkSelectedItem *> *)sortBy statuses:(NSArray<ScmSdkSelectedItem *> *)statuses assignedTo:(NSArray<ScmSdkSelectedItem *> *)assignedTo districts:(id<ScmSdkInvoiceFilterSelectedItemsState>)districts trades:(NSArray<ScmSdkSelectedItem *> *)trades providers:(NSArray<ScmSdkSelectedItem *> *)providers categories:(NSArray<ScmSdkSelectedItem *> *)categories __attribute__((swift_name("init(id:isDefault:name:monthsAgo:minAmount:maxAmount:sortBy:statuses:assignedTo:districts:trades:providers:categories:)"))) __attribute__((objc_designated_initializer));

/**
 *  Filter id.
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  State of location districts.
 *  [SelectedItem.id] - district has no id, so this is a simple incremental value
 *  [SelectedItem.value] - district name
 */
- (id<ScmSdkInvoiceFilterSelectedItemsState>)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of trades.
 *  [SelectedItem.id] - trade id
 *  [SelectedItem.value] - trade name
 */
- (NSArray<ScmSdkSelectedItem *> *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  List of providers.
 *  [SelectedItem.id] - provider id
 *  [SelectedItem.value] - provider name
 */
- (NSArray<ScmSdkSelectedItem *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  List of categories.
 *  [SelectedItem.id] - category id
 *  [SelectedItem.value] - category name
 */
- (NSArray<ScmSdkSelectedItem *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Is filter applied.
 *  There can be only one filter with [isDefault]=true
 */
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Filter name.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoices created [monthsAgo] of months ago or less.
 *  Can be from 1 to 12 month.
 */
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Minimum invoices amount.
 */
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Maximum invoices amount.
 */
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  List of [InvoicesFilterSort] values.
 */
- (NSArray<ScmSdkSelectedItem *> *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  List of [InvoiceStatus] values.
 */
- (NSArray<ScmSdkSelectedItem *> *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  List of [InvoicesAssignedToState] values.
 */
- (NSArray<ScmSdkSelectedItem *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice Filter.
 *  Filter with [isDefault] = true will be used when fetching invoices list.
 */
- (ScmSdkInvoicesFilter *)doCopyId:(int32_t)id isDefault:(BOOL)isDefault name:(NSString *)name monthsAgo:(int32_t)monthsAgo minAmount:(NSString *)minAmount maxAmount:(NSString *)maxAmount sortBy:(NSArray<ScmSdkSelectedItem *> *)sortBy statuses:(NSArray<ScmSdkSelectedItem *> *)statuses assignedTo:(NSArray<ScmSdkSelectedItem *> *)assignedTo districts:(id<ScmSdkInvoiceFilterSelectedItemsState>)districts trades:(NSArray<ScmSdkSelectedItem *> *)trades providers:(NSArray<ScmSdkSelectedItem *> *)providers categories:(NSArray<ScmSdkSelectedItem *> *)categories __attribute__((swift_name("doCopy(id:isDefault:name:monthsAgo:minAmount:maxAmount:sortBy:statuses:assignedTo:districts:trades:providers:categories:)")));

/**
 *  Invoice Filter.
 *  Filter with [isDefault] = true will be used when fetching invoices list.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 *  Invoice Filter.
 *  Filter with [isDefault] = true will be used when fetching invoices list.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 *  Invoice Filter.
 *  Filter with [isDefault] = true will be used when fetching invoices list.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  List of [InvoicesAssignedToState] values.
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *assignedTo __attribute__((swift_name("assignedTo")));

/**
 *  List of categories.
 *  [SelectedItem.id] - category id
 *  [SelectedItem.value] - category name
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *categories __attribute__((swift_name("categories")));

/**
 *  State of location districts.
 *  [SelectedItem.id] - district has no id, so this is a simple incremental value
 *  [SelectedItem.value] - district name
 */
@property (readonly) id<ScmSdkInvoiceFilterSelectedItemsState> districts __attribute__((swift_name("districts")));

/**
 *  Filter id.
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 *  Is filter applied.
 *  There can be only one filter with [isDefault]=true
 */
@property (readonly) BOOL isDefault __attribute__((swift_name("isDefault")));

/**
 *  Maximum invoices amount.
 */
@property (readonly) NSString *maxAmount __attribute__((swift_name("maxAmount")));

/**
 *  Minimum invoices amount.
 */
@property (readonly) NSString *minAmount __attribute__((swift_name("minAmount")));

/**
 *  Invoices created [monthsAgo] of months ago or less.
 *  Can be from 1 to 12 month.
 */
@property (readonly) int32_t monthsAgo __attribute__((swift_name("monthsAgo")));

/**
 *  Filter name.
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));

/**
 *  List of providers.
 *  [SelectedItem.id] - provider id
 *  [SelectedItem.value] - provider name
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *providers __attribute__((swift_name("providers")));

/**
 *  List of [InvoicesFilterSort] values.
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *sortBy __attribute__((swift_name("sortBy")));

/**
 *  List of [InvoiceStatus] values.
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *statuses __attribute__((swift_name("statuses")));

/**
 * List of trades.
 *  [SelectedItem.id] - trade id
 *  [SelectedItem.value] - trade name
 */
@property (readonly) NSArray<ScmSdkSelectedItem *> *trades __attribute__((swift_name("trades")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesState")))
@interface ScmSdkInvoicesState : ScmSdkBase
- (instancetype)initWithHasNext:(BOOL)hasNext invoices:(NSArray<ScmSdkInvoice *> *)invoices totalCount:(int32_t)totalCount totalAmount:(NSDictionary<ScmSdkInvoiceCurrency *, ScmSdkFloat *> *)totalAmount __attribute__((swift_name("init(hasNext:invoices:totalCount:totalAmount:)"))) __attribute__((objc_designated_initializer));

/**
 * Can we load the following page.
 */
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * List of all loaded invoices.
 */
- (NSArray<ScmSdkInvoice *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Total count of invoices.
 */
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Total amount of invoices, where :
 *   [Map.keys] - currency
 *   [Map.values] - amount .
 */
- (NSDictionary<ScmSdkInvoiceCurrency *, ScmSdkFloat *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoicesState *)doCopyHasNext:(BOOL)hasNext invoices:(NSArray<ScmSdkInvoice *> *)invoices totalCount:(int32_t)totalCount totalAmount:(NSDictionary<ScmSdkInvoiceCurrency *, ScmSdkFloat *> *)totalAmount __attribute__((swift_name("doCopy(hasNext:invoices:totalCount:totalAmount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Can we load the following page.
 */
@property (readonly) BOOL hasNext __attribute__((swift_name("hasNext")));

/**
 * List of all loaded invoices.
 */
@property (readonly) NSArray<ScmSdkInvoice *> *invoices __attribute__((swift_name("invoices")));

/**
 *  Total amount of invoices, where :
 *   [Map.keys] - currency
 *   [Map.values] - amount .
 */
@property (readonly) NSDictionary<ScmSdkInvoiceCurrency *, ScmSdkFloat *> *totalAmount __attribute__((swift_name("totalAmount")));

/**
 * Total count of invoices.
 */
@property (readonly) int32_t totalCount __attribute__((swift_name("totalCount")));
@end


/**
 * The unit of measure for Material or Travel charges.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceChargeUnitType")))
@interface ScmSdkInvoiceChargeUnitType : ScmSdkKotlinEnum<ScmSdkInvoiceChargeUnitType *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * The unit of measure for Material or Travel charges.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *each __attribute__((swift_name("each")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *box __attribute__((swift_name("box")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *feet __attribute__((swift_name("feet")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *sqFt __attribute__((swift_name("sqFt")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *lbs __attribute__((swift_name("lbs")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *gal __attribute__((swift_name("gal")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *oz __attribute__((swift_name("oz")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *m __attribute__((swift_name("m")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *cm __attribute__((swift_name("cm")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *sqM __attribute__((swift_name("sqM")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *sqCm __attribute__((swift_name("sqCm")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *kg __attribute__((swift_name("kg")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *g __attribute__((swift_name("g")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *l __attribute__((swift_name("l")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *ml __attribute__((swift_name("ml")));
@property (class, readonly) ScmSdkInvoiceChargeUnitType *unknown __attribute__((swift_name("unknown")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceChargeUnitType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end


/**
 * Skill level of the employee who performed the service.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceClientSkillLevel")))
@interface ScmSdkInvoiceClientSkillLevel : ScmSdkKotlinEnum<ScmSdkInvoiceClientSkillLevel *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Skill level of the employee who performed the service.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceClientSkillLevel *supervisor __attribute__((swift_name("supervisor")));
@property (class, readonly) ScmSdkInvoiceClientSkillLevel *technician __attribute__((swift_name("technician")));
@property (class, readonly) ScmSdkInvoiceClientSkillLevel *helper __attribute__((swift_name("helper")));
@property (class, readonly) ScmSdkInvoiceClientSkillLevel *unknown __attribute__((swift_name("unknown")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceClientSkillLevel *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end


/**
 * Hourly labor rate types of the employee who performed the service.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLaborType")))
@interface ScmSdkInvoiceLaborType : ScmSdkKotlinEnum<ScmSdkInvoiceLaborType *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Hourly labor rate types of the employee who performed the service.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceLaborType *regular __attribute__((swift_name("regular")));
@property (class, readonly) ScmSdkInvoiceLaborType *overtime __attribute__((swift_name("overtime")));
@property (class, readonly) ScmSdkInvoiceLaborType *doubleTime __attribute__((swift_name("doubleTime")));
@property (class, readonly) ScmSdkInvoiceLaborType *unknown __attribute__((swift_name("unknown")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceLaborType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceRejectionReasonType")))
@interface ScmSdkInvoiceRejectionReasonType : ScmSdkKotlinEnum<ScmSdkInvoiceRejectionReasonType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkInvoiceRejectionReasonTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkInvoiceRejectionReasonType *custom __attribute__((swift_name("custom")));
@property (class, readonly) ScmSdkInvoiceRejectionReasonType *workorderNotInvoiceable __attribute__((swift_name("workorderNotInvoiceable")));
@property (class, readonly) ScmSdkInvoiceRejectionReasonType *invoiceRequiresCorrection __attribute__((swift_name("invoiceRequiresCorrection")));
@property (class, readonly) ScmSdkInvoiceRejectionReasonType *other __attribute__((swift_name("other")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceRejectionReasonType *> *)values __attribute__((swift_name("values()")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceRejectionReasonType.Companion")))
@interface ScmSdkInvoiceRejectionReasonTypeCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkInvoiceRejectionReasonTypeCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkInvoiceRejectionReasonType *)findInvoiceRejectionReasonTypeValue:(int32_t)value __attribute__((swift_name("findInvoiceRejectionReasonType(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceStatus")))
@interface ScmSdkInvoiceStatus : ScmSdkKotlinEnum<ScmSdkInvoiceStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceStatus *open __attribute__((swift_name("open")));
@property (class, readonly) ScmSdkInvoiceStatus *onHold __attribute__((swift_name("onHold")));
@property (class, readonly) ScmSdkInvoiceStatus *approved __attribute__((swift_name("approved")));
@property (class, readonly) ScmSdkInvoiceStatus *rejected __attribute__((swift_name("rejected")));
@property (class, readonly) ScmSdkInvoiceStatus *reviewed __attribute__((swift_name("reviewed")));
@property (class, readonly) ScmSdkInvoiceStatus *paid __attribute__((swift_name("paid")));
@property (class, readonly) ScmSdkInvoiceStatus *disputed __attribute__((swift_name("disputed")));
@property (class, readonly) ScmSdkInvoiceStatus *unknown __attribute__((swift_name("unknown")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceStatus *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@end


/**
 * Actions that the user can perform with the invoice and which will change it's status.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceStatusAction")))
@interface ScmSdkInvoiceStatusAction : ScmSdkKotlinEnum<ScmSdkInvoiceStatusAction *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Actions that the user can perform with the invoice and which will change it's status.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoiceStatusAction *onHold __attribute__((swift_name("onHold")));
@property (class, readonly) ScmSdkInvoiceStatusAction *approve __attribute__((swift_name("approve")));
@property (class, readonly) ScmSdkInvoiceStatusAction *reject __attribute__((swift_name("reject")));
@property (class, readonly) ScmSdkInvoiceStatusAction *return_ __attribute__((swift_name("return_")));
+ (ScmSdkKotlinArray<ScmSdkInvoiceStatusAction *> *)values __attribute__((swift_name("values()")));
@end


/**
 * Values used to filter invoices based on who they are assigned to.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesAssignedToState")))
@interface ScmSdkInvoicesAssignedToState : ScmSdkKotlinEnum<ScmSdkInvoicesAssignedToState *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Values used to filter invoices based on who they are assigned to.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoicesAssignedToState *assignedAnyone __attribute__((swift_name("assignedAnyone")));
@property (class, readonly) ScmSdkInvoicesAssignedToState *assignedToMe __attribute__((swift_name("assignedToMe")));
@property (class, readonly) ScmSdkInvoicesAssignedToState *unassigned __attribute__((swift_name("unassigned")));
+ (ScmSdkKotlinArray<ScmSdkInvoicesAssignedToState *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@end


/**
 * Values used to filter invoices with a specified sort order.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesFilterSort")))
@interface ScmSdkInvoicesFilterSort : ScmSdkKotlinEnum<ScmSdkInvoicesFilterSort *>
+ (instancetype)alloc __attribute__((unavailable));

/**
 * Values used to filter invoices with a specified sort order.
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkInvoicesFilterSort *amount __attribute__((swift_name("amount")));
@property (class, readonly) ScmSdkInvoicesFilterSort *date __attribute__((swift_name("date")));
@property (class, readonly) ScmSdkInvoicesFilterSort *trade __attribute__((swift_name("trade")));
@property (class, readonly) ScmSdkInvoicesFilterSort *status __attribute__((swift_name("status")));
+ (ScmSdkKotlinArray<ScmSdkInvoicesFilterSort *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceAdditionalGlCode")))
@interface ScmSdkInvoiceAdditionalGlCode : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(id:name:value:)"))) __attribute__((objc_designated_initializer));

/**
 *  Id of additional Gl code.
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  General name of additional Gl code.
 *  Used to show input text label.
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Value of additional Gl code.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceAdditionalGlCode *)doCopyId:(int32_t)id name:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(id:name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Id of additional Gl code.
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 *  General name of additional Gl code.
 *  Used to show input text label.
 */
@property (readonly) NSString *name __attribute__((swift_name("name")));

/**
 *  Value of additional Gl code.
 */
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceAvailableStatusAction")))
@interface ScmSdkInvoiceAvailableStatusAction : ScmSdkBase
- (instancetype)initWithAction:(ScmSdkInvoiceStatusAction *)action isAvailable:(BOOL)isAvailable __attribute__((swift_name("init(action:isAvailable:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkInvoiceStatusAction *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Value indicating whether or not user can perform this action.
 */
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceAvailableStatusAction *)doCopyAction:(ScmSdkInvoiceStatusAction *)action isAvailable:(BOOL)isAvailable __attribute__((swift_name("doCopy(action:isAvailable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkInvoiceStatusAction *action __attribute__((swift_name("action")));

/**
 *  Value indicating whether or not user can perform this action.
 */
@property (readonly) BOOL isAvailable __attribute__((swift_name("isAvailable")));
@end


/**
 * Categories are required to create work orders.
 * They are also used for generating Work Order Reports and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories">Managing Categories</a>
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceCategory")))
@interface ScmSdkInvoiceCategory : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Categories are required to create work orders.
 * They are also used for generating Work Order Reports and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories">Managing Categories</a>
 */
- (ScmSdkInvoiceCategory *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));

/**
 * Categories are required to create work orders.
 * They are also used for generating Work Order Reports and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories">Managing Categories</a>
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Categories are required to create work orders.
 * They are also used for generating Work Order Reports and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories">Managing Categories</a>
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Categories are required to create work orders.
 * They are also used for generating Work Order Reports and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556302506/Managing+Categories">Managing Categories</a>
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceCheckInOutInfo")))
@interface ScmSdkInvoiceCheckInOutInfo : ScmSdkBase
- (instancetype)initWithCheckInOutHours:(NSArray<ScmSdkInvoiceCheckInOutInfoCheckInOutHours *> *)checkInOutHours isMismatched:(BOOL)isMismatched mismatchReason:(NSString *)mismatchReason totalTime:(float)totalTime __attribute__((swift_name("init(checkInOutHours:isMismatched:mismatchReason:totalTime:)"))) __attribute__((objc_designated_initializer));

/**
 * Check in/out hours info list.
 */
- (NSArray<ScmSdkInvoiceCheckInOutInfoCheckInOutHours *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Is mismatched.
 */
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Mismatch reason.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Total time.
 */
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceCheckInOutInfo *)doCopyCheckInOutHours:(NSArray<ScmSdkInvoiceCheckInOutInfoCheckInOutHours *> *)checkInOutHours isMismatched:(BOOL)isMismatched mismatchReason:(NSString *)mismatchReason totalTime:(float)totalTime __attribute__((swift_name("doCopy(checkInOutHours:isMismatched:mismatchReason:totalTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Check in/out hours info list.
 */
@property (readonly) NSArray<ScmSdkInvoiceCheckInOutInfoCheckInOutHours *> *checkInOutHours __attribute__((swift_name("checkInOutHours")));

/**
 * Is mismatched.
 */
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));

/**
 * Mismatch reason.
 */
@property (readonly) NSString *mismatchReason __attribute__((swift_name("mismatchReason")));

/**
 *  Total time.
 */
@property (readonly) float totalTime __attribute__((swift_name("totalTime")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceCheckInOutInfo.CheckInOutHours")))
@interface ScmSdkInvoiceCheckInOutInfoCheckInOutHours : ScmSdkBase
- (instancetype)initWithId:(int32_t)id totalTime:(float)totalTime numberOfTechs:(int32_t)numberOfTechs checkInTime:(NSString *)checkInTime checkOutTime:(NSString *)checkOutTime workDate:(NSString *)workDate hours:(float)hours premHours:(float)premHours userName:(NSString *)userName lineNumber:(int32_t)lineNumber workType:(int32_t)workType __attribute__((swift_name("init(id:totalTime:numberOfTechs:checkInTime:checkOutTime:workDate:hours:premHours:userName:lineNumber:workType:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceCheckInOutInfoCheckInOutHours *)doCopyId:(int32_t)id totalTime:(float)totalTime numberOfTechs:(int32_t)numberOfTechs checkInTime:(NSString *)checkInTime checkOutTime:(NSString *)checkOutTime workDate:(NSString *)workDate hours:(float)hours premHours:(float)premHours userName:(NSString *)userName lineNumber:(int32_t)lineNumber workType:(int32_t)workType __attribute__((swift_name("doCopy(id:totalTime:numberOfTechs:checkInTime:checkOutTime:workDate:hours:premHours:userName:lineNumber:workType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *checkInTime __attribute__((swift_name("checkInTime")));
@property (readonly) NSString *checkOutTime __attribute__((swift_name("checkOutTime")));
@property (readonly) float hours __attribute__((swift_name("hours")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t lineNumber __attribute__((swift_name("lineNumber")));
@property (readonly) int32_t numberOfTechs __attribute__((swift_name("numberOfTechs")));
@property (readonly) float premHours __attribute__((swift_name("premHours")));
@property (readonly) float totalTime __attribute__((swift_name("totalTime")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@property (readonly) NSString *workDate __attribute__((swift_name("workDate")));
@property (readonly) int32_t workType __attribute__((swift_name("workType")));
@end


/**
 *  If any mismatch in rates is identified on an invoice, you see warning icons on the
 *  Charges tab and next to the Client Rates section.
 *  User should see warning icons next to the mismatched rates.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560267336/About+Invoiced+Rates+Validation">Invoice Rates</a>
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceClientRatesInfo")))
@interface ScmSdkInvoiceClientRatesInfo : ScmSdkBase
- (instancetype)initWithIsMismatched:(BOOL)isMismatched laborRatesInfo:(NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfo *> *)laborRatesInfo __attribute__((swift_name("init(isMismatched:laborRatesInfo:)"))) __attribute__((objc_designated_initializer));

/**
 * True if at least one of Client Rate isMismatched = true.
 */
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Client labor rates.
 */
- (NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfo *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  If any mismatch in rates is identified on an invoice, you see warning icons on the
 *  Charges tab and next to the Client Rates section.
 *  User should see warning icons next to the mismatched rates.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560267336/About+Invoiced+Rates+Validation">Invoice Rates</a>
 */
- (ScmSdkInvoiceClientRatesInfo *)doCopyIsMismatched:(BOOL)isMismatched laborRatesInfo:(NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfo *> *)laborRatesInfo __attribute__((swift_name("doCopy(isMismatched:laborRatesInfo:)")));

/**
 *  If any mismatch in rates is identified on an invoice, you see warning icons on the
 *  Charges tab and next to the Client Rates section.
 *  User should see warning icons next to the mismatched rates.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560267336/About+Invoiced+Rates+Validation">Invoice Rates</a>
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 *  If any mismatch in rates is identified on an invoice, you see warning icons on the
 *  Charges tab and next to the Client Rates section.
 *  User should see warning icons next to the mismatched rates.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560267336/About+Invoiced+Rates+Validation">Invoice Rates</a>
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 *  If any mismatch in rates is identified on an invoice, you see warning icons on the
 *  Charges tab and next to the Client Rates section.
 *  User should see warning icons next to the mismatched rates.
 *
 * @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/560267336/About+Invoiced+Rates+Validation">Invoice Rates</a>
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * True if at least one of Client Rate isMismatched = true.
 */
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));

/**
 *  Client labor rates.
 */
@property (readonly) NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfo *> *laborRatesInfo __attribute__((swift_name("laborRatesInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceClientRatesInfo.LaborRatesInfo")))
@interface ScmSdkInvoiceClientRatesInfoLaborRatesInfo : ScmSdkBase
- (instancetype)initWithSkillLevel:(ScmSdkInvoiceClientSkillLevel *)skillLevel laborRates:(NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate *> *)laborRates __attribute__((swift_name("init(skillLevel:laborRates:)"))) __attribute__((objc_designated_initializer));

/**
 * Client Skill level.
 */
- (ScmSdkInvoiceClientSkillLevel *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate *> *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceClientRatesInfoLaborRatesInfo *)doCopySkillLevel:(ScmSdkInvoiceClientSkillLevel *)skillLevel laborRates:(NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate *> *)laborRates __attribute__((swift_name("doCopy(skillLevel:laborRates:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate *> *laborRates __attribute__((swift_name("laborRates")));

/**
 * Client Skill level.
 */
@property (readonly) ScmSdkInvoiceClientSkillLevel *skillLevel __attribute__((swift_name("skillLevel")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceClientRatesInfo.LaborRatesInfoLaborRate")))
@interface ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate : ScmSdkBase
- (instancetype)initWithLaborType:(ScmSdkInvoiceLaborType *)laborType rate:(float)rate isMismatched:(BOOL)isMismatched __attribute__((swift_name("init(laborType:rate:isMismatched:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkInvoiceLaborType *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceClientRatesInfoLaborRatesInfoLaborRate *)doCopyLaborType:(ScmSdkInvoiceLaborType *)laborType rate:(float)rate isMismatched:(BOOL)isMismatched __attribute__((swift_name("doCopy(laborType:rate:isMismatched:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));
@property (readonly) ScmSdkInvoiceLaborType *laborType __attribute__((swift_name("laborType")));
@property (readonly) float rate __attribute__((swift_name("rate")));
@end


/**
 * Invoice currency.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceCurrency")))
@interface ScmSdkInvoiceCurrency : ScmSdkBase
- (instancetype)initWithAlphabeticalCode:(NSString *)alphabeticalCode decimalPlaces:(int32_t)decimalPlaces __attribute__((swift_name("init(alphabeticalCode:decimalPlaces:)"))) __attribute__((objc_designated_initializer));

/**
 * Currency code.
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Number of decimal places.
 */
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Invoice currency.
 */
- (ScmSdkInvoiceCurrency *)doCopyAlphabeticalCode:(NSString *)alphabeticalCode decimalPlaces:(int32_t)decimalPlaces __attribute__((swift_name("doCopy(alphabeticalCode:decimalPlaces:)")));

/**
 * Invoice currency.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Invoice currency.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Invoice currency.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Currency code.
 */
@property (readonly) NSString *alphabeticalCode __attribute__((swift_name("alphabeticalCode")));

/**
 * Number of decimal places.
 */
@property (readonly) int32_t decimalPlaces __attribute__((swift_name("decimalPlaces")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFreightInfo")))
@interface ScmSdkInvoiceFreightInfo : ScmSdkBase
- (instancetype)initWithFreights:(NSArray<ScmSdkInvoiceFreightInfoInvoiceFreight *> *)freights totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("init(freights:totalAmount:taxPercent:taxAmount:glCode:)"))) __attribute__((objc_designated_initializer));

/**
 *  Freights.
 */
- (NSArray<ScmSdkInvoiceFreightInfoInvoiceFreight *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Freights total amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax percent.
 */
- (ScmSdkFloat * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax amount.
 */
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Gl code.
 */
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceFreightInfo *)doCopyFreights:(NSArray<ScmSdkInvoiceFreightInfoInvoiceFreight *> *)freights totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("doCopy(freights:totalAmount:taxPercent:taxAmount:glCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Freights.
 */
@property (readonly) NSArray<ScmSdkInvoiceFreightInfoInvoiceFreight *> *freights __attribute__((swift_name("freights")));

/**
 * Gl code.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));

/**
 *  Tax amount.
 */
@property (readonly) ScmSdkFloat * _Nullable taxAmount __attribute__((swift_name("taxAmount")));

/**
 *  Tax percent.
 */
@property (readonly) ScmSdkFloat * _Nullable taxPercent __attribute__((swift_name("taxPercent")));

/**
 *  Freights total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFreightInfo.InvoiceFreight")))
@interface ScmSdkInvoiceFreightInfoInvoiceFreight : ScmSdkBase
- (instancetype)initWithGlCode:(NSString *)glCode amount:(float)amount __attribute__((swift_name("init(glCode:amount:)"))) __attribute__((objc_designated_initializer));

/**
 *  Gl Code.
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceFreightInfoInvoiceFreight *)doCopyGlCode:(NSString *)glCode amount:(float)amount __attribute__((swift_name("doCopy(glCode:amount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Amount.
 */
@property (readonly) float amount __attribute__((swift_name("amount")));

/**
 *  Gl Code.
 */
@property (readonly) NSString *glCode __attribute__((swift_name("glCode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLaborInfo")))
@interface ScmSdkInvoiceLaborInfo : ScmSdkBase
- (instancetype)initWithLabors:(NSArray<ScmSdkInvoiceLaborInfoInvoiceLabor *> *)labors totalHours:(float)totalHours totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount isMismatched:(BOOL)isMismatched glCode:(NSString * _Nullable)glCode __attribute__((swift_name("init(labors:totalHours:totalAmount:taxPercent:taxAmount:isMismatched:glCode:)"))) __attribute__((objc_designated_initializer));

/**
 *  Labors list.
 */
- (NSArray<ScmSdkInvoiceLaborInfoInvoiceLabor *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Labors total hours.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Labors total amount.
 */
- (float)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax percent.
 */
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax amount.
 */
- (ScmSdkFloat * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Is mismatched.
 */
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Gl code.
 */
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceLaborInfo *)doCopyLabors:(NSArray<ScmSdkInvoiceLaborInfoInvoiceLabor *> *)labors totalHours:(float)totalHours totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount isMismatched:(BOOL)isMismatched glCode:(NSString * _Nullable)glCode __attribute__((swift_name("doCopy(labors:totalHours:totalAmount:taxPercent:taxAmount:isMismatched:glCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Gl code.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));

/**
 * Is mismatched.
 */
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));

/**
 *  Labors list.
 */
@property (readonly) NSArray<ScmSdkInvoiceLaborInfoInvoiceLabor *> *labors __attribute__((swift_name("labors")));

/**
 *  Tax amount.
 */
@property (readonly) ScmSdkFloat * _Nullable taxAmount __attribute__((swift_name("taxAmount")));

/**
 *  Tax percent.
 */
@property (readonly) ScmSdkFloat * _Nullable taxPercent __attribute__((swift_name("taxPercent")));

/**
 *  Labors total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));

/**
 *  Labors total hours.
 */
@property (readonly) float totalHours __attribute__((swift_name("totalHours")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLaborInfo.InvoiceLabor")))
@interface ScmSdkInvoiceLaborInfoInvoiceLabor : ScmSdkBase
- (instancetype)initWithId:(int32_t)id glCode:(NSString * _Nullable)glCode skillLevel:(ScmSdkInvoiceClientSkillLevel *)skillLevel laborType:(ScmSdkInvoiceLaborType *)laborType numOfTech:(int32_t)numOfTech hourlyRate:(float)hourlyRate hours:(float)hours amount:(float)amount isOffShore:(ScmSdkBoolean * _Nullable)isOffShore serviceType:(ScmSdkInt * _Nullable)serviceType cityPerformed:(NSString * _Nullable)cityPerformed rateDiscrepancyReason:(NSString * _Nullable)rateDiscrepancyReason agreedRate:(ScmSdkFloat * _Nullable)agreedRate isMismatched:(BOOL)isMismatched __attribute__((swift_name("init(id:glCode:skillLevel:laborType:numOfTech:hourlyRate:hours:amount:isOffShore:serviceType:cityPerformed:rateDiscrepancyReason:agreedRate:isMismatched:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Reasons for Invoice Rates Mismatch is a feature of Decision Engine that adds additional validation to the invoicing process.
 * With this feature turned on, when a provider submits an invoice where the labor rates are above or below the agreed upon rates,
 * they are prompted to provide a reason for the discrepancy in rates
 *
 *  @see [link](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/570917095/Reasons+for+Rates+Mismatch)
 */
- (NSString * _Nullable)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Client Skill level.
 */
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceClientSkillLevel *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceLaborType *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceLaborInfoInvoiceLabor *)doCopyId:(int32_t)id glCode:(NSString * _Nullable)glCode skillLevel:(ScmSdkInvoiceClientSkillLevel *)skillLevel laborType:(ScmSdkInvoiceLaborType *)laborType numOfTech:(int32_t)numOfTech hourlyRate:(float)hourlyRate hours:(float)hours amount:(float)amount isOffShore:(ScmSdkBoolean * _Nullable)isOffShore serviceType:(ScmSdkInt * _Nullable)serviceType cityPerformed:(NSString * _Nullable)cityPerformed rateDiscrepancyReason:(NSString * _Nullable)rateDiscrepancyReason agreedRate:(ScmSdkFloat * _Nullable)agreedRate isMismatched:(BOOL)isMismatched __attribute__((swift_name("doCopy(id:glCode:skillLevel:laborType:numOfTech:hourlyRate:hours:amount:isOffShore:serviceType:cityPerformed:rateDiscrepancyReason:agreedRate:isMismatched:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkFloat * _Nullable agreedRate __attribute__((swift_name("agreedRate")));
@property (readonly) float amount __attribute__((swift_name("amount")));
@property (readonly) NSString * _Nullable cityPerformed __attribute__((swift_name("cityPerformed")));

/**
 * Client Skill level.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));
@property (readonly) float hourlyRate __attribute__((swift_name("hourlyRate")));
@property (readonly) float hours __attribute__((swift_name("hours")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));
@property (readonly) ScmSdkBoolean * _Nullable isOffShore __attribute__((swift_name("isOffShore")));
@property (readonly) ScmSdkInvoiceLaborType *laborType __attribute__((swift_name("laborType")));
@property (readonly) int32_t numOfTech __attribute__((swift_name("numOfTech")));

/**
 * Reasons for Invoice Rates Mismatch is a feature of Decision Engine that adds additional validation to the invoicing process.
 * With this feature turned on, when a provider submits an invoice where the labor rates are above or below the agreed upon rates,
 * they are prompted to provide a reason for the discrepancy in rates
 *
 *  @see [link](https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/570917095/Reasons+for+Rates+Mismatch)
 */
@property (readonly) NSString * _Nullable rateDiscrepancyReason __attribute__((swift_name("rateDiscrepancyReason")));
@property (readonly) ScmSdkInt * _Nullable serviceType __attribute__((swift_name("serviceType")));
@property (readonly) ScmSdkInvoiceClientSkillLevel *skillLevel __attribute__((swift_name("skillLevel")));
@end


/**
 * Line Item Invoice by itemizing labor, materials, and other
 * Line Items configuration mandates service providers to create a Line Item Invoice
 * by itemizing labor, materials, and other charges
 * for the trades or categories that you specify.
 * When configured, all service providers servicing the selected trades
 * and categories are required to break down labor, material,
 * or other costs on every invoice generated.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLineItems")))
@interface ScmSdkInvoiceLineItems : ScmSdkBase
- (instancetype)initWithLaborsInfo:(ScmSdkInvoiceLaborInfo * _Nullable)laborsInfo materialsInfo:(ScmSdkInvoiceMaterialInfo * _Nullable)materialsInfo travelsInfo:(ScmSdkInvoiceTravelInfo * _Nullable)travelsInfo othersInfo:(ScmSdkInvoiceOtherInfo * _Nullable)othersInfo freightsInfo:(ScmSdkInvoiceFreightInfo * _Nullable)freightsInfo __attribute__((swift_name("init(laborsInfo:materialsInfo:travelsInfo:othersInfo:freightsInfo:)"))) __attribute__((objc_designated_initializer));

/**
 *  Labors info.
 *
 */
- (ScmSdkInvoiceLaborInfo * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Materials info.
 */
- (ScmSdkInvoiceMaterialInfo * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Travels info.
 */
- (ScmSdkInvoiceTravelInfo * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  The Other tab appears on the page for creating an invoice only
 *  if your client requires you to itemize other costs and has configured necessary settings.
 */
- (ScmSdkInvoiceOtherInfo * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Freights info.
 */
- (ScmSdkInvoiceFreightInfo * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Line Item Invoice by itemizing labor, materials, and other
 * Line Items configuration mandates service providers to create a Line Item Invoice
 * by itemizing labor, materials, and other charges
 * for the trades or categories that you specify.
 * When configured, all service providers servicing the selected trades
 * and categories are required to break down labor, material,
 * or other costs on every invoice generated.
 */
- (ScmSdkInvoiceLineItems *)doCopyLaborsInfo:(ScmSdkInvoiceLaborInfo * _Nullable)laborsInfo materialsInfo:(ScmSdkInvoiceMaterialInfo * _Nullable)materialsInfo travelsInfo:(ScmSdkInvoiceTravelInfo * _Nullable)travelsInfo othersInfo:(ScmSdkInvoiceOtherInfo * _Nullable)othersInfo freightsInfo:(ScmSdkInvoiceFreightInfo * _Nullable)freightsInfo __attribute__((swift_name("doCopy(laborsInfo:materialsInfo:travelsInfo:othersInfo:freightsInfo:)")));

/**
 * Line Item Invoice by itemizing labor, materials, and other
 * Line Items configuration mandates service providers to create a Line Item Invoice
 * by itemizing labor, materials, and other charges
 * for the trades or categories that you specify.
 * When configured, all service providers servicing the selected trades
 * and categories are required to break down labor, material,
 * or other costs on every invoice generated.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Line Item Invoice by itemizing labor, materials, and other
 * Line Items configuration mandates service providers to create a Line Item Invoice
 * by itemizing labor, materials, and other charges
 * for the trades or categories that you specify.
 * When configured, all service providers servicing the selected trades
 * and categories are required to break down labor, material,
 * or other costs on every invoice generated.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Line Item Invoice by itemizing labor, materials, and other
 * Line Items configuration mandates service providers to create a Line Item Invoice
 * by itemizing labor, materials, and other charges
 * for the trades or categories that you specify.
 * When configured, all service providers servicing the selected trades
 * and categories are required to break down labor, material,
 * or other costs on every invoice generated.
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Freights info.
 */
@property (readonly) ScmSdkInvoiceFreightInfo * _Nullable freightsInfo __attribute__((swift_name("freightsInfo")));

/**
 *  Labors info.
 *
 */
@property (readonly) ScmSdkInvoiceLaborInfo * _Nullable laborsInfo __attribute__((swift_name("laborsInfo")));

/**
 *  Materials info.
 */
@property (readonly) ScmSdkInvoiceMaterialInfo * _Nullable materialsInfo __attribute__((swift_name("materialsInfo")));

/**
 *  The Other tab appears on the page for creating an invoice only
 *  if your client requires you to itemize other costs and has configured necessary settings.
 */
@property (readonly) ScmSdkInvoiceOtherInfo * _Nullable othersInfo __attribute__((swift_name("othersInfo")));

/**
 *  Travels info.
 */
@property (readonly) ScmSdkInvoiceTravelInfo * _Nullable travelsInfo __attribute__((swift_name("travelsInfo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceMaterialInfo")))
@interface ScmSdkInvoiceMaterialInfo : ScmSdkBase
- (instancetype)initWithMaterials:(NSArray<ScmSdkInvoiceMaterialInfoInvoiceMaterial *> *)materials totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("init(materials:totalAmount:taxPercent:taxAmount:glCode:)"))) __attribute__((objc_designated_initializer));

/**
 *  Material list.
 */
- (NSArray<ScmSdkInvoiceMaterialInfoInvoiceMaterial *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Material total amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax percent.
 */
- (ScmSdkFloat * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax amount.
 */
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Gl code.
 */
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceMaterialInfo *)doCopyMaterials:(NSArray<ScmSdkInvoiceMaterialInfoInvoiceMaterial *> *)materials totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("doCopy(materials:totalAmount:taxPercent:taxAmount:glCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Gl code.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));

/**
 *  Material list.
 */
@property (readonly) NSArray<ScmSdkInvoiceMaterialInfoInvoiceMaterial *> *materials __attribute__((swift_name("materials")));

/**
 *  Tax amount.
 */
@property (readonly) ScmSdkFloat * _Nullable taxAmount __attribute__((swift_name("taxAmount")));

/**
 *  Tax percent.
 */
@property (readonly) ScmSdkFloat * _Nullable taxPercent __attribute__((swift_name("taxPercent")));

/**
 *  Material total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceMaterialInfo.InvoiceMaterial")))
@interface ScmSdkInvoiceMaterialInfoInvoiceMaterial : ScmSdkBase
- (instancetype)initWithId:(int32_t)id glCode:(NSString * _Nullable)glCode description:(NSString *)description partNum:(NSString *)partNum unitType:(ScmSdkInvoiceChargeUnitType *)unitType unitPrice:(float)unitPrice quantity:(float)quantity markUpPercent:(ScmSdkFloat * _Nullable)markUpPercent agreedMarkUpPercent:(ScmSdkFloat * _Nullable)agreedMarkUpPercent markUpDiscrepancyReason:(NSString * _Nullable)markUpDiscrepancyReason partName:(NSString * _Nullable)partName isMarkUpDiscrepancy:(BOOL)isMarkUpDiscrepancy agreedPartPrice:(ScmSdkFloat * _Nullable)agreedPartPrice isPartPriceDiscrepancy:(BOOL)isPartPriceDiscrepancy amount:(float)amount isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch partPriceDiscrepancyReason:(NSString *)partPriceDiscrepancyReason priceDiscrepancyReason:(NSString *)priceDiscrepancyReason __attribute__((swift_name("init(id:glCode:description:partNum:unitType:unitPrice:quantity:markUpPercent:agreedMarkUpPercent:markUpDiscrepancyReason:partName:isMarkUpDiscrepancy:agreedPartPrice:isPartPriceDiscrepancy:amount:isMismatched:reasonForMismatch:partPriceDiscrepancyReason:priceDiscrepancyReason:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceChargeUnitType *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceMaterialInfoInvoiceMaterial *)doCopyId:(int32_t)id glCode:(NSString * _Nullable)glCode description:(NSString *)description partNum:(NSString *)partNum unitType:(ScmSdkInvoiceChargeUnitType *)unitType unitPrice:(float)unitPrice quantity:(float)quantity markUpPercent:(ScmSdkFloat * _Nullable)markUpPercent agreedMarkUpPercent:(ScmSdkFloat * _Nullable)agreedMarkUpPercent markUpDiscrepancyReason:(NSString * _Nullable)markUpDiscrepancyReason partName:(NSString * _Nullable)partName isMarkUpDiscrepancy:(BOOL)isMarkUpDiscrepancy agreedPartPrice:(ScmSdkFloat * _Nullable)agreedPartPrice isPartPriceDiscrepancy:(BOOL)isPartPriceDiscrepancy amount:(float)amount isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch partPriceDiscrepancyReason:(NSString *)partPriceDiscrepancyReason priceDiscrepancyReason:(NSString *)priceDiscrepancyReason __attribute__((swift_name("doCopy(id:glCode:description:partNum:unitType:unitPrice:quantity:markUpPercent:agreedMarkUpPercent:markUpDiscrepancyReason:partName:isMarkUpDiscrepancy:agreedPartPrice:isPartPriceDiscrepancy:amount:isMismatched:reasonForMismatch:partPriceDiscrepancyReason:priceDiscrepancyReason:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkFloat * _Nullable agreedMarkUpPercent __attribute__((swift_name("agreedMarkUpPercent")));
@property (readonly) ScmSdkFloat * _Nullable agreedPartPrice __attribute__((swift_name("agreedPartPrice")));
@property (readonly) float amount __attribute__((swift_name("amount")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isMarkUpDiscrepancy __attribute__((swift_name("isMarkUpDiscrepancy")));
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));
@property (readonly) BOOL isPartPriceDiscrepancy __attribute__((swift_name("isPartPriceDiscrepancy")));
@property (readonly) NSString * _Nullable markUpDiscrepancyReason __attribute__((swift_name("markUpDiscrepancyReason")));
@property (readonly) ScmSdkFloat * _Nullable markUpPercent __attribute__((swift_name("markUpPercent")));
@property (readonly) NSString * _Nullable partName __attribute__((swift_name("partName")));
@property (readonly) NSString *partNum __attribute__((swift_name("partNum")));
@property (readonly) NSString *partPriceDiscrepancyReason __attribute__((swift_name("partPriceDiscrepancyReason")));
@property (readonly) NSString *priceDiscrepancyReason __attribute__((swift_name("priceDiscrepancyReason")));
@property (readonly) float quantity __attribute__((swift_name("quantity")));
@property (readonly) NSString *reasonForMismatch __attribute__((swift_name("reasonForMismatch")));
@property (readonly) float unitPrice __attribute__((swift_name("unitPrice")));
@property (readonly) ScmSdkInvoiceChargeUnitType *unitType __attribute__((swift_name("unitType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceOtherInfo")))
@interface ScmSdkInvoiceOtherInfo : ScmSdkBase
- (instancetype)initWithOthers:(NSArray<ScmSdkInvoiceOtherInfoInvoiceOther *> *)others totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("init(others:totalAmount:taxPercent:taxAmount:glCode:)"))) __attribute__((objc_designated_initializer));

/**
 *  Other list.
 */
- (NSArray<ScmSdkInvoiceOtherInfoInvoiceOther *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Other total amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax percent.
 */
- (ScmSdkFloat * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax amount.
 */
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Gl code.
 */
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceOtherInfo *)doCopyOthers:(NSArray<ScmSdkInvoiceOtherInfoInvoiceOther *> *)others totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("doCopy(others:totalAmount:taxPercent:taxAmount:glCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Gl code.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));

/**
 *  Other list.
 */
@property (readonly) NSArray<ScmSdkInvoiceOtherInfoInvoiceOther *> *others __attribute__((swift_name("others")));

/**
 *  Tax amount.
 */
@property (readonly) ScmSdkFloat * _Nullable taxAmount __attribute__((swift_name("taxAmount")));

/**
 *  Tax percent.
 */
@property (readonly) ScmSdkFloat * _Nullable taxPercent __attribute__((swift_name("taxPercent")));

/**
 *  Other total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceOtherInfo.InvoiceOther")))
@interface ScmSdkInvoiceOtherInfoInvoiceOther : ScmSdkBase
- (instancetype)initWithId:(int32_t)id glCode:(NSString * _Nullable)glCode invoiceId:(int32_t)invoiceId description:(NSString *)description type:(NSString *)type amount:(float)amount isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch __attribute__((swift_name("init(id:glCode:invoiceId:description:type:amount:isMismatched:reasonForMismatch:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceOtherInfoInvoiceOther *)doCopyId:(int32_t)id glCode:(NSString * _Nullable)glCode invoiceId:(int32_t)invoiceId description:(NSString *)description type:(NSString *)type amount:(float)amount isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch __attribute__((swift_name("doCopy(id:glCode:invoiceId:description:type:amount:isMismatched:reasonForMismatch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float amount __attribute__((swift_name("amount")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t invoiceId __attribute__((swift_name("invoiceId")));
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));
@property (readonly) NSString *reasonForMismatch __attribute__((swift_name("reasonForMismatch")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceRejectionReason")))
@interface ScmSdkInvoiceRejectionReason : ScmSdkBase
- (instancetype)initWithId:(int32_t)id subscriberId:(int32_t)subscriberId description:(NSString *)description retired:(BOOL)retired reasonType:(ScmSdkInvoiceRejectionReasonType *)reasonType isCommentRequired:(BOOL)isCommentRequired __attribute__((swift_name("init(id:subscriberId:description:retired:reasonType:isCommentRequired:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceRejectionReasonType *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceRejectionReason *)doCopyId:(int32_t)id subscriberId:(int32_t)subscriberId description:(NSString *)description retired:(BOOL)retired reasonType:(ScmSdkInvoiceRejectionReasonType *)reasonType isCommentRequired:(BOOL)isCommentRequired __attribute__((swift_name("doCopy(id:subscriberId:description:retired:reasonType:isCommentRequired:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isCommentRequired __attribute__((swift_name("isCommentRequired")));
@property (readonly) ScmSdkInvoiceRejectionReasonType *reasonType __attribute__((swift_name("reasonType")));
@property (readonly) BOOL retired __attribute__((swift_name("retired")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTaxInfo")))
@interface ScmSdkInvoiceTaxInfo : ScmSdkBase
- (instancetype)initWithTotalAmount:(float)totalAmount name:(NSString * _Nullable)name taxItems:(NSArray<ScmSdkInvoiceTaxItem *> *)taxItems __attribute__((swift_name("init(totalAmount:name:taxItems:)"))) __attribute__((objc_designated_initializer));

/**
 *  The sum of all taxes for invoice.
 */
- (float)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax name.
 */
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInvoiceTaxItem *> *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTaxInfo *)doCopyTotalAmount:(float)totalAmount name:(NSString * _Nullable)name taxItems:(NSArray<ScmSdkInvoiceTaxItem *> *)taxItems __attribute__((swift_name("doCopy(totalAmount:name:taxItems:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Tax name.
 */
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSArray<ScmSdkInvoiceTaxItem *> *taxItems __attribute__((swift_name("taxItems")));

/**
 *  The sum of all taxes for invoice.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTaxItem")))
@interface ScmSdkInvoiceTaxItem : ScmSdkBase
- (instancetype)initWithGlCode:(NSString * _Nullable)glCode amount:(float)amount __attribute__((swift_name("init(glCode:amount:)"))) __attribute__((objc_designated_initializer));

/**
 *  Invoice tax glCode.
 */
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Invoice tax amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTaxItem *)doCopyGlCode:(NSString * _Nullable)glCode amount:(float)amount __attribute__((swift_name("doCopy(glCode:amount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 *  Invoice tax amount.
 */
@property (readonly) float amount __attribute__((swift_name("amount")));

/**
 *  Invoice tax glCode.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));
@end


/**
 * Tax Validation - process of getting valid tax from invoice using 3rd party services.
 * if the feature flag UseTaxValidation, TaxDisputeReasonFieldMandatory are enabled,
 * then the third-party application compares
 * the taxes specified in the invoice with those taxes
 * that should be applied to this invoice in a certain region.
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/PM/pages/1145176232/Tax+Validation+Knowledge">Tax Validation Knowledge</a>
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTaxValidationInfo")))
@interface ScmSdkInvoiceTaxValidationInfo : ScmSdkBase
- (instancetype)initWithSalesUseTaxes:(NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTax *> *)salesUseTaxes isMismatched:(BOOL)isMismatched mismatchReason:(NSString *)mismatchReason totalSalesTax:(float)totalSalesTax totalUseTax:(float)totalUseTax __attribute__((swift_name("init(salesUseTaxes:isMismatched:mismatchReason:totalSalesTax:totalUseTax:)"))) __attribute__((objc_designated_initializer));

/**
 * Tax info list.
 */
- (NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTax *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Is mismatched.
 */
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Mismatch reason.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Total Sales Tax - subscriber pays this.
 */
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Total Use Tax - Provider pays this.
 */
- (float)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Tax Validation - process of getting valid tax from invoice using 3rd party services.
 * if the feature flag UseTaxValidation, TaxDisputeReasonFieldMandatory are enabled,
 * then the third-party application compares
 * the taxes specified in the invoice with those taxes
 * that should be applied to this invoice in a certain region.
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/PM/pages/1145176232/Tax+Validation+Knowledge">Tax Validation Knowledge</a>
 */
- (ScmSdkInvoiceTaxValidationInfo *)doCopySalesUseTaxes:(NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTax *> *)salesUseTaxes isMismatched:(BOOL)isMismatched mismatchReason:(NSString *)mismatchReason totalSalesTax:(float)totalSalesTax totalUseTax:(float)totalUseTax __attribute__((swift_name("doCopy(salesUseTaxes:isMismatched:mismatchReason:totalSalesTax:totalUseTax:)")));

/**
 * Tax Validation - process of getting valid tax from invoice using 3rd party services.
 * if the feature flag UseTaxValidation, TaxDisputeReasonFieldMandatory are enabled,
 * then the third-party application compares
 * the taxes specified in the invoice with those taxes
 * that should be applied to this invoice in a certain region.
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/PM/pages/1145176232/Tax+Validation+Knowledge">Tax Validation Knowledge</a>
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Tax Validation - process of getting valid tax from invoice using 3rd party services.
 * if the feature flag UseTaxValidation, TaxDisputeReasonFieldMandatory are enabled,
 * then the third-party application compares
 * the taxes specified in the invoice with those taxes
 * that should be applied to this invoice in a certain region.
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/PM/pages/1145176232/Tax+Validation+Knowledge">Tax Validation Knowledge</a>
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Tax Validation - process of getting valid tax from invoice using 3rd party services.
 * if the feature flag UseTaxValidation, TaxDisputeReasonFieldMandatory are enabled,
 * then the third-party application compares
 * the taxes specified in the invoice with those taxes
 * that should be applied to this invoice in a certain region.
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/PM/pages/1145176232/Tax+Validation+Knowledge">Tax Validation Knowledge</a>
 */
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Is mismatched.
 */
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));

/**
 * Mismatch reason.
 */
@property (readonly) NSString *mismatchReason __attribute__((swift_name("mismatchReason")));

/**
 * Tax info list.
 */
@property (readonly) NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTax *> *salesUseTaxes __attribute__((swift_name("salesUseTaxes")));

/**
 * Total Sales Tax - subscriber pays this.
 */
@property (readonly) float totalSalesTax __attribute__((swift_name("totalSalesTax")));

/**
 * Total Use Tax - Provider pays this.
 */
@property (readonly) float totalUseTax __attribute__((swift_name("totalUseTax")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTaxValidationInfo.SalesUseTax")))
@interface ScmSdkInvoiceTaxValidationInfoSalesUseTax : ScmSdkBase
- (instancetype)initWithId:(int32_t)id description:(NSString *)description taxableAmount:(float)taxableAmount totalAmount:(float)totalAmount taxCode:(NSString *)taxCode jurisTaxes:(NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax *> *)jurisTaxes __attribute__((swift_name("init(id:description:taxableAmount:totalAmount:taxCode:jurisTaxes:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax *> *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTaxValidationInfoSalesUseTax *)doCopyId:(int32_t)id description:(NSString *)description taxableAmount:(float)taxableAmount totalAmount:(float)totalAmount taxCode:(NSString *)taxCode jurisTaxes:(NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax *> *)jurisTaxes __attribute__((swift_name("doCopy(id:description:taxableAmount:totalAmount:taxCode:jurisTaxes:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSArray<ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax *> *jurisTaxes __attribute__((swift_name("jurisTaxes")));
@property (readonly) NSString *taxCode __attribute__((swift_name("taxCode")));
@property (readonly) float taxableAmount __attribute__((swift_name("taxableAmount")));
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTaxValidationInfo.SalesUseTaxJurisTax")))
@interface ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax : ScmSdkBase
- (instancetype)initWithName:(NSString *)name type:(NSString *)type rate:(float)rate amount:(float)amount __attribute__((swift_name("init(name:type:rate:amount:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTaxValidationInfoSalesUseTaxJurisTax *)doCopyName:(NSString *)name type:(NSString *)type rate:(float)rate amount:(float)amount __attribute__((swift_name("doCopy(name:type:rate:amount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) float amount __attribute__((swift_name("amount")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) float rate __attribute__((swift_name("rate")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end


/**
 * A Trade is a bucket that work orders are placed in for further categorization.
 * Trades are required to create work orders, and are also used for reporting and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556531849/Managing+Trades">Managing Trades</a>
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTrade")))
@interface ScmSdkInvoiceTrade : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * A Trade is a bucket that work orders are placed in for further categorization.
 * Trades are required to create work orders, and are also used for reporting and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556531849/Managing+Trades">Managing Trades</a>
 */
- (ScmSdkInvoiceTrade *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));

/**
 * A Trade is a bucket that work orders are placed in for further categorization.
 * Trades are required to create work orders, and are also used for reporting and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556531849/Managing+Trades">Managing Trades</a>
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * A Trade is a bucket that work orders are placed in for further categorization.
 * Trades are required to create work orders, and are also used for reporting and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556531849/Managing+Trades">Managing Trades</a>
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * A Trade is a bucket that work orders are placed in for further categorization.
 * Trades are required to create work orders, and are also used for reporting and GL Coding.
 *
 *  @see <a href="https://servicechannel.atlassian.net/wiki/spaces/SCU/pages/556531849/Managing+Trades">Managing Trades</a>
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTravelInfo")))
@interface ScmSdkInvoiceTravelInfo : ScmSdkBase
- (instancetype)initWithTravels:(NSArray<ScmSdkInvoiceTravelInfoInvoiceTravel *> *)travels totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("init(travels:totalAmount:taxPercent:taxAmount:glCode:)"))) __attribute__((objc_designated_initializer));

/**
 *  Travel list.
 */
- (NSArray<ScmSdkInvoiceTravelInfoInvoiceTravel *> *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Travel total amount.
 */
- (float)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax percent.
 */
- (ScmSdkFloat * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 *  Tax amount.
 */
- (ScmSdkFloat * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Gl code.
 */
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTravelInfo *)doCopyTravels:(NSArray<ScmSdkInvoiceTravelInfoInvoiceTravel *> *)travels totalAmount:(float)totalAmount taxPercent:(ScmSdkFloat * _Nullable)taxPercent taxAmount:(ScmSdkFloat * _Nullable)taxAmount glCode:(NSString * _Nullable)glCode __attribute__((swift_name("doCopy(travels:totalAmount:taxPercent:taxAmount:glCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Gl code.
 */
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));

/**
 *  Tax amount.
 */
@property (readonly) ScmSdkFloat * _Nullable taxAmount __attribute__((swift_name("taxAmount")));

/**
 *  Tax percent.
 */
@property (readonly) ScmSdkFloat * _Nullable taxPercent __attribute__((swift_name("taxPercent")));

/**
 *  Travel total amount.
 */
@property (readonly) float totalAmount __attribute__((swift_name("totalAmount")));

/**
 *  Travel list.
 */
@property (readonly) NSArray<ScmSdkInvoiceTravelInfoInvoiceTravel *> *travels __attribute__((swift_name("travels")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceTravelInfo.InvoiceTravel")))
@interface ScmSdkInvoiceTravelInfoInvoiceTravel : ScmSdkBase
- (instancetype)initWithId:(int32_t)id glCode:(NSString * _Nullable)glCode description:(NSString * _Nullable)description unitType:(ScmSdkInvoiceChargeUnitType *)unitType unitPrice:(ScmSdkFloat * _Nullable)unitPrice quantity:(ScmSdkFloat * _Nullable)quantity amount:(ScmSdkFloat * _Nullable)amount isOffShore:(ScmSdkBoolean * _Nullable)isOffShore isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch __attribute__((swift_name("init(id:glCode:description:unitType:unitPrice:quantity:amount:isOffShore:isMismatched:reasonForMismatch:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceChargeUnitType *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFloat * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkBoolean * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceTravelInfoInvoiceTravel *)doCopyId:(int32_t)id glCode:(NSString * _Nullable)glCode description:(NSString * _Nullable)description unitType:(ScmSdkInvoiceChargeUnitType *)unitType unitPrice:(ScmSdkFloat * _Nullable)unitPrice quantity:(ScmSdkFloat * _Nullable)quantity amount:(ScmSdkFloat * _Nullable)amount isOffShore:(ScmSdkBoolean * _Nullable)isOffShore isMismatched:(BOOL)isMismatched reasonForMismatch:(NSString *)reasonForMismatch __attribute__((swift_name("doCopy(id:glCode:description:unitType:unitPrice:quantity:amount:isOffShore:isMismatched:reasonForMismatch:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkFloat * _Nullable amount __attribute__((swift_name("amount")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) NSString * _Nullable glCode __attribute__((swift_name("glCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isMismatched __attribute__((swift_name("isMismatched")));
@property (readonly) ScmSdkBoolean * _Nullable isOffShore __attribute__((swift_name("isOffShore")));
@property (readonly) ScmSdkFloat * _Nullable quantity __attribute__((swift_name("quantity")));
@property (readonly) NSString *reasonForMismatch __attribute__((swift_name("reasonForMismatch")));
@property (readonly) ScmSdkFloat * _Nullable unitPrice __attribute__((swift_name("unitPrice")));
@property (readonly) ScmSdkInvoiceChargeUnitType *unitType __attribute__((swift_name("unitType")));
@end


/**
 * Information about user actions on the invoice.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceUserAction")))
@interface ScmSdkInvoiceUserAction : ScmSdkBase
- (instancetype)initWithUserName:(NSString * _Nullable)userName userId:(NSString * _Nullable)userId actionDate:(NSString *)actionDate __attribute__((swift_name("init(userName:userId:actionDate:)"))) __attribute__((objc_designated_initializer));
- (NSString * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Information about user actions on the invoice.
 */
- (ScmSdkInvoiceUserAction *)doCopyUserName:(NSString * _Nullable)userName userId:(NSString * _Nullable)userId actionDate:(NSString *)actionDate __attribute__((swift_name("doCopy(userName:userId:actionDate:)")));

/**
 * Information about user actions on the invoice.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Information about user actions on the invoice.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Information about user actions on the invoice.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *actionDate __attribute__((swift_name("actionDate")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable userName __attribute__((swift_name("userName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceWorkOrder")))
@interface ScmSdkInvoiceWorkOrder : ScmSdkBase
- (instancetype)initWithId:(int32_t)id trackingNumber:(NSString *)trackingNumber description:(NSString *)description completedDate:(NSString *)completedDate nte:(float)nte purchaseOrder:(NSString *)purchaseOrder calledBy:(ScmSdkInvoiceUserAction * _Nullable)calledBy __attribute__((swift_name("init(id:trackingNumber:description:completedDate:nte:purchaseOrder:calledBy:)"))) __attribute__((objc_designated_initializer));

/**
 * WO id
 */
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * WO tracking number
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * WO description.
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Completed Date.
 */
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * NTE (not-to-exceed) amount, is the maximum amount a provider may charge for the services listed on the work order.
 */
- (float)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Purchase order number.
 */
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Called by user.
 */
- (ScmSdkInvoiceUserAction * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceWorkOrder *)doCopyId:(int32_t)id trackingNumber:(NSString *)trackingNumber description:(NSString *)description completedDate:(NSString *)completedDate nte:(float)nte purchaseOrder:(NSString *)purchaseOrder calledBy:(ScmSdkInvoiceUserAction * _Nullable)calledBy __attribute__((swift_name("doCopy(id:trackingNumber:description:completedDate:nte:purchaseOrder:calledBy:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * Called by user.
 */
@property (readonly) ScmSdkInvoiceUserAction * _Nullable calledBy __attribute__((swift_name("calledBy")));

/**
 * Completed Date.
 */
@property (readonly) NSString *completedDate __attribute__((swift_name("completedDate")));

/**
 * WO description.
 */
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));

/**
 * WO id
 */
@property (readonly) int32_t id __attribute__((swift_name("id")));

/**
 * NTE (not-to-exceed) amount, is the maximum amount a provider may charge for the services listed on the work order.
 */
@property (readonly) float nte __attribute__((swift_name("nte")));

/**
 * Purchase order number.
 */
@property (readonly) NSString *purchaseOrder __attribute__((swift_name("purchaseOrder")));

/**
 * WO tracking number
 */
@property (readonly) NSString *trackingNumber __attribute__((swift_name("trackingNumber")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReviewsParams")))
@interface ScmSdkReviewsParams : ScmSdkBase
- (instancetype)initWithDeviceId:(NSString *)deviceId dateTime:(NSString *)dateTime __attribute__((swift_name("init(deviceId:dateTime:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkReviewsParamsCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkReviewsParams *)doCopyDeviceId:(NSString *)deviceId dateTime:(NSString *)dateTime __attribute__((swift_name("doCopy(deviceId:dateTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) NSString *deviceId __attribute__((swift_name("deviceId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReviewsParams.Companion")))
@interface ScmSdkReviewsParamsCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkReviewsParamsCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("ScmReview")))
@protocol ScmSdkScmReview
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLastLoginsIsSuccess:(ScmSdkBoolean * _Nullable)isSuccess forLastDays:(ScmSdkInt * _Nullable)forLastDays completionHandler:(void (^)(NSArray<ScmSdkSdkLastLogins *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getLastLogins(isSuccess:forLastDays:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReviewsDeviceId:(NSString *)deviceId forLastDays:(ScmSdkInt * _Nullable)forLastDays completionHandler:(void (^)(NSArray<ScmSdkSdkReviews *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReviews(deviceId:forLastDays:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postReviewReviewsParams:(ScmSdkReviewsParams *)reviewsParams completionHandler:(void (^)(ScmSdkSdkReviews * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postReview(reviewsParams:completionHandler:)")));
@end


/**
 * API for user authorization in various ways
 */
__attribute__((swift_name("ScmAuth")))
@protocol ScmSdkScmAuth
@required

/**
 * Authorization with Mobile Access Code using Jwt token type
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)authClientIdWithJwtTokenWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("authClientIdWithJwtToken(completionHandler:)")));

/**
 * Authorization with an authorization code
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)authWithAuthenticationCodeAuthenticationCode:(NSString *)authenticationCode redirectUri:(NSString *)redirectUri completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("authWithAuthenticationCode(authenticationCode:redirectUri:completionHandler:)")));

/**
 * Authorization after registering the client id
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)authWithClientIdWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("authWithClientId(completionHandler:)")));

/**
 * @param ssoId - SSO invitation key
 *
 * @return [SsoAuthState] - current SSO authorization status.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)authWithSSOIdSsoId:(NSString *)ssoId completionHandler:(void (^)(ScmSdkSsoAuthState * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("authWithSSOId(ssoId:completionHandler:)")));

/**
 * authorization with userId and passowrd
 *
 * @param [userId] - user login
 * @param [password] - user password
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)authWithUserIdUserId:(NSString *)userId password:(NSString *)password completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("authWithUserId(userId:password:completionHandler:)")));

/**
 * Update authorization token.
 * @param token Authorization token value.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changeAuthorizationTokenToken:(NSString *)token completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("changeAuthorizationToken(token:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getToken(completionHandler:)")));
@end


/**
 * Response for SSO authorization.
 */
__attribute__((swift_name("SsoAuthState")))
@interface ScmSdkSsoAuthState : ScmSdkBase
@end


/**
 * registration of the device's identifier was successful
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SsoAuthState.SsoClientRegistrationSuccessful")))
@interface ScmSdkSsoAuthStateSsoClientRegistrationSuccessful : ScmSdkSsoAuthState
+ (instancetype)alloc __attribute__((unavailable));

/**
 * registration of the device's identifier was successful
 */
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)ssoClientRegistrationSuccessful __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkSsoAuthStateSsoClientRegistrationSuccessful *shared __attribute__((swift_name("shared")));
@end


/**
 * should to redirect to the specified url
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SsoAuthState.SsoUrl")))
@interface ScmSdkSsoAuthStateSsoUrl : ScmSdkSsoAuthState
- (instancetype)initWithUrl:(NSString *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * should to redirect to the specified url
 */
- (ScmSdkSsoAuthStateSsoUrl *)doCopyUrl:(NSString *)url __attribute__((swift_name("doCopy(url:)")));

/**
 * should to redirect to the specified url
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * should to redirect to the specified url
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * should to redirect to the specified url
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end


/**
 * @param [token] current user token
 * @param [authorization] - value for http header
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmSdkToken")))
@interface ScmSdkScmSdkToken : ScmSdkBase
- (instancetype)initWithToken:(NSString *)token authorization:(NSString *)authorization __attribute__((swift_name("init(token:authorization:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * @param [token] current user token
 * @param [authorization] - value for http header
 */
- (ScmSdkScmSdkToken *)doCopyToken:(NSString *)token authorization:(NSString *)authorization __attribute__((swift_name("doCopy(token:authorization:)")));

/**
 * @param [token] current user token
 * @param [authorization] - value for http header
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * @param [token] current user token
 * @param [authorization] - value for http header
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * @param [token] current user token
 * @param [authorization] - value for http header
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *authorization __attribute__((swift_name("authorization")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@end


/**
 * Provides an API for working with the user token.
 */
__attribute__((swift_name("ScmToken")))
@protocol ScmSdkScmToken
@required

/**
 * Should use for support old api services in application.
 * @return [ScmSdkToken] - local token with authorization value for http header
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenWithCompletionHandler:(void (^)(ScmSdkScmSdkToken * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getToken(completionHandler:)")));

/**
 * @return [ScmSdkToken] - local token with authorization value for http header
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)refreshTokenWithCompletionHandler:(void (^)(ScmSdkScmSdkToken * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("refreshToken(completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Proposal")))
@interface ScmSdkProposal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id proposalNumber:(NSString *)proposalNumber createdDate:(NSString *)createdDate status:(NSString *)status workOrderId:(int32_t)workOrderId __attribute__((swift_name("init(id:proposalNumber:createdDate:status:workOrderId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProposal *)doCopyId:(int32_t)id proposalNumber:(NSString *)proposalNumber createdDate:(NSString *)createdDate status:(NSString *)status workOrderId:(int32_t)workOrderId __attribute__((swift_name("doCopy(id:proposalNumber:createdDate:status:workOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *createdDate __attribute__((swift_name("createdDate")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *proposalNumber __attribute__((swift_name("proposalNumber")));
@property (readonly) NSString *status __attribute__((swift_name("status")));
@property (readonly) int32_t workOrderId __attribute__((swift_name("workOrderId")));
@end

__attribute__((swift_name("ScmProposal")))
@protocol ScmSdkScmProposal
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProposalByWorkOrderIdWorkOrderId:(int32_t)workOrderId completionHandler:(void (^)(NSArray<ScmSdkProposal *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProposalByWorkOrderId(workOrderId:completionHandler:)")));
@end


/**
 * Common object for select item functionality.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SelectedItem")))
@interface ScmSdkSelectedItem : ScmSdkBase
- (instancetype)initWithId:(int32_t)id value:(NSString *)value isSelected:(BOOL)isSelected __attribute__((swift_name("init(id:value:isSelected:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * Common object for select item functionality.
 */
- (ScmSdkSelectedItem *)doCopyId:(int32_t)id value:(NSString *)value isSelected:(BOOL)isSelected __attribute__((swift_name("doCopy(id:value:isSelected:)")));

/**
 * Common object for select item functionality.
 */
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));

/**
 * Common object for select item functionality.
 */
- (NSUInteger)hash __attribute__((swift_name("hash()")));

/**
 * Common object for select item functionality.
 */
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSelected __attribute__((swift_name("isSelected")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ConfigurationBaseUrlsParams")))
@interface ScmSdkConfigurationBaseUrlsParams : ScmSdkBase
- (instancetype)initWithScUnAuthorizedUrl:(NSString *)scUnAuthorizedUrl scAuthorizationUrl:(NSString *)scAuthorizationUrl scAuthorizedUrl:(NSString *)scAuthorizedUrl jwtAuthorizationUrl:(NSString *)jwtAuthorizationUrl budgetInsightsUrl:(NSString *)budgetInsightsUrl __attribute__((swift_name("init(scUnAuthorizedUrl:scAuthorizationUrl:scAuthorizedUrl:jwtAuthorizationUrl:budgetInsightsUrl:)"))) __attribute__((objc_designated_initializer));

/**
 * base url to work as unauthorized user
 */
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * base url to retrieve access token
 */
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * base url to work then user authorized
 */
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));

/**
 * base url to retrieve JWT access token
 */
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkConfigurationBaseUrlsParams *)doCopyScUnAuthorizedUrl:(NSString *)scUnAuthorizedUrl scAuthorizationUrl:(NSString *)scAuthorizationUrl scAuthorizedUrl:(NSString *)scAuthorizedUrl jwtAuthorizationUrl:(NSString *)jwtAuthorizationUrl budgetInsightsUrl:(NSString *)budgetInsightsUrl __attribute__((swift_name("doCopy(scUnAuthorizedUrl:scAuthorizationUrl:scAuthorizedUrl:jwtAuthorizationUrl:budgetInsightsUrl:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *budgetInsightsUrl __attribute__((swift_name("budgetInsightsUrl")));

/**
 * base url to retrieve JWT access token
 */
@property (readonly) NSString *jwtAuthorizationUrl __attribute__((swift_name("jwtAuthorizationUrl"))) __attribute__((deprecated("if new schema from MSDK-351 will work correct must be removed")));

/**
 * base url to retrieve access token
 */
@property (readonly) NSString *scAuthorizationUrl __attribute__((swift_name("scAuthorizationUrl")));

/**
 * base url to work then user authorized
 */
@property (readonly) NSString *scAuthorizedUrl __attribute__((swift_name("scAuthorizedUrl")));

/**
 * base url to work as unauthorized user
 */
@property (readonly) NSString *scUnAuthorizedUrl __attribute__((swift_name("scUnAuthorizedUrl")));
@end


/**
 * API for setting basic settings in the SDK
 */
__attribute__((swift_name("ScmTools")))
@protocol ScmSdkScmTools
@required

/**
 * For the SDK to work correctly with the API, you need to add the urls
 *
 * [baseUrls] - base urls to use in SDK.
 *
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setupUrlsBaseUrls:(ScmSdkConfigurationBaseUrlsParams *)baseUrls completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("setupUrls(baseUrls:completionHandler:)")));
@end

__attribute__((swift_name("Closeable")))
@protocol ScmSdkCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreFlow")))
@protocol ScmSdkKotlinx_coroutines_coreFlow
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<ScmSdkKotlinx_coroutines_coreFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScFlow")))
@interface ScmSdkScFlow<T> : ScmSdkBase <ScmSdkKotlinx_coroutines_coreFlow>

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)collectCollector:(id<ScmSdkKotlinx_coroutines_coreFlowCollector>)collector completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("collect(collector:completionHandler:)")));
- (id<ScmSdkCloseable>)watchBlock:(void (^)(T))block __attribute__((swift_name("watch(block:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineScope")))
@protocol ScmSdkKotlinx_coroutines_coreCoroutineScope
@required
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for user authorization in various ways
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmAuthInteractor")))
@interface ScmSdkScmAuthInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScAuth:(id<ScmSdkScmAuth>)scAuth __attribute__((swift_name("init(scAuth:)"))) __attribute__((objc_designated_initializer));

/**
 * Authorization with Mobile Access Code using Jwt token type
 */
- (void)authClientIdWithJwtTokenCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("authClientIdWithJwtToken(callback:)")));

/**
 * Authorization with an authorization code
 */
- (void)authWithAuthenticationCodeAuthenticationCode:(NSString *)authenticationCode redirectUri:(NSString *)redirectUri callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("authWithAuthenticationCode(authenticationCode:redirectUri:callback:)")));

/**
 * Authorization after registering the client id
 */
- (void)authWithClientIdCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("authWithClientId(callback:)")));

/**
 * @param ssoId - SSO invitation key
 *
 * @return [SsoAuthState] - current SSO authorization status.
 */
- (void)authWithSSOIdSsoId:(NSString *)ssoId callback:(void (^)(ScmSdkScResult<ScmSdkSsoAuthState *> *))callback __attribute__((swift_name("authWithSSOId(ssoId:callback:)")));

/**
 * Authorization with userId and password
 *
 * @param [userId] - user login
 * @param [password] - user password
 */
- (void)authWithUserIdUserId:(NSString *)userId password:(NSString *)password callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("authWithUserId(userId:password:callback:)")));

/**
 * Update authorization token.
 * @param token Authorization token value.
 */
- (void)updateAuthTokenToken:(NSString *)token callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateAuthToken(token:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Implements work with an authorized user.
 *
 * If the user is not logged in throws an exception
 * @see[com.servicechannel.scmsdk.api.exceptions.UserFeatureException.AuthorizedUserOnlyException]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmAuthorizedUserInteractor")))
@interface ScmSdkScmAuthorizedUserInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScUser:(id<ScmSdkScmAuthorizedUser>)scUser __attribute__((swift_name("init(scUser:)"))) __attribute__((objc_designated_initializer));
- (void)getDefaultUserSetupIdCallback:(void (^)(ScmSdkScResult<ScmSdkInt *> *))callback __attribute__((swift_name("getDefaultUserSetupId(callback:)")));
- (void)getFeedbackDashboardSettingsCallback:(void (^)(ScmSdkScResult<ScmSdkFeedbackDashboardSettings *> *))callback __attribute__((swift_name("getFeedbackDashboardSettings(callback:)")));

/**
 * Get url for SAML single logout if user logged in with SSO
 *
 * @return url to open in browser for SAML Single Logout
 */
- (void)getUrlForSamlLogoutCallback:(void (^)(ScmSdkScResult<NSString *> *))callback __attribute__((swift_name("getUrlForSamlLogout(callback:)")));

/**
 * Only needed to maintain legacy customers.
 * Try to user [subscribeUser] method
 *
 * @return id of user.
 */
- (void)getUserIdCallback:(void (^)(ScmSdkScResult<ScmSdkInt *> *))callback __attribute__((swift_name("getUserId(callback:)")));

/**
 * Check if WO should be excluded from feedback rating
 * @param category - category of Work Order
 * @param trade - trade of Work Order
 * @param priority - priority of Work Order
 */
- (void)isExcludedFromFeedbackRatingCategory:(NSString *)category trade:(NSString *)trade priority:(NSString *)priority callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isExcludedFromFeedbackRating(category:trade:priority:callback:)")));

/**
 * Custom question optional
 */
- (void)isQuestionOptionalCallback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isQuestionOptional(callback:)")));

/**
 * clear user data
 */
- (void)logoutCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("logout(callback:)")));

/**
 * Updates the user profile, features, and permissions.
 */
- (void)refreshUserProfileCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("refreshUserProfile(callback:)")));

/**
 * Universal User Only.
 *
 * @param subscriberId - child subscriber id
 * @throws [UserFeatureException.OnlyUniversalUserFunctionality]
 */
- (void)setCurrentSubscriberSubscriberId:(int32_t)subscriberId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("setCurrentSubscriber(subscriberId:callback:)")));

/**
 *
 * @return [List<Subscriber>] - list of child subscribers for universal user.
 */
- (ScmSdkScFlow<NSArray<ScmSdkSubscriber *> *> *)subscribeSubsidiaries __attribute__((swift_name("subscribeSubsidiaries()")));

/**
 * subscribe for change user profile.
 *
 * @return [User] - current profile
 */
- (ScmSdkScFlow<ScmSdkUser *> *)subscribeUser __attribute__((swift_name("subscribeUser()")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmCategoriesInteractor")))
@interface ScmSdkScmCategoriesInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScCategories:(id<ScmSdkScmCategories>)scCategories __attribute__((swift_name("init(scCategories:)"))) __attribute__((objc_designated_initializer));

/**
 * Subscribe on categories.
 *
 * @return [Map] - categories map, where:
 * [Map.keys] -  category id,
 * [Map.values] - category name.
 */
- (ScmSdkScFlow<NSDictionary<ScmSdkInt *, NSString *> *> *)subscribe __attribute__((swift_name("subscribe()")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for methods related to subscriber.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmCreateWorkOrderInteractor")))
@interface ScmSdkScmCreateWorkOrderInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmCreateWorkOrderInteractor:(id<ScmSdkScmCreateWorkOrder>)scmCreateWorkOrderInteractor __attribute__((swift_name("init(scmCreateWorkOrderInteractor:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmCreateWorkOrder.getApprovalCodes]
 */
- (void)getApprovalCodesLocationId:(int32_t)locationId category:(NSString *)category callback:(void (^)(ScmSdkScResult<ScmSdkApprovalCodes *> *))callback __attribute__((swift_name("getApprovalCodes(locationId:category:callback:)")));

/**
 * @see[ScmCreateWorkOrder.getGlCode]
 */
- (void)getGlCodeLocationId:(int32_t)locationId trade:(NSString *)trade category:(NSString *)category callback:(void (^)(ScmSdkScResult<NSString *> *))callback __attribute__((swift_name("getGlCode(locationId:trade:category:callback:)")));

/**
 * @see[ScmCreateWorkOrder.getNoteEmailAddresses]
 */
- (void)getNoteEmailAddressesSubscriberId:(int32_t)subscriberId setupId:(int32_t)setupId locationId:(int32_t)locationId providerId:(int32_t)providerId trade:(NSString *)trade callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkNoteEmail *> *> *))callback __attribute__((swift_name("getNoteEmailAddresses(subscriberId:setupId:locationId:providerId:trade:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for migrating to the SDK for apps
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmMigrationInteractor")))
@interface ScmSdkScmMigrationInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScMigration:(id<ScmSdkScmMigration>)scMigration __attribute__((swift_name("init(scMigration:)"))) __attribute__((objc_designated_initializer));

/**
 * Method for migrating user data from the app to the SDK.
 * Performs the transfer of the user's tokens and requests the user's profile,
 * permissions to work, and so on.
 *
 * @param [params] - user tokens
 */
- (void)migrationParams:(ScmSdkConfigurationMigrationParams *)params callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("migration(params:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide IOS API to work with Proposal feature.
 * @see [ScmProposal]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmProposalInteractor")))
@interface ScmSdkScmProposalInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithProposalInteractor:(id<ScmSdkScmProposal>)proposalInteractor __attribute__((swift_name("init(proposalInteractor:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmProposal.getProposalByWorkOrderId]
 */
- (void)getProposalByWorkOrderIdWorkOrderId:(int32_t)workOrderId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkProposal *> *> *))callback __attribute__((swift_name("getProposalByWorkOrderId(workOrderId:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide IOS API to work with Review feature.
 * @see [ScmReview]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmReviewInteractor")))
@interface ScmSdkScmReviewInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmReviewInteractor:(id<ScmSdkScmReview>)scmReviewInteractor __attribute__((swift_name("init(scmReviewInteractor:)"))) __attribute__((objc_designated_initializer));

/**
 * Returns Last Login of the user
 * @param isSuccess filter by success or failed logins, if null - all logins
 * @param forLastDays filter by the days count, if null - 30 days by default
 * @return List[SdkLastLogins] of last user logins.
 */
- (void)getLastLoginsIsSuccess:(BOOL)isSuccess forLastDays:(ScmSdkInt * _Nullable)forLastDays callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkLastLogins *> *> *))callback __attribute__((swift_name("getLastLogins(isSuccess:forLastDays:callback:)")));

/**
 * Returns Reviews of the user
 * @param deviceId id of the users device
 * @param forLastDays filter by the days count, if null - 30 days by default
 * @return List[SdkLastLogins] of last user logins.
 */
- (void)getReviewsDeviceId:(NSString *)deviceId forLastDays:(ScmSdkInt * _Nullable)forLastDays callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkReviews *> *> *))callback __attribute__((swift_name("getReviews(deviceId:forLastDays:callback:)")));

/**
 * Creates a new review
 * @param params [ReviewsParams] params to create review
 */
- (void)postReviewReviewsParams:(ScmSdkReviewsParams *)reviewsParams callback:(void (^)(ScmSdkScResult<ScmSdkSdkReviews *> *))callback __attribute__((swift_name("postReview(reviewsParams:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provides an API for working with the user token.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmTokenInteractor")))
@interface ScmSdkScmTokenInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScToken:(id<ScmSdkScmToken>)scToken __attribute__((swift_name("init(scToken:)"))) __attribute__((objc_designated_initializer));

/**
 * Should use for support old api services in application.
 * @return [ScmSdkToken] - local token with authorization value for http header
 */
- (void)getTokenCallback:(void (^)(ScmSdkScResult<ScmSdkScmSdkToken *> *))callback __attribute__((swift_name("getToken(callback:)")));

/**
 * @return [ScmSdkToken] - local token with authorization value for http header
 */
- (void)refreshTokenCallback:(void (^)(ScmSdkScResult<ScmSdkScmSdkToken *> *))callback __attribute__((swift_name("refreshToken(callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for setting basic settings in the SDK
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmToolsInteractor")))
@interface ScmSdkScmToolsInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmTools:(id<ScmSdkScmTools>)scmTools __attribute__((swift_name("init(scmTools:)"))) __attribute__((objc_designated_initializer));

/**
 * For the SDK to work correctly with the API, you need to add the urls.
 *
 * [baseUrls] - base urls to use in SDK.
 */
- (void)setupUrlsBaseUrls:(ScmSdkConfigurationBaseUrlsParams *)baseUrls callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("setupUrls(baseUrls:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmUnauthorizedUserInteractor")))
@interface ScmSdkScmUnauthorizedUserInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScUser:(id<ScmSdkScmUnauthorizedUser>)scUser __attribute__((swift_name("init(scUser:)"))) __attribute__((objc_designated_initializer));

/**
 * @return true - if the user is logged in
 */
- (void)isAuthorizedCallback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isAuthorized(callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for determining the flags and permissions available to the user of the feature
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmUserAccessInteractor")))
@interface ScmSdkScmUserAccessInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmUserAccess:(id<ScmSdkScmUserAccess>)scmUserAccess __attribute__((swift_name("init(scmUserAccess:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmUserAccess.getAppSettingsValue]
 */
- (void)getAppSettingsValueSetting:(ScmSdkAppSettingWithValueParams *)setting callback:(void (^)(ScmSdkScResult<id<ScmSdkAppSettingWithValue>> *))callback __attribute__((swift_name("getAppSettingsValue(setting:callback:)")));

/**
 * @see[ScmUserAccess.getAppSettingsValue]
 */
- (void)getAppSettingsValueSetupId:(int32_t)setupId setting:(ScmSdkAppSettingWithValueParams *)setting callback:(void (^)(ScmSdkScResult<id<ScmSdkAppSettingWithValue>> *))callback __attribute__((swift_name("getAppSettingsValue(setupId:setting:callback:)")));

/**
 * @see[ScmUserAccess.getDashboardSettings]
 */
- (void)getDashboardSettingsCallback:(void (^)(ScmSdkScResult<ScmSdkDashboardSettings *> *))callback __attribute__((swift_name("getDashboardSettings(callback:)")));

/**
 * @see[ScmUserAccess.getDashboardSettings]
 */
- (void)getDashboardSettingsSetupId:(int32_t)setupId callback:(void (^)(ScmSdkScResult<ScmSdkDashboardSettings *> *))callback __attribute__((swift_name("getDashboardSettings(setupId:callback:)")));

/**
 * @see[ScmUserAccess.isAppSettingsEnabled]
 */
- (void)isAppSettingsEnabledSetting:(ScmSdkAppSettingParams *)setting callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isAppSettingsEnabled(setting:callback:)")));

/**
 * @see[ScmUserAccess.isAppSettingsEnabled]
 */
- (void)isAppSettingsEnabledSetupId:(int32_t)setupId setting:(ScmSdkAppSettingParams *)setting callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isAppSettingsEnabled(setupId:setting:callback:)")));

/**
 * @see[ScmUserAccess.isFeatureEnabled]
 */
- (void)isFeatureEnabledFeature:(ScmSdkFeatureParams *)feature callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isFeatureEnabled(feature:callback:)")));

/**
 * @see[ScmUserAccess.isPermissionGranted]
 */
- (void)isPermissionGrantedPermission:(ScmSdkUserPermissionParams *)permission callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isPermissionGranted(permission:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * API for methods related to workorders flow include V5 version.
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmWorkOrderInteractor")))
@interface ScmSdkScmWorkOrderInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmWorkOrderInteractor:(id<ScmSdkScmWorkOrder>)scmWorkOrderInteractor __attribute__((swift_name("init(scmWorkOrderInteractor:)"))) __attribute__((objc_designated_initializer));

/**
 * Returns assets, which are attached to the work order.
 */
- (void)getAssetsByWorkOrderIdWorkOrderId:(int32_t)workOrderId pageSize:(int32_t)pageSize pageNumber:(int32_t)pageNumber callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderAsset *> *> *))callback __attribute__((swift_name("getAssetsByWorkOrderId(workOrderId:pageSize:pageNumber:callback:)")));

/**
 * Get all categories.
 * @return Categories  [Map] key - id, value - title.
 */
- (void)getCategoriesCallback:(void (^)(ScmSdkScResult<NSDictionary<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getCategories(callback:)")));

/**
 * Return category by id.
 * @return Category ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownCategoryId]
 */
- (void)getCategoryByIdId:(int32_t)id callback:(void (^)(ScmSdkScResult<ScmSdkKotlinPair<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getCategoryById(id:callback:)")));

/**
 * Get list of work orders (items for list) by [filters].
 * @param filters Filters for search work orders.
 * @param orderBy Field for sorting work orders, for ex. "ScheduleDate desc".
 * @return List of models for list (short model) [SdkWorkOrderShort].
 */
- (void)getFilteredWorkOrdersFilters:(ScmSdkWorkOrdersFilters *)filters orderBy:(NSString * _Nullable)orderBy callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderShort *> *> *))callback __attribute__((swift_name("getFilteredWorkOrders(filters:orderBy:callback:)")));

/**
 * Get all priorities.
 */
- (void)getPrioritiesCallback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkPriority *> *> *))callback __attribute__((swift_name("getPriorities(callback:)")));

/**
 * Get all priorities.
 */
- (void)getPrioritiesWithNonSelectable:(BOOL)withNonSelectable callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkPriority *> *> *))callback __attribute__((swift_name("getPriorities(withNonSelectable:callback:)")));

/**
 * Return priority by id.
 * @throws [WorkOrderException.WorkOrderUnknownPriorityId]
 */
- (void)getPriorityByIdId:(int32_t)id callback:(void (^)(ScmSdkScResult<ScmSdkSdkPriority *> *))callback __attribute__((swift_name("getPriorityById(id:callback:)")));

/**
 * Return provider by id.
 * @return Provider ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownProviderId]
 */
- (void)getProviderByIdId:(int32_t)id callback:(void (^)(ScmSdkScResult<ScmSdkKotlinPair<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getProviderById(id:callback:)")));

/**
 * Get all providers.
 * @return Providers  [Map] key - id, value - title.
 */
- (void)getProvidersCallback:(void (^)(ScmSdkScResult<NSDictionary<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getProviders(callback:)")));

/**
 * Return trade by id.
 * @throws [WorkOrderException.WorkOrderUnknownTradeId]
 */
- (void)getTradeByIdId:(int32_t)id callback:(void (^)(ScmSdkScResult<ScmSdkSdkTrade *> *))callback __attribute__((swift_name("getTradeById(id:callback:)")));

/**
 * Get all trades.
 */
- (void)getTradesCallback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkTrade *> *> *))callback __attribute__((swift_name("getTrades(callback:)")));

/**
 * Return weather type by id.
 * @return Weather type ([Pair], first - id, second - title)
 * @throws [WorkOrderException.WorkOrderUnknownWeatherTypeId]
 */
- (void)getWeatherTypeByIdId:(int32_t)id callback:(void (^)(ScmSdkScResult<ScmSdkKotlinPair<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getWeatherTypeById(id:callback:)")));

/**
 * Get all weather types.
 * @return Weather types  [Map] key - id, value - title.
 */
- (void)getWeatherTypesCallback:(void (^)(ScmSdkScResult<NSDictionary<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getWeatherTypes(callback:)")));

/**
 * Returns all work order activities by work order id.
 */
- (void)getWorkOrderActivitiesWorkOrderId:(int32_t)workOrderId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderActivity *> *> *))callback __attribute__((swift_name("getWorkOrderActivities(workOrderId:callback:)")));

/**
 * Returns Budgets by workOrderIds
 * @param fiscalPeriodTime = "Period", "Quarter" or "Year"
 * @param workOrderIds = list ids of work orders
 * @return [SdkWorkOrdersBudgets] of workorders budgets.
 */
- (void)getWorkOrderBudgetFiscalPeriodTime:(ScmSdkFiscalPeriodType *)fiscalPeriodTime workOrderId:(int32_t)workOrderId callback:(void (^)(ScmSdkScResult<ScmSdkSdkWorkOrderBudget *> *))callback __attribute__((swift_name("getWorkOrderBudget(fiscalPeriodTime:workOrderId:callback:)")));

/**
 * Returns all data for work order by id.
 */
- (void)getWorkOrderByIdWorkOrderId:(int32_t)workOrderId callback:(void (^)(ScmSdkScResult<ScmSdkSdkWorkOrder *> *))callback __attribute__((swift_name("getWorkOrderById(workOrderId:callback:)")));

/**
 * Returns work order last note by list of work order ids.
 * @param List[Int] of work order ids.
 *
 * @return Work order note [SdkNote].
 */
- (void)getWorkOrderLastNoteWorkOrderIds:(NSArray<ScmSdkInt *> *)workOrderIds callback:(void (^)(ScmSdkScResult<ScmSdkSdkNote *> *))callback __attribute__((swift_name("getWorkOrderLastNote(workOrderIds:callback:)")));

/**
 * Returns note recipients by work order id and note visibility.
 * @param workOrderId work order id.
 * @param noteVisibility note visibility as one of [SdkNoteVisibility].
 *
 * @return List[SdkNoteRecipient] of work order note recipients.
 */
- (void)getWorkOrderNoteRecipientsWorkOrderId:(int32_t)workOrderId noteVisibility:(ScmSdkSdkNoteVisibility *)noteVisibility callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkNoteRecipient *> *> *))callback __attribute__((swift_name("getWorkOrderNoteRecipients(workOrderId:noteVisibility:callback:)")));

/**
 * Returns work order notes by work order id.
 * @param workOrderId work order id.
 * @param isPinned [Boolean] flag tht indicates to return only pinned notes.
 * @return List of work order notes [SdkNote].
 */
- (void)getWorkOrderNotesWorkOrderId:(int32_t)workOrderId isPinned:(ScmSdkBoolean * _Nullable)isPinned callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkNote *> *> *))callback __attribute__((swift_name("getWorkOrderNotes(workOrderId:isPinned:callback:)")));

/**
 * Returns statuses by workorder
 * @param workOrderId work order id.
 * @param tradeId trade id. If [tradeId] is null will return all statuses.
 * Otherwise will return all filtered statuses + without filter
 * With invalid TradeId - BadRequest with message “Invalid Trade”
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 */
- (void)getWorkOrderStatusListWorkOrderId:(int32_t)workOrderId tradeId:(ScmSdkInt * _Nullable)tradeId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderStatus *> *> *))callback __attribute__((swift_name("getWorkOrderStatusList(workOrderId:tradeId:callback:)")));

/**
 * Returns statuses by workorder
 * @param tradeId trade id. If [tradeId] is null will return all statuses.
 * Otherwise will return all filtered statuses + without filter
 * With invalid TradeId - BadRequest with message “Invalid Trade”
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 */
- (void)getWorkOrderStatusListByTradeTradeId:(int32_t)tradeId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderStatus *> *> *))callback __attribute__((swift_name("getWorkOrderStatusListByTrade(tradeId:callback:)")));

/**
 * Returns statuses by workorder
 * Otherwise will return all statuses
 *
 * @return List[SdkWorkOrderStatus] of workorder statuses.
 *
 *
 */
- (void)getWorkOrderStatusesCallback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSdkWorkOrderStatus *> *> *))callback __attribute__((swift_name("getWorkOrderStatuses(callback:)")));

/**
 * Pins work order note by work order id and note id.
 * @param workOrderId work order id.
 * @param noteId note id.
 */
- (void)pinWorkOrderNoteWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("pinWorkOrderNote(workOrderId:noteId:callback:)")));

/**
 * Creates new work order note by work order id and note content.
 * @param params [PostNoteParams] params for create notes.
 *
 * @return [Int] Id of created note.
 */
- (void)postWorkOrderNoteParams:(ScmSdkPostNoteParams *)params callback:(void (^)(ScmSdkScResult<ScmSdkInt *> *))callback __attribute__((swift_name("postWorkOrderNote(params:callback:)")));

/**
 * Unpins work order note by work order id and note id.
 * @param workOrderId work order id.
 * @param noteId note id.
 */
- (void)unPinWorkOrderNoteWorkOrderId:(int32_t)workOrderId noteId:(int32_t)noteId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("unPinWorkOrderNote(workOrderId:noteId:callback:)")));

/**
 * Updates work order note by work order id and note id.
 * @param params [UpdateNoteParams] params for update notes.
 */
- (void)updateWorkOrderNoteParams:(ScmSdkUpdateNoteParams *)params callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateWorkOrderNote(params:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide IOS API to work with Site Audit feature.
 * @see [ScmSiteAudit]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmSiteAuditInteractor")))
@interface ScmSdkScmSiteAuditInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithSiteAuditInteractor:(id<ScmSdkScmSiteAudit>)siteAuditInteractor auditAttachmentNsDataMapper:(ScmSdkAuditAttachmentNsDataMapper *)auditAttachmentNsDataMapper updateAuditAttachmentNsDataMapper:(ScmSdkUpdateAuditAttachmentNsDataMapper *)updateAuditAttachmentNsDataMapper __attribute__((swift_name("init(siteAuditInteractor:auditAttachmentNsDataMapper:updateAuditAttachmentNsDataMapper:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmSiteAudit.addComment]
 */
- (void)addCommentCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate auditAttachments:(NSArray<ScmSdkAuditAttachmentNsData *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<ScmSdkUploadCommentInfo *> *))callback __attribute__((swift_name("addComment(checkItemId:commentText:isPersistent:currentDate:auditAttachments:chunkCapacity:callback:)")));

/**
 * @see[ScmSiteAudit.addCommentWithUploadedAttachments]
 */
- (void)addCommentWithUploadedAttachmentsCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("addCommentWithUploadedAttachments(checkItemId:commentText:isPersistent:currentDate:uploadedAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.addCommentWithoutUploadedAttachments]
 */
- (void)addCommentWithoutUploadedAttachmentsCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate auditAttachments:(NSArray<ScmSdkAuditAttachmentNsData *> *)auditAttachments callback:(void (^)(ScmSdkScResult<ScmSdkUploadCommentInfo *> *))callback __attribute__((swift_name("addCommentWithoutUploadedAttachments(checkItemId:commentText:isPersistent:currentDate:auditAttachments:callback:)")));
- (void)addLocalCommentCheckItemId:(NSString *)checkItemId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity commentAttachments:(NSArray<ScmSdkCommentAttachment *> *)commentAttachments callback:(void (^)(ScmSdkScResult<ScmSdkLocalCommentInfo *> *))callback __attribute__((swift_name("addLocalComment(checkItemId:commentText:isPersistent:currentDate:chunkCapacity:commentAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.addSearchHistoryItem]
 */
- (void)addSearchHistoryItemItem:(ScmSdkSearchHistoryItemParams *)item callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("addSearchHistoryItem(item:callback:)")));
- (void)cancelUploadAuditFromServiceAuditInfoId:(int64_t)auditInfoId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("cancelUploadAuditFromService(auditInfoId:callback:)")));

/**
 * @see[ScmSiteAudit.completeOpenAudit]
 */
- (void)completeOpenAuditAuditInfoId:(int64_t)auditInfoId finishDate:(NSString *)finishDate language:(NSString *)language callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("completeOpenAudit(auditInfoId:finishDate:language:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckItem]
 */
- (void)createAuditCheckItemAuditCheckListId:(NSString *)auditCheckListId auditCheckItemName:(NSString *)auditCheckItemName auditCheckItemRatingSystem:(ScmSdkAuditCheckItemRatingSystem *)auditCheckItemRatingSystem description:(NSString *)description range:(NSArray<ScmSdkInt *> *)range passThreshold:(int32_t)passThreshold callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createAuditCheckItem(auditCheckListId:auditCheckItemName:auditCheckItemRatingSystem:description:range:passThreshold:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckItem]
 */
- (void)createAuditCheckItemAuditCheckListId:(NSString *)auditCheckListId auditCheckItemName:(NSString *)auditCheckItemName auditCheckItemRatingSystem:(ScmSdkAuditCheckItemRatingSystem *)auditCheckItemRatingSystem description:(NSString *)description range:(NSArray<ScmSdkInt *> *)range passThreshold:(int32_t)passThreshold checkItemCreatedDate:(NSString *)checkItemCreatedDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createAuditCheckItem(auditCheckListId:auditCheckItemName:auditCheckItemRatingSystem:description:range:passThreshold:checkItemCreatedDate:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckList]
 */
- (void)createAuditCheckListAuditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName callback:(void (^)(ScmSdkScResult<NSString *> *))callback __attribute__((swift_name("createAuditCheckList(auditAreaId:auditCheckListName:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckList]
 */
- (void)createAuditCheckListAuditAreaId:(NSString *)auditAreaId auditCheckListName:(NSString *)auditCheckListName sortOrder:(int32_t)sortOrder callback:(void (^)(ScmSdkScResult<NSString *> *))callback __attribute__((swift_name("createAuditCheckList(auditAreaId:auditCheckListName:sortOrder:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckListWithCheckItems]
 */
- (void)createAuditCheckListWithCheckItemsAuditInfoTemplateId:(int32_t)auditInfoTemplateId auditAreaId:(NSString *)auditAreaId checkItemCreatedDate:(NSString *)checkItemCreatedDate params:(NSArray<ScmSdkAuditCheckListTemplateWithSortOrderParams *> *)params callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createAuditCheckListWithCheckItems(auditInfoTemplateId:auditAreaId:checkItemCreatedDate:params:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckListWithCheckItems]
 */
- (void)createAuditCheckListWithCheckItemsAuditInfoTemplateId:(int32_t)auditInfoTemplateId auditAreaId:(NSString *)auditAreaId params:(NSArray<ScmSdkAuditCheckListTemplateWithSortOrderParams *> *)params callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createAuditCheckListWithCheckItems(auditInfoTemplateId:auditAreaId:params:callback:)")));

/**
 * @see[ScmSiteAudit.createAuditCheckListWithCheckItems]
 */
- (void)createAuditCheckListWithCheckItemsParams:(NSArray<ScmSdkAuditCheckListTemplateParams *> *)params callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createAuditCheckListWithCheckItems(params:callback:)")));

/**
 * @see[ScmSiteAudit.createNewAuditInfo]
 */
- (void)createNewAuditInfoCurrentTimeStamp:(int64_t)currentTimeStamp locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createNewAuditInfo(currentTimeStamp:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:timeZone:callback:)")));

/**
 * @see[ScmSiteAudit.createNewAuditInfo]
 */
- (void)createNewAuditInfoCurrentTimeStamp:(int64_t)currentTimeStamp locationId:(int32_t)locationId locationName:(NSString *)locationName storeId:(NSString *)storeId city:(NSString *)city address:(NSString *)address state:(NSString *)state zip:(NSString *)zip country:(NSString *)country templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone checkItemCreatedDate:(NSString *)checkItemCreatedDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("createNewAuditInfo(currentTimeStamp:locationId:locationName:storeId:city:address:state:zip:country:templateId:templateName:timeZone:checkItemCreatedDate:callback:)")));

/**
 * @see[ScmSiteAudit.createOpenAudit]
 */
- (void)createOpenAuditAuditInfoId:(int64_t)auditInfoId language:(NSString *)language isUnmarkedAudit:(BOOL)isUnmarkedAudit callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("createOpenAudit(auditInfoId:language:isUnmarkedAudit:callback:)")));

/**
 * @see[ScmSiteAudit.deleteAttachment]
 */
- (void)deleteAttachmentAttachmentId:(int32_t)attachmentId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteAttachment(attachmentId:callback:)")));

/**
 * @see[ScmSiteAudit.deleteAttachmentForCommentByFileName]
 */
- (void)deleteAttachmentForCommentByFileNameFileName:(NSString *)fileName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteAttachmentForCommentByFileName(fileName:callback:)")));

/**
 * @see[ScmSiteAudit.deleteAttachmentForWorkOrderTemplateByFileName]
 */
- (void)deleteAttachmentForWorkOrderTemplateByFileNameFileName:(NSString *)fileName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteAttachmentForWorkOrderTemplateByFileName(fileName:callback:)")));

/**
 * @see[ScmSiteAudit.deleteComment]
 */
- (void)deleteCommentCommentId:(int32_t)commentId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteComment(commentId:callback:)")));

/**
 * @see[ScmSiteAudit.deleteOpenAudit]
 */
- (void)deleteOpenAuditAuditId:(int32_t)auditId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteOpenAudit(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.deleteWorkOrderTemplate]
 */
- (void)deleteWorkOrderTemplateCheckItemId:(NSString *)checkItemId workOrderTemplateId:(int32_t)workOrderTemplateId currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteWorkOrderTemplate(checkItemId:workOrderTemplateId:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.getAuditInfoById]
 */
- (void)getAuditInfoByIdAuditInfoId:(int64_t)auditInfoId callback:(void (^)(ScmSdkScResult<id<ScmSdkAuditInfoExistence>> *))callback __attribute__((swift_name("getAuditInfoById(auditInfoId:callback:)")));

/**
 * @see[ScmSiteAudit.getAuditInfoByLocationAndTemplateId]
 */
- (void)getAuditInfoByLocationAndTemplateIdLocationId:(int32_t)locationId templateId:(int32_t)templateId isSearchCompletedAlso:(BOOL)isSearchCompletedAlso callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAudit *> *> *))callback __attribute__((swift_name("getAuditInfoByLocationAndTemplateId(locationId:templateId:isSearchCompletedAlso:callback:)")));

/**
 * @see[ScmSiteAudit.getAuditInfoTemplates]
 */
- (void)getAuditInfoTemplatesLocationId:(int32_t)locationId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAuditInfoTemplate *> *> *))callback __attribute__((swift_name("getAuditInfoTemplates(locationId:callback:)")));

/**
 * @see[ScmSiteAudit.getCheckItemById]
 */
- (void)getCheckItemByIdCheckItemId:(NSString *)checkItemId currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<ScmSdkAuditCheckItem *> *))callback __attribute__((swift_name("getCheckItemById(checkItemId:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.getCheckItemTemplates]
 */
- (void)getCheckItemTemplatesTemplateId:(int32_t)templateId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAuditCheckItemTemplate *> *> *))callback __attribute__((swift_name("getCheckItemTemplates(templateId:callback:)")));

/**
 * @see[ScmSiteAudit.getCheckItemTemplates]
 */
- (void)getCheckItemTemplatesTemplateId:(int32_t)templateId checkListTemplateId:(ScmSdkInt * _Nullable)checkListTemplateId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAuditCheckItemTemplate *> *> *))callback __attribute__((swift_name("getCheckItemTemplates(templateId:checkListTemplateId:callback:)")));

/**
 * @see[ScmSiteAudit.getCheckListTemplates]
 */
- (void)getCheckListTemplatesTemplateId:(int32_t)templateId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAuditCheckListTemplate *> *> *))callback __attribute__((swift_name("getCheckListTemplates(templateId:callback:)")));

/**
 * @see[ScmSiteAudit.getCommentAttachmentFullSize]
 */
- (void)getCommentAttachmentFullSizeCommentId:(int32_t)commentId attachmentId:(int32_t)attachmentId fileName:(NSString *)fileName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("getCommentAttachmentFullSize(commentId:attachmentId:fileName:callback:)")));

/**
 * @see[ScmSiteAudit.getCommentAttachmentThumbnail]
 */
- (void)getCommentAttachmentThumbnailCommentId:(int32_t)commentId attachmentId:(int32_t)attachmentId fileName:(NSString *)fileName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("getCommentAttachmentThumbnail(commentId:attachmentId:fileName:callback:)")));

/**
 * @see[ScmSiteAudit.getCommentAttachments]
 */
- (void)getCommentAttachmentsCommentId:(int32_t)commentId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAttachmentUrl *> *> *))callback __attribute__((swift_name("getCommentAttachments(commentId:callback:)")));

/**
 * @see[ScmSiteAudit.getCompletedAudits]
 */
- (void)getCompletedAuditsDays:(int32_t)days callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkCompletedSiteAudit *> *> *))callback __attribute__((swift_name("getCompletedAudits(days:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnCurrentAuditInfo]
 */
- (void)getCurrentAuditInfoQuery:(NSString *)query callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAudit *> *> *))callback __attribute__((swift_name("getCurrentAuditInfo(query:callback:)")));

/**
 * @see[ScmSiteAudit.getFilteredAudits]
 */
- (void)getFilteredAuditsSearchValue:(NSString * _Nullable)searchValue status:(int32_t)status pageIndex:(int32_t)pageIndex callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkCompletedSiteAudit *> *> *))callback __attribute__((swift_name("getFilteredAudits(searchValue:status:pageIndex:callback:)")));

/**
 * @see[ScmSiteAudit.getSearchHistory]
 */
- (void)getSearchHistoryCountOfLastItems:(int32_t)countOfLastItems searchQuery:(NSString *)searchQuery callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkSearchHistoryItem *> *> *))callback __attribute__((swift_name("getSearchHistory(countOfLastItems:searchQuery:callback:)")));

/**
 * @see[ScmSiteAudit.getServiceRequestInfo]
 */
- (void)getServiceRequestInfoStoreId:(int32_t)storeId areaName:(NSString *)areaName problemType:(NSString *)problemType assetType:(NSString *)assetType problemCode:(NSString *)problemCode callDate:(NSString *)callDate dashboardId:(ScmSdkInt * _Nullable)dashboardId callback:(void (^)(ScmSdkScResult<ScmSdkServiceRequestInfo *> *))callback __attribute__((swift_name("getServiceRequestInfo(storeId:areaName:problemType:assetType:problemCode:callDate:dashboardId:callback:)")));

/**
 * @see[ScmSiteAudit.getServiceRequestInfoByTrade]
 */
- (void)getServiceRequestInfoByTradeTrade:(NSString *)trade assetId:(ScmSdkInt * _Nullable)assetId storeId:(int32_t)storeId areaName:(NSString *)areaName problemType:(NSString *)problemType assetType:(NSString *)assetType problemCode:(NSString *)problemCode callDate:(NSString *)callDate dashboardId:(ScmSdkInt * _Nullable)dashboardId callback:(void (^)(ScmSdkScResult<ScmSdkServiceRequestInfo *> *))callback __attribute__((swift_name("getServiceRequestInfoByTrade(trade:assetId:storeId:areaName:problemType:assetType:problemCode:callDate:dashboardId:callback:)")));

/**
 * @see[ScmSiteAudit.getStatisticItemDataById]
 */
- (void)getStatisticItemDataByIdStatisticItemId:(int32_t)statisticItemId checkItemId:(NSString *)checkItemId callback:(void (^)(ScmSdkScResult<ScmSdkStatisticItemComponents *> *))callback __attribute__((swift_name("getStatisticItemDataById(statisticItemId:checkItemId:callback:)")));

/**
 * @see[ScmSiteAudit.getUnsavedAuditInfo]
 */
- (void)getUnsavedAuditInfoCallback:(void (^)(ScmSdkScResult<NSArray<ScmSdkAudit *> *> *))callback __attribute__((swift_name("getUnsavedAuditInfo(callback:)")));

/**
 * @see[ScmSiteAudit.getWorkOrderAttachmentsInfo]
 */
- (void)getWorkOrderAttachmentsInfoWorkOrderId:(int32_t)workOrderId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkWorkOrderAttachmentInfo *> *> *))callback __attribute__((swift_name("getWorkOrderAttachmentsInfo(workOrderId:callback:)")));

/**
 * Check is all check items completed in current audit data.
 * @return true if all check items completed.
 */
- (void)isAllCheckItemsCompletedAuditInfoId:(int64_t)auditInfoId callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isAllCheckItemsCompleted(auditInfoId:callback:)")));

/**
 * @see[ScmSiteAudit.isAuditCanBeCreated]
 */
- (void)isAuditCanBeCreatedLocationId:(int32_t)locationId templateTypeId:(int32_t)templateTypeId callback:(void (^)(ScmSdkScResult<ScmSdkCheckAuditInfo *> *))callback __attribute__((swift_name("isAuditCanBeCreated(locationId:templateTypeId:callback:)")));

/**
 * @see[ScmSiteAudit.isNeedShowEmails]
 */
- (void)isNeedShowEmailsCallback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isNeedShowEmails(callback:)")));

/**
 * @see[ScmSiteAudit.isWorkOrderTemplateExistsByProblemType]
 */
- (void)isWorkOrderTemplateExistsByProblemTypeCheckItemId:(NSString *)checkItemId problemType:(NSString *)problemType callback:(void (^)(ScmSdkScResult<id<ScmSdkWorkOrderTemplateExistence>> *))callback __attribute__((swift_name("isWorkOrderTemplateExistsByProblemType(checkItemId:problemType:callback:)")));

/**
 * @see[ScmSiteAudit.loadCheckItemsTemplatesForCheckListTemplates]
 */
- (void)loadCheckItemsTemplatesForCheckListTemplatesTemplateId:(int32_t)templateId checkListTemplateId:(int32_t)checkListTemplateId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("loadCheckItemsTemplatesForCheckListTemplates(templateId:checkListTemplateId:callback:)")));

/**
 * @see[ScmSiteAudit.loadCompletedAuditById]
 */
- (void)loadCompletedAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("loadCompletedAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:callback:)")));

/**
 * @see[ScmSiteAudit.loadCompletedAuditById]
 */
- (void)loadCompletedAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone isSitePlanningStatus:(BOOL)isSitePlanningStatus callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("loadCompletedAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:isSitePlanningStatus:callback:)")));

/**
 * @see[ScmSiteAudit.loadOpenAuditById]
 */
- (void)loadOpenAuditByIdAuditId:(int32_t)auditId locationId:(int32_t)locationId locationName:(NSString *)locationName templateId:(int32_t)templateId templateName:(NSString *)templateName timeZone:(NSString *)timeZone callback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("loadOpenAuditById(auditId:locationId:locationName:templateId:templateName:timeZone:callback:)")));

/**
 * @see[ScmSiteAudit.makeAuditAsChanged]
 */
- (void)makeAuditAsChangedAuditId:(int64_t)auditId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("makeAuditAsChanged(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.makeAuditAsUnchanged]
 */
- (void)makeAuditAsUnchangedAuditId:(int64_t)auditId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("makeAuditAsUnchanged(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.postAudit]
 */
- (void)postAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("postAudit(auditId:finishDate:language:callback:)")));

/**
 * @see[ScmSiteAudit.removeAuditCheckItem]
 */
- (void)removeAuditCheckItemAuditCheckItemId:(NSString *)auditCheckItemId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("removeAuditCheckItem(auditCheckItemId:callback:)")));

/**
 * @see[ScmSiteAudit.removeAuditCheckList]
 */
- (void)removeAuditCheckListAuditCheckListId:(NSString *)auditCheckListId currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("removeAuditCheckList(auditCheckListId:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.removeAuditInfo]
 */
- (void)removeAuditInfoAuditId:(int64_t)auditId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("removeAuditInfo(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.removeQuantityValue]
 */
- (void)removeQuantityValueCheckItemId:(NSString *)checkItemId currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("removeQuantityValue(checkItemId:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.saveWorkOrderTemplate]
 */
- (void)saveWorkOrderTemplateCheckItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params attachmentsForUpload:(NSArray<ScmSdkAuditAttachmentNsData *> *)attachmentsForUpload currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<ScmSdkUploadWorkOrderTemplateInfo *> *))callback __attribute__((swift_name("saveWorkOrderTemplate(checkItemId:params:attachmentsForUpload:currentDate:chunkCapacity:callback:)")));

/**
 * @see[ScmSiteAudit.saveWorkOrderTemplateWithUploadedAttachments]
 */
- (void)saveWorkOrderTemplateWithUploadedAttachmentsCheckItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkWorkOrderAttachment *> *)uploadedAttachments callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("saveWorkOrderTemplateWithUploadedAttachments(checkItemId:params:currentDate:uploadedAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.setQuantityValue]
 */
- (void)setQuantityValueCheckItemId:(NSString *)checkItemId quantity:(ScmSdkKotlinPair<NSString *, ScmSdkInt *> *)quantity currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("setQuantityValue(checkItemId:quantity:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.setRatingValue]
 */
- (void)setRatingValueCheckItemId:(NSString *)checkItemId value:(id<ScmSdkRatingValue>)value currentDate:(NSString *)currentDate callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("setRatingValue(checkItemId:value:currentDate:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnAllComments]
 */
- (void)subscribeOnAllCommentsCallback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkCheckItemComment *> *> *))callback __attribute__((swift_name("subscribeOnAllComments(callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnAuditAreas]
 */
- (void)subscribeOnAuditAreasAuditId:(int64_t)auditId callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkAuditArea *> *> *))callback __attribute__((swift_name("subscribeOnAuditAreas(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnAuditCheckItems]
 */
- (void)subscribeOnAuditCheckItemsCheckListId:(NSString *)checkListId callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkAuditCheckItem *> *> *))callback __attribute__((swift_name("subscribeOnAuditCheckItems(checkListId:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnCheckItemComments]
 */
- (void)subscribeOnCheckItemCommentsCheckItemId:(NSString *)checkItemId callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkCheckItemComment *> *> *))callback __attribute__((swift_name("subscribeOnCheckItemComments(checkItemId:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnCommentAttachments]
 */
- (void)subscribeOnCommentAttachmentsCallback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkCommentAttachment *> *> *))callback __attribute__((swift_name("subscribeOnCommentAttachments(callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnCommentAttachmentsByCommentId]
 */
- (void)subscribeOnCommentAttachmentsByCommentIdCommentId:(int32_t)commentId callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkCommentAttachment *> *> *))callback __attribute__((swift_name("subscribeOnCommentAttachmentsByCommentId(commentId:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnCurrentAuditInfo]
 */
- (void)subscribeOnCurrentAuditInfoQuery:(NSString *)query callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkAudit *> *> *))callback __attribute__((swift_name("subscribeOnCurrentAuditInfo(query:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnDateChangeFlag]
 */
- (void)subscribeOnDateChangeFlagAuditId:(int64_t)auditId callback:(void (^)(ScmSdkScFlow<ScmSdkBoolean *> *))callback __attribute__((swift_name("subscribeOnDateChangeFlag(auditId:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnSearchHistory]
 */
- (void)subscribeOnSearchHistoryCountOfLastItems:(int32_t)countOfLastItems searchQuery:(NSString *)searchQuery callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkSearchHistoryItem *> *> *))callback __attribute__((swift_name("subscribeOnSearchHistory(countOfLastItems:searchQuery:callback:)")));

/**
 * @see[ScmSiteAudit.subscribeOnWorkOrderTemplates]
 */
- (void)subscribeOnWorkOrderTemplatesCheckItemId:(NSString *)checkItemId callback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkWorkOrderTemplate *> *> *))callback __attribute__((swift_name("subscribeOnWorkOrderTemplates(checkItemId:callback:)")));

/**
 * @see[ScmSiteAudit.updateAuditCheckList]
 */
- (void)updateAuditCheckListAuditCheckListId:(NSString *)auditCheckListId auditCheckListName:(NSString *)auditCheckListName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateAuditCheckList(auditCheckListId:auditCheckListName:callback:)")));

/**
 * @see[ScmSiteAudit.updateComment]
 */
- (void)updateCommentCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkAuditAttachmentNsData *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<ScmSdkUploadCommentInfo *> *))callback __attribute__((swift_name("updateComment(commentId:commentText:isPersistent:auditAttachments:chunkCapacity:callback:)")));
- (void)updateCommentWithLocalAttachmentsCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkAuditAttachmentNsDataForUpdate *> *)auditAttachments chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<ScmSdkUploadCommentInfo *> *))callback __attribute__((swift_name("updateCommentWithLocalAttachments(commentId:commentText:isPersistent:auditAttachments:chunkCapacity:callback:)")));

/**
 * @see[ScmSiteAudit.updateCommentWithUploadedAttachments]
 */
- (void)updateCommentWithUploadedAttachmentsCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkCommentAttachment *> *)uploadedAttachments isReplaceAllAttachments:(BOOL)isReplaceAllAttachments callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateCommentWithUploadedAttachments(commentId:commentText:isPersistent:currentDate:uploadedAttachments:isReplaceAllAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.updateCompletedAudit]
 */
- (void)updateCompletedAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("updateCompletedAudit(auditId:finishDate:language:isNeedToDelete:isUnmarkedAudit:callback:)")));

/**
 * @see[ScmSiteAudit.updateCompletedAudit]
 */
- (void)updateCompletedAuditAuditId:(int64_t)auditId finishDate:(NSString *)finishDate language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit isSitePlanningStatus:(BOOL)isSitePlanningStatus callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("updateCompletedAudit(auditId:finishDate:language:isNeedToDelete:isUnmarkedAudit:isSitePlanningStatus:callback:)")));

/**
 * @see[ScmSiteAudit.updateEmails]
 */
- (void)updateEmailsAuditInfoId:(int64_t)auditInfoId emails:(NSString *)emails callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateEmails(auditInfoId:emails:callback:)")));

/**
 * @see[ScmSiteAudit.updateLocalComment]
 */
- (void)updateLocalCommentCommentId:(int32_t)commentId commentText:(NSString * _Nullable)commentText isPersistent:(BOOL)isPersistent auditAttachments:(NSArray<ScmSdkCommentAttachment *> *)auditAttachments callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateLocalComment(commentId:commentText:isPersistent:auditAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.updateOpenAudit]
 */
- (void)updateOpenAuditAuditInfoId:(int64_t)auditInfoId language:(NSString *)language isNeedToDelete:(BOOL)isNeedToDelete isUnmarkedAudit:(BOOL)isUnmarkedAudit callback:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))callback __attribute__((swift_name("updateOpenAudit(auditInfoId:language:isNeedToDelete:isUnmarkedAudit:callback:)")));

/**
 * @see[ScmSiteAudit.updateSendOnEmailFlag]
 */
- (void)updateSendOnEmailFlagAuditInfoId:(int64_t)auditInfoId isSendEmail:(BOOL)isSendEmail callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateSendOnEmailFlag(auditInfoId:isSendEmail:callback:)")));

/**
 * @see[ScmSiteAudit.updateWorkOrderTemplate]
 */
- (void)updateWorkOrderTemplateWorkOrderTemplateId:(int32_t)workOrderTemplateId checkItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params attachmentsForUpload:(NSArray<ScmSdkAuditAttachmentNsData *> *)attachmentsForUpload currentDate:(NSString *)currentDate chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<ScmSdkUploadWorkOrderTemplateInfo *> *))callback __attribute__((swift_name("updateWorkOrderTemplate(workOrderTemplateId:checkItemId:params:attachmentsForUpload:currentDate:chunkCapacity:callback:)")));

/**
 * @see[ScmSiteAudit.updateWorkOrderTemplateWithUploadedAttachments]
 */
- (void)updateWorkOrderTemplateWithUploadedAttachmentsWorkOrderTemplateId:(int32_t)workOrderTemplateId checkItemId:(NSString *)checkItemId params:(ScmSdkWorkOrderTemplate *)params currentDate:(NSString *)currentDate uploadedAttachments:(NSArray<ScmSdkWorkOrderAttachment *> *)uploadedAttachments isReplaceAllAttachments:(BOOL)isReplaceAllAttachments callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateWorkOrderTemplateWithUploadedAttachments(workOrderTemplateId:checkItemId:params:currentDate:uploadedAttachments:isReplaceAllAttachments:callback:)")));

/**
 * @see[ScmSiteAudit.uploadAndUpdateAttachmentForComment]
 */
- (void)uploadAndUpdateAttachmentForCommentCommentId:(int32_t)commentId attachment:(ScmSdkAuditAttachmentNsData *)attachment callback:(void (^)(ScmSdkScResult<ScmSdkCommentAttachment *> *))callback __attribute__((swift_name("uploadAndUpdateAttachmentForComment(commentId:attachment:callback:)")));

/**
 * @see[ScmSiteAudit.uploadAttachmentForComment]
 */
- (void)uploadAttachmentForCommentAttachment:(ScmSdkAuditAttachmentNsData *)attachment callback:(void (^)(ScmSdkScResult<ScmSdkCommentAttachment *> *))callback __attribute__((swift_name("uploadAttachmentForComment(attachment:callback:)")));

/**
 * @see[ScmSiteAudit.uploadAttachmentForWorkOrderTemplate]
 */
- (void)uploadAttachmentForWorkOrderTemplateAttachment:(ScmSdkAuditAttachmentNsData *)attachment callback:(void (^)(ScmSdkScResult<ScmSdkWorkOrderAttachment *> *))callback __attribute__((swift_name("uploadAttachmentForWorkOrderTemplate(attachment:callback:)")));

/**
 * @see[ScmSiteAudit.uploadAttachmentsForComment]
 */
- (void)uploadAttachmentsForCommentAttachments:(NSArray<ScmSdkAuditAttachmentNsData *> *)attachments chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkScResult<ScmSdkCommentAttachment *> *> *> *))callback __attribute__((swift_name("uploadAttachmentsForComment(attachments:chunkCapacity:callback:)")));

/**
 * @see[ScmSiteAudit.uploadAttachmentsForWorkOrderTemplate]
 */
- (void)uploadAttachmentsForForWorkOrderTemplateAttachments:(NSArray<ScmSdkAuditAttachmentNsData *> *)attachments chunkCapacity:(int32_t)chunkCapacity callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkWorkOrderAttachment *> *> *))callback __attribute__((swift_name("uploadAttachmentsForForWorkOrderTemplate(attachments:chunkCapacity:callback:)")));

/**
 * @see [ScmSiteAudit.uploadSiteAudit]
 */
- (void)uploadSiteAuditAuditInfoId:(int64_t)auditInfoId finishDate:(NSString *)finishDate language:(NSString *)language uriToByteArrayConverter:(id<ScmSdkUriToByteArrayConverter>)uriToByteArrayConverter uploadMode:(id<ScmSdkSiteAuditBackgroundUploadMode>)uploadMode isAuditSavedWithoutAttachments:(BOOL)isAuditSavedWithoutAttachments onUpdate:(void (^)(ScmSdkAttachmentLoadingResult *))onUpdate result:(void (^)(ScmSdkScResult<ScmSdkPostAuditInfo *> *))result __attribute__((swift_name("uploadSiteAudit(auditInfoId:finishDate:language:uriToByteArrayConverter:uploadMode:isAuditSavedWithoutAttachments:onUpdate:result:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachmentNsDataMapper")))
@interface ScmSdkAuditAttachmentNsDataMapper : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkAuditAttachment *)mapModel:(ScmSdkAuditAttachmentNsData *)model __attribute__((swift_name("map(model:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateAuditAttachmentNsDataMapper")))
@interface ScmSdkUpdateAuditAttachmentNsDataMapper : ScmSdkBase
- (instancetype)initWithAuditAttachmentNsDataMapper:(ScmSdkAuditAttachmentNsDataMapper *)auditAttachmentNsDataMapper __attribute__((swift_name("init(auditAttachmentNsDataMapper:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkUpdateAuditAttachment *)mapModel:(ScmSdkUpdateAuditAttachmentNsData *)model __attribute__((swift_name("map(model:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachmentNsData")))
@interface ScmSdkAuditAttachmentNsData : ScmSdkBase
- (instancetype)initWithFileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType fileData:(NSData *)fileData __attribute__((swift_name("init(fileName:filePath:mimeType:fileData:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSData *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachmentNsData *)doCopyFileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType fileData:(NSData *)fileData __attribute__((swift_name("doCopy(fileName:filePath:mimeType:fileData:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSData *fileData __attribute__((swift_name("fileData")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *filePath __attribute__((swift_name("filePath")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAttachmentNsDataForUpdate")))
@interface ScmSdkAuditAttachmentNsDataForUpdate : ScmSdkBase
- (instancetype)initWithLocalId:(int32_t)localId auditAttachment:(ScmSdkAuditAttachmentNsData *)auditAttachment __attribute__((swift_name("init(localId:auditAttachment:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachmentNsData *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAttachmentNsDataForUpdate *)doCopyLocalId:(int32_t)localId auditAttachment:(ScmSdkAuditAttachmentNsData *)auditAttachment __attribute__((swift_name("doCopy(localId:auditAttachment:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAuditAttachmentNsData *auditAttachment __attribute__((swift_name("auditAttachment")));
@property (readonly) int32_t localId __attribute__((swift_name("localId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateAuditAttachmentNsData")))
@interface ScmSdkUpdateAuditAttachmentNsData : ScmSdkBase
- (instancetype)initWithAuditAttachment:(ScmSdkAuditAttachmentNsData *)auditAttachment isNeedToUpload:(BOOL)isNeedToUpload __attribute__((swift_name("init(auditAttachment:isNeedToUpload:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkAuditAttachmentNsData *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkUpdateAuditAttachmentNsData *)doCopyAuditAttachment:(ScmSdkAuditAttachmentNsData *)auditAttachment isNeedToUpload:(BOOL)isNeedToUpload __attribute__((swift_name("doCopy(auditAttachment:isNeedToUpload:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAuditAttachmentNsData *auditAttachment __attribute__((swift_name("auditAttachment")));
@property (readonly) BOOL isNeedToUpload __attribute__((swift_name("isNeedToUpload")));
@end


/**
 * Provide API for work with filters for invoices.
 * @see [ScmInvoiceFilters]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmInvoiceFiltersInteractor")))
@interface ScmSdkScmInvoiceFiltersInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScInvoiceFilters:(id<ScmSdkScmInvoiceFilters>)scInvoiceFilters __attribute__((swift_name("init(scInvoiceFilters:)"))) __attribute__((objc_designated_initializer));

/**
 * @see [ScmInvoiceFilters.addNewFilter]
 */
- (void)addNewFilterCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("addNewFilter(callback:)")));

/**
 * @see [ScmInvoiceFilters.applyFilter]
 */
- (void)applyFilterFilterId:(int32_t)filterId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("applyFilter(filterId:callback:)")));

/**
 * @see [ScmInvoiceFilters.refreshInvoicesFiltersData]
 */
- (void)getFilterFilterId:(int32_t)filterId callback:(void (^)(ScmSdkScResult<ScmSdkInvoicesFilter *> *))callback __attribute__((swift_name("getFilter(filterId:callback:)")));

/**
 * @see [ScmInvoiceFilters.refreshInvoicesFiltersData]
 */
- (void)refreshInvoicesFiltersDataCallback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("refreshInvoicesFiltersData(callback:)")));

/**
 * @see [ScmInvoiceFilters.removeFilter]
 */
- (void)removeFilterFilterId:(int32_t)filterId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("removeFilter(filterId:callback:)")));

/**
 * @see [ScmInvoiceFilters.resetFilter]
 */
- (void)resetFilterFilterId:(int32_t)filterId callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("resetFilter(filterId:callback:)")));

/**
 * @see [ScmInvoiceFilters.subscribe]
 */
- (ScmSdkScFlow<NSArray<ScmSdkInvoicesFilter *> *> *)subscribeInvoicesFilter __attribute__((swift_name("subscribeInvoicesFilter()")));

/**
 * @see [ScmInvoiceFilters.updateAssignedTo]
 */
- (void)updateAssignedToFilterId:(int32_t)filterId assignedTo:(NSArray<ScmSdkSelectedItem *> *)assignedTo callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateAssignedTo(filterId:assignedTo:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateCategories]
 */
- (void)updateCategoriesFilterId:(int32_t)filterId categories:(id<ScmSdkInvoiceFilterSelectedItemsState>)categories callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateCategories(filterId:categories:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateDistricts]
 */
- (void)updateDistrictsFilterId:(int32_t)filterId districts:(id<ScmSdkInvoiceFilterSelectedItemsState>)districts callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateDistricts(filterId:districts:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateMaxAmount]
 */
- (void)updateMaxAmountFilterId:(int32_t)filterId maxAmount:(NSString *)maxAmount callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateMaxAmount(filterId:maxAmount:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateMinAmount]
 */
- (void)updateMinAmountFilterId:(int32_t)filterId minAmount:(NSString *)minAmount callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateMinAmount(filterId:minAmount:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateMonthsAgo]
 */
- (void)updateMonthsAgoFilterId:(int32_t)filterId dateRange:(int32_t)dateRange callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateMonthsAgo(filterId:dateRange:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateName]
 */
- (void)updateNameFilterId:(int32_t)filterId name:(NSString *)name callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateName(filterId:name:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateProviders]
 */
- (void)updateProvidersFilterId:(int32_t)filterId providers:(id<ScmSdkInvoiceFilterSelectedItemsState>)providers callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateProviders(filterId:providers:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateSortBy]
 */
- (void)updateSortByFilterId:(int32_t)filterId sortByName:(NSString *)sortByName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateSortBy(filterId:sortByName:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateStatuses]
 */
- (void)updateStatusesFilterId:(int32_t)filterId statuses:(NSArray<ScmSdkSelectedItem *> *)statuses callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateStatuses(filterId:statuses:callback:)")));

/**
 * @see [ScmInvoiceFilters.updateTrades]
 */
- (void)updateTradesFilterId:(int32_t)filterId trades:(id<ScmSdkInvoiceFilterSelectedItemsState>)trades callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateTrades(filterId:trades:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide API to get additional information about invoice.
 * @see [ScmInvoicesInfo]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmInvoicesInfoIntercator")))
@interface ScmSdkScmInvoicesInfoIntercator : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScInvoiceInfo:(id<ScmSdkScmInvoicesInfo>)scInvoiceInfo __attribute__((swift_name("init(scInvoiceInfo:)"))) __attribute__((objc_designated_initializer));

/**
 * @see [ScmInvoicesInfo.getAttachments]
 */
- (void)getAttachmentsInvoiceId:(int32_t)invoiceId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkInvoiceAttachment *> *> *))callback __attribute__((swift_name("getAttachments(invoiceId:callback:)")));

/**
 *  @see [ScmInvoicesInfo.getCategories]
 */
- (void)getCategoriesInvoiceIds:(NSArray<ScmSdkInt *> *)invoiceIds callback:(void (^)(ScmSdkScResult<NSDictionary<ScmSdkInt *, NSString *> *> *))callback __attribute__((swift_name("getCategories(invoiceIds:callback:)")));

/**
 * @see [ScmInvoicesInfo.getEmails]
 */
- (void)getEmailsInvoiceId:(int32_t)invoiceId callback:(void (^)(ScmSdkScResult<NSArray<NSString *> *> *))callback __attribute__((swift_name("getEmails(invoiceId:callback:)")));

/**
 *  @see [ScmInvoicesInfo.getPredeterminedGlCodes]
 */
- (void)getPredeterminedGlCodesTradeId:(int32_t)tradeId callback:(void (^)(ScmSdkScResult<NSDictionary<NSString *, NSString *> *> *))callback __attribute__((swift_name("getPredeterminedGlCodes(tradeId:callback:)")));

/**
 *  @see [ScmInvoicesInfo.getUpdateInfo]
 */
- (void)getUpdateInfoInvoiceId:(int32_t)invoiceId categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<ScmSdkInvoiceUpdateInfo *> *))callback __attribute__((swift_name("getUpdateInfo(invoiceId:categoryName:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide API to get invoices.
 * @see [ScmInvoices]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmInvoicesInteractor")))
@interface ScmSdkScmInvoicesInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScInvoices:(id<ScmSdkScmInvoices>)scInvoices __attribute__((swift_name("init(scInvoices:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmInvoices.getInvoiceDetails]
 */
- (void)getInvoiceDetailsInvoiceId:(int32_t)invoiceId callback:(void (^)(ScmSdkScResult<ScmSdkInvoiceDetails *> *))callback __attribute__((swift_name("getInvoiceDetails(invoiceId:callback:)")));

/**
 * @see[ScmInvoices.getInvoices]
 */
- (void)getInvoicesCommand:(ScmSdkInvoiceLoadCommand *)command callback:(void (^)(ScmSdkScResult<ScmSdkInvoicesState *> *))callback __attribute__((swift_name("getInvoices(command:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide API to search invoices.
 * @see [ScmInvoicesSearch]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmInvoicesSearchIntercator")))
@interface ScmSdkScmInvoicesSearchIntercator : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScInvoicesSearch:(id<ScmSdkScmInvoicesSearch>)scInvoicesSearch __attribute__((swift_name("init(scInvoicesSearch:)"))) __attribute__((objc_designated_initializer));

/**
 * @see[ScmInvoicesSearch.searchByNumber]
 */
- (void)searchByNumberNumber:(NSString *)number callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkInvoice *> *> *))callback __attribute__((swift_name("searchByNumber(number:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * Provide API to change invoice Status and GlCode.
 * @see [ScmInvoiceUpdate]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmInvoicesUpdateIntercator")))
@interface ScmSdkScmInvoicesUpdateIntercator : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScInvoiceUpdate:(id<ScmSdkScmInvoiceUpdate>)scInvoiceUpdate __attribute__((swift_name("init(scInvoiceUpdate:)"))) __attribute__((objc_designated_initializer));

/**
 * @see [ScmInvoiceUpdate.approveInvoice]
 */
- (void)approveInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("approveInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.bulkApproveInvoices]
 */
- (void)bulkApproveInvoicesInvoiceIds:(NSArray<ScmSdkInt *> *)invoiceIds glCode:(NSString *)glCode comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("bulkApproveInvoices(invoiceIds:glCode:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.onHoldInvoice]
 */
- (void)onHoldInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("onHoldInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.rejectInvoice]
 */
- (void)rejectInvoiceInvoiceId:(int32_t)invoiceId isNotifyProvider:(BOOL)isNotifyProvider additionalEmails:(NSArray<NSString *> *)additionalEmails glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("rejectInvoice(invoiceId:isNotifyProvider:additionalEmails:glCode:additionalGlCodes:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.rejectInvoice]
 */
- (void)rejectInvoiceWithReasonInvoiceId:(int32_t)invoiceId isNotifyProvider:(BOOL)isNotifyProvider additionalEmails:(NSArray<NSString *> *)additionalEmails glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes rejectionReasonId:(ScmSdkInt * _Nullable)rejectionReasonId comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("rejectInvoiceWithReason(invoiceId:isNotifyProvider:additionalEmails:glCode:additionalGlCodes:rejectionReasonId:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.returnInvoice]
 */
- (void)returnInvoiceInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes comment:(NSString *)comment categoryName:(NSString *)categoryName callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("returnInvoice(invoiceId:glCode:additionalGlCodes:comment:categoryName:callback:)")));

/**
 * @see [ScmInvoiceUpdate.updateGlCode]
 */
- (void)updateGlCodeInvoiceId:(int32_t)invoiceId glCode:(NSString *)glCode categoryName:(NSString *)categoryName additionalGlCodes:(NSArray<ScmSdkInvoiceAdditionalGlCode *> * _Nullable)additionalGlCodes callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateGlCode(invoiceId:glCode:categoryName:additionalGlCodes:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * @see [ScmNotifications]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmNotificationsInteractor")))
@interface ScmSdkScmNotificationsInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmNotifications:(id<ScmSdkScmNotifications>)scmNotifications __attribute__((swift_name("init(scmNotifications:)"))) __attribute__((objc_designated_initializer));
- (void)deleteLocationNotificationDeviceParams:(ScmSdkDeviceParams *)deviceParams callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("deleteLocationNotification(deviceParams:callback:)")));
- (void)getNotificationSettingsLocationId:(int32_t)locationId deviceToken:(NSString *)deviceToken callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkNotificationSettings *> *> *))callback __attribute__((swift_name("getNotificationSettings(locationId:deviceToken:callback:)")));
- (void)isNotificationForCompletedWOEnabledCallback:(void (^)(ScmSdkScResult<ScmSdkBoolean *> *))callback __attribute__((swift_name("isNotificationForCompletedWOEnabled(callback:)")));
- (void)onRefreshTokenDeviceParams:(ScmSdkDeviceParams *)deviceParams callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("onRefreshToken(deviceParams:callback:)")));
- (void)saveLocationNotificationLocationId:(int32_t)locationId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("saveLocationNotification(locationId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:callback:)")));
- (void)subscribeLocationNotificationsCallback:(void (^)(ScmSdkScFlow<NSArray<ScmSdkLocationNotification *> *> *))callback __attribute__((swift_name("subscribeLocationNotifications(callback:)")));
- (void)updateNotificationSettingsDeviceParams:(ScmSdkDeviceParams *)deviceParams oldValues:(NSArray<ScmSdkNotificationSettings *> *)oldValues updateParams:(NSArray<ScmSdkNotificationSettings *> *)updateParams callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateNotificationSettings(deviceParams:oldValues:updateParams:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end


/**
 * @see [ScmNotificationsUnsubscribeFromPushes]
 */
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmNotificationsUnsubscribePush")))
@interface ScmSdkScmNotificationsUnsubscribePush : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScmNotifications:(id<ScmSdkScmNotificationsUnsubscribeFromPushes>)scmNotifications __attribute__((swift_name("init(scmNotifications:)"))) __attribute__((objc_designated_initializer));
- (void)unsubscribeFromPushesDeviceToken:(NSString *)deviceToken callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("unsubscribeFromPushes(deviceToken:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmLocationsInteractor")))
@interface ScmSdkScmLocationsInteractor : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithScLocations:(id<ScmSdkScmLocations>)scLocations __attribute__((swift_name("init(scLocations:)"))) __attribute__((objc_designated_initializer));
- (void)getDistrictsPagePage:(int32_t)page pageSize:(int32_t)pageSize search:(NSString *)search callback:(void (^)(ScmSdkScResult<ScmSdkDistrictsPage *> *))callback __attribute__((swift_name("getDistrictsPage(page:pageSize:search:callback:)")));
- (void)getFirstLocationOrNullCallback:(void (^)(ScmSdkScResult<ScmSdkFirstLocation *> *))callback __attribute__((swift_name("getFirstLocationOrNull(callback:)")));
- (void)getLocationByIdLocationId:(int32_t)locationId callback:(void (^)(ScmSdkScResult<ScmSdkLocationsPageLocation *> *))callback __attribute__((swift_name("getLocationById(locationId:callback:)")));
- (void)getLocationByStoreIdStoreId:(NSString *)storeId callback:(void (^)(ScmSdkScResult<ScmSdkLocationsPageLocation *> *))callback __attribute__((swift_name("getLocationByStoreId(storeId:callback:)")));
- (void)getLocationNotesLocationId:(int32_t)locationId callback:(void (^)(ScmSdkScResult<NSArray<ScmSdkNote *> *> *))callback __attribute__((swift_name("getLocationNotes(locationId:callback:)")));
- (void)getLocationsPagePage:(int32_t)page pageSize:(int32_t)pageSize search:(NSString *)search latitude:(ScmSdkDouble * _Nullable)latitude longitude:(ScmSdkDouble * _Nullable)longitude callback:(void (^)(ScmSdkScResult<ScmSdkLocationsPage *> *))callback __attribute__((swift_name("getLocationsPage(page:pageSize:search:latitude:longitude:callback:)")));
- (void)getStoreLocationByFeatureKeyFeatureKey:(NSString *)featureKey callback:(void (^)(ScmSdkScResult<ScmSdkLocationsPageLocation *> *))callback __attribute__((swift_name("getStoreLocationByFeatureKey(featureKey:callback:)")));
- (void)updateLocationNotesLocationId:(int32_t)locationId locNoteHeader:(ScmSdkKotlinPair<NSString *, NSString *> *)locNoteHeader callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateLocationNotes(locationId:locNoteHeader:callback:)")));
- (void)updateStoreLocationFeatureKey:(NSString *)featureKey location:(ScmSdkLocationsPageLocation *)location callback:(void (^)(ScmSdkScResult<id> *))callback __attribute__((swift_name("updateStoreLocation(featureKey:location:callback:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MigrationComponent")))
@interface ScmSdkMigrationComponent : ScmSdkBase
- (instancetype)initWithRootScope:(id<ScmSdkKodein_diDI>)rootScope __attribute__((swift_name("init(rootScope:)"))) __attribute__((objc_designated_initializer));
- (id<ScmSdkScmMigration>)provideMigration __attribute__((swift_name("provideMigration()")));
@end


/**
 * Provide API to get device specific information.
 */
__attribute__((swift_name("DeviceProvider")))
@protocol ScmSdkDeviceProvider
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateAuthorizationTokenToken:(NSString *)token completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("updateAuthorizationToken(token:completionHandler:)")));
@property (readonly) NSString *appRelease __attribute__((swift_name("appRelease")));

/**
 * Base token for authorization.
 */
@property (readonly) NSString *authorization __attribute__((swift_name("authorization")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) NSString *currentLanguage __attribute__((swift_name("currentLanguage")));
@property (readonly) NSString *deviceDescription __attribute__((swift_name("deviceDescription")));
@property (readonly) NSString *deviceId __attribute__((swift_name("deviceId")));
@property (readonly) NSString *deviceModel __attribute__((swift_name("deviceModel")));
@property (readonly) NSString *deviceTitle __attribute__((swift_name("deviceTitle")));
@property (readonly) NSString *languageCode __attribute__((swift_name("languageCode")));
@property (readonly) NSDictionary<NSString *, NSString *> *localizeFormatHeaders __attribute__((swift_name("localizeFormatHeaders")));
@property (readonly) NSString *osRelease __attribute__((swift_name("osRelease")));
@property (readonly) NSString *osTitle __attribute__((swift_name("osTitle")));
@property (readonly) NSString *uniqueId __attribute__((swift_name("uniqueId")));
@property (readonly) NSString *userAgent __attribute__((swift_name("userAgent")));
@end

__attribute__((swift_name("ProposalRepository")))
@protocol ScmSdkProposalRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProposalByWorkOrderIdWorkOrderId:(int32_t)workOrderId completionHandler:(void (^)(NSArray<ScmSdkProposal *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProposalByWorkOrderId(workOrderId:completionHandler:)")));
@end

__attribute__((swift_name("ReviewPromptRepository")))
@protocol ScmSdkReviewPromptRepository
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLastLoginsIsSuccess:(ScmSdkBoolean * _Nullable)isSuccess forLastDays:(ScmSdkInt * _Nullable)forLastDays completionHandler:(void (^)(NSArray<ScmSdkSdkLastLogins *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getLastLogins(isSuccess:forLastDays:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReviewsDeviceId:(NSString *)deviceId forLastDays:(ScmSdkInt * _Nullable)forLastDays completionHandler:(void (^)(NSArray<ScmSdkSdkReviews *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReviews(deviceId:forLastDays:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)postReviewReviewsParams:(ScmSdkReviewsParams *)reviewsParams completionHandler:(void (^)(ScmSdkSdkReviews * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("postReview(reviewsParams:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppConfirmSettings")))
@interface ScmSdkAppConfirmSettings : ScmSdkBase
- (instancetype)initWithIsShowRecipients:(BOOL)isShowRecipients isAddCopyRecipient:(BOOL)isAddCopyRecipient isDeleteCopyRecipients:(BOOL)isDeleteCopyRecipients isEmptyProviderEmailNotification:(BOOL)isEmptyProviderEmailNotification isEnableAdditionalCodes:(BOOL)isEnableAdditionalCodes isChangeableGlCode:(BOOL)isChangeableGlCode isEnableWo:(BOOL)isEnableWo isChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeablePrioritySetDefault:(BOOL)isChangeablePrioritySetDefault isChangeableNte:(BOOL)isChangeableNte isAllowChangeableCurrency:(BOOL)isAllowChangeableCurrency isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isCreateLinkedRequest:(BOOL)isCreateLinkedRequest isAvoidDispatching:(BOOL)isAvoidDispatching isEnablePo:(BOOL)isEnablePo isRequirePo:(BOOL)isRequirePo isEnableLabels:(BOOL)isEnableLabels isLabelsAsSelectOnly:(BOOL)isLabelsAsSelectOnly isEditWeatherType:(BOOL)isEditWeatherType __attribute__((swift_name("init(isShowRecipients:isAddCopyRecipient:isDeleteCopyRecipients:isEmptyProviderEmailNotification:isEnableAdditionalCodes:isChangeableGlCode:isEnableWo:isChangeableCategory:isChangeablePriority:isChangeablePrioritySetDefault:isChangeableNte:isAllowChangeableCurrency:isChangeableScheduledDate:isChangeableProvider:isCreateLinkedRequest:isAvoidDispatching:isEnablePo:isRequirePo:isEnableLabels:isLabelsAsSelectOnly:isEditWeatherType:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppConfirmSettings *)doCopyIsShowRecipients:(BOOL)isShowRecipients isAddCopyRecipient:(BOOL)isAddCopyRecipient isDeleteCopyRecipients:(BOOL)isDeleteCopyRecipients isEmptyProviderEmailNotification:(BOOL)isEmptyProviderEmailNotification isEnableAdditionalCodes:(BOOL)isEnableAdditionalCodes isChangeableGlCode:(BOOL)isChangeableGlCode isEnableWo:(BOOL)isEnableWo isChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeablePrioritySetDefault:(BOOL)isChangeablePrioritySetDefault isChangeableNte:(BOOL)isChangeableNte isAllowChangeableCurrency:(BOOL)isAllowChangeableCurrency isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isCreateLinkedRequest:(BOOL)isCreateLinkedRequest isAvoidDispatching:(BOOL)isAvoidDispatching isEnablePo:(BOOL)isEnablePo isRequirePo:(BOOL)isRequirePo isEnableLabels:(BOOL)isEnableLabels isLabelsAsSelectOnly:(BOOL)isLabelsAsSelectOnly isEditWeatherType:(BOOL)isEditWeatherType __attribute__((swift_name("doCopy(isShowRecipients:isAddCopyRecipient:isDeleteCopyRecipients:isEmptyProviderEmailNotification:isEnableAdditionalCodes:isChangeableGlCode:isEnableWo:isChangeableCategory:isChangeablePriority:isChangeablePrioritySetDefault:isChangeableNte:isAllowChangeableCurrency:isChangeableScheduledDate:isChangeableProvider:isCreateLinkedRequest:isAvoidDispatching:isEnablePo:isRequirePo:isEnableLabels:isLabelsAsSelectOnly:isEditWeatherType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isAddCopyRecipient __attribute__((swift_name("isAddCopyRecipient")));
@property (readonly) BOOL isAllowChangeableCurrency __attribute__((swift_name("isAllowChangeableCurrency")));
@property (readonly) BOOL isAvoidDispatching __attribute__((swift_name("isAvoidDispatching")));
@property (readonly) BOOL isChangeableCategory __attribute__((swift_name("isChangeableCategory")));
@property (readonly) BOOL isChangeableGlCode __attribute__((swift_name("isChangeableGlCode")));
@property (readonly) BOOL isChangeableNte __attribute__((swift_name("isChangeableNte")));
@property (readonly) BOOL isChangeablePriority __attribute__((swift_name("isChangeablePriority")));
@property (readonly) BOOL isChangeablePrioritySetDefault __attribute__((swift_name("isChangeablePrioritySetDefault")));
@property (readonly) BOOL isChangeableProvider __attribute__((swift_name("isChangeableProvider")));
@property (readonly) BOOL isChangeableScheduledDate __attribute__((swift_name("isChangeableScheduledDate")));
@property (readonly) BOOL isCreateLinkedRequest __attribute__((swift_name("isCreateLinkedRequest")));
@property (readonly) BOOL isDeleteCopyRecipients __attribute__((swift_name("isDeleteCopyRecipients")));
@property (readonly) BOOL isEditWeatherType __attribute__((swift_name("isEditWeatherType")));
@property (readonly) BOOL isEmptyProviderEmailNotification __attribute__((swift_name("isEmptyProviderEmailNotification")));
@property (readonly) BOOL isEnableAdditionalCodes __attribute__((swift_name("isEnableAdditionalCodes")));
@property (readonly) BOOL isEnableLabels __attribute__((swift_name("isEnableLabels")));
@property (readonly) BOOL isEnablePo __attribute__((swift_name("isEnablePo")));
@property (readonly) BOOL isEnableWo __attribute__((swift_name("isEnableWo")));
@property (readonly) BOOL isLabelsAsSelectOnly __attribute__((swift_name("isLabelsAsSelectOnly")));
@property (readonly) BOOL isRequirePo __attribute__((swift_name("isRequirePo")));
@property (readonly) BOOL isShowRecipients __attribute__((swift_name("isShowRecipients")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettings")))
@interface ScmSdkAppSettings : ScmSdkBase
- (instancetype)initWithIsAssetFirstWorkOrderCreation:(BOOL)isAssetFirstWorkOrderCreation isTurnOffDescription:(BOOL)isTurnOffDescription isEnableLocationNotes:(BOOL)isEnableLocationNotes isShowPrivateStoreNotes:(BOOL)isShowPrivateStoreNotes isAlwaysShowLocationNotes:(BOOL)isAlwaysShowLocationNotes isHidePriority:(BOOL)isHidePriority daysOfHistoryToDisplay:(int32_t)daysOfHistoryToDisplay confirmationMessage:(NSString * _Nullable)confirmationMessage customDuplicateMessage:(NSString * _Nullable)customDuplicateMessage showProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("init(isAssetFirstWorkOrderCreation:isTurnOffDescription:isEnableLocationNotes:isShowPrivateStoreNotes:isAlwaysShowLocationNotes:isHidePriority:daysOfHistoryToDisplay:confirmationMessage:customDuplicateMessage:showProviderPhoneNumber:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettings *)doCopyIsAssetFirstWorkOrderCreation:(BOOL)isAssetFirstWorkOrderCreation isTurnOffDescription:(BOOL)isTurnOffDescription isEnableLocationNotes:(BOOL)isEnableLocationNotes isShowPrivateStoreNotes:(BOOL)isShowPrivateStoreNotes isAlwaysShowLocationNotes:(BOOL)isAlwaysShowLocationNotes isHidePriority:(BOOL)isHidePriority daysOfHistoryToDisplay:(int32_t)daysOfHistoryToDisplay confirmationMessage:(NSString * _Nullable)confirmationMessage customDuplicateMessage:(NSString * _Nullable)customDuplicateMessage showProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("doCopy(isAssetFirstWorkOrderCreation:isTurnOffDescription:isEnableLocationNotes:isShowPrivateStoreNotes:isAlwaysShowLocationNotes:isHidePriority:daysOfHistoryToDisplay:confirmationMessage:customDuplicateMessage:showProviderPhoneNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable confirmationMessage __attribute__((swift_name("confirmationMessage")));
@property (readonly) NSString * _Nullable customDuplicateMessage __attribute__((swift_name("customDuplicateMessage")));
@property (readonly) int32_t daysOfHistoryToDisplay __attribute__((swift_name("daysOfHistoryToDisplay")));
@property (readonly) BOOL isAlwaysShowLocationNotes __attribute__((swift_name("isAlwaysShowLocationNotes")));
@property (readonly) BOOL isAssetFirstWorkOrderCreation __attribute__((swift_name("isAssetFirstWorkOrderCreation")));
@property (readonly) BOOL isEnableLocationNotes __attribute__((swift_name("isEnableLocationNotes")));
@property (readonly) BOOL isHidePriority __attribute__((swift_name("isHidePriority")));
@property (readonly) BOOL isShowPrivateStoreNotes __attribute__((swift_name("isShowPrivateStoreNotes")));
@property (readonly) BOOL isTurnOffDescription __attribute__((swift_name("isTurnOffDescription")));
@property (readonly) BOOL showProviderPhoneNumber __attribute__((swift_name("showProviderPhoneNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DashboardSettings")))
@interface ScmSdkDashboardSettings : ScmSdkBase
- (instancetype)initWithAppSettings:(ScmSdkAppSettings *)appSettings appConfirmSettings:(ScmSdkAppConfirmSettings *)appConfirmSettings noteSettings:(ScmSdkNoteSettings *)noteSettings __attribute__((swift_name("init(appSettings:appConfirmSettings:noteSettings:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkAppSettings *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppConfirmSettings *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteSettings *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkDashboardSettings *)doCopyAppSettings:(ScmSdkAppSettings *)appSettings appConfirmSettings:(ScmSdkAppConfirmSettings *)appConfirmSettings noteSettings:(ScmSdkNoteSettings *)noteSettings __attribute__((swift_name("doCopy(appSettings:appConfirmSettings:noteSettings:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkAppConfirmSettings *appConfirmSettings __attribute__((swift_name("appConfirmSettings")));
@property (readonly) ScmSdkAppSettings *appSettings __attribute__((swift_name("appSettings")));
@property (readonly) ScmSdkNoteSettings *noteSettings __attribute__((swift_name("noteSettings")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbackDashboardSettings")))
@interface ScmSdkFeedbackDashboardSettings : ScmSdkBase
- (instancetype)initWithEnableFeedback:(BOOL)enableFeedback answeringCustomQuestionOptional:(BOOL)answeringCustomQuestionOptional categoriesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)categoriesToExclude tradesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)tradesToExclude prioritiesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)prioritiesToExclude __attribute__((swift_name("init(enableFeedback:answeringCustomQuestionOptional:categoriesToExclude:tradesToExclude:prioritiesToExclude:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedbackDashboardSettings *)doCopyEnableFeedback:(BOOL)enableFeedback answeringCustomQuestionOptional:(BOOL)answeringCustomQuestionOptional categoriesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)categoriesToExclude tradesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)tradesToExclude prioritiesToExclude:(NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *)prioritiesToExclude __attribute__((swift_name("doCopy(enableFeedback:answeringCustomQuestionOptional:categoriesToExclude:tradesToExclude:prioritiesToExclude:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL answeringCustomQuestionOptional __attribute__((swift_name("answeringCustomQuestionOptional")));
@property (readonly) NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *categoriesToExclude __attribute__((swift_name("categoriesToExclude")));
@property (readonly) BOOL enableFeedback __attribute__((swift_name("enableFeedback")));
@property (readonly) NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *prioritiesToExclude __attribute__((swift_name("prioritiesToExclude")));
@property (readonly) NSArray<ScmSdkFeedbackDashboardSettingsFeedbackValue *> *tradesToExclude __attribute__((swift_name("tradesToExclude")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FeedbackDashboardSettings.FeedbackValue")))
@interface ScmSdkFeedbackDashboardSettingsFeedbackValue : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name __attribute__((swift_name("init(id:name:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkFeedbackDashboardSettingsFeedbackValue *)doCopyId:(int32_t)id name:(NSString *)name __attribute__((swift_name("doCopy(id:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteSettings")))
@interface ScmSdkNoteSettings : ScmSdkBase
- (instancetype)initWithIsMaskEmail:(BOOL)isMaskEmail isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone __attribute__((swift_name("init(isMaskEmail:isMaskMoney:isMaskPhone:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteSettings *)doCopyIsMaskEmail:(BOOL)isMaskEmail isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone __attribute__((swift_name("doCopy(isMaskEmail:isMaskMoney:isMaskPhone:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isMaskEmail __attribute__((swift_name("isMaskEmail")));
@property (readonly) BOOL isMaskMoney __attribute__((swift_name("isMaskMoney")));
@property (readonly) BOOL isMaskPhone __attribute__((swift_name("isMaskPhone")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UpdateProfileReason")))
@interface ScmSdkUpdateProfileReason : ScmSdkKotlinEnum<ScmSdkUpdateProfileReason *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkUpdateProfileReason *login __attribute__((swift_name("login")));
@property (class, readonly) ScmSdkUpdateProfileReason *refresh __attribute__((swift_name("refresh")));
+ (ScmSdkKotlinArray<ScmSdkUpdateProfileReason *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("CoreTimeoutCause")))
@protocol ScmSdkCoreTimeoutCause
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoreTimeoutCauseConnectTimeout")))
@interface ScmSdkCoreTimeoutCauseConnectTimeout : ScmSdkBase <ScmSdkCoreTimeoutCause>
- (instancetype)initWithMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCoreTimeoutCauseConnectTimeout *)doCopyMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("doCopy(message:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoreTimeoutCauseHttpRequestTimeout")))
@interface ScmSdkCoreTimeoutCauseHttpRequestTimeout : ScmSdkBase <ScmSdkCoreTimeoutCause>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)httpRequestTimeout __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkCoreTimeoutCauseHttpRequestTimeout *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoreTimeoutCauseSocketTimeout")))
@interface ScmSdkCoreTimeoutCauseSocketTimeout : ScmSdkBase <ScmSdkCoreTimeoutCause>
- (instancetype)initWithMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinThrowable * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCoreTimeoutCauseSocketTimeout *)doCopyMessage:(NSString *)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("doCopy(message:cause:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString *message __attribute__((swift_name("message")));
@end


/**
 * Provide platform-specific exceptions API.
 */
__attribute__((swift_name("ExceptionsProvider")))
@protocol ScmSdkExceptionsProvider
@required
- (NSString *)getErrorMessageThrowable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("getErrorMessage(throwable:)")));
- (BOOL)isNetworkConnectionErrorThrowable:(ScmSdkKotlinThrowable *)throwable __attribute__((swift_name("isNetworkConnectionError(throwable:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccountLocal")))
@interface ScmSdkAccountLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isUniversalUser:(BOOL)isUniversalUser __attribute__((swift_name("init(id:isUniversalUser:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAccountLocal *)doCopyId:(int32_t)id isUniversalUser:(BOOL)isUniversalUser __attribute__((swift_name("doCopy(id:isUniversalUser:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isUniversalUser __attribute__((swift_name("isUniversalUser")));
@end

__attribute__((swift_name("RuntimeTransacter")))
@protocol ScmSdkRuntimeTransacter
@required
- (void)transactionNoEnclosing:(BOOL)noEnclosing body:(void (^)(id<ScmSdkRuntimeTransactionWithoutReturn>))body __attribute__((swift_name("transaction(noEnclosing:body:)")));
- (id _Nullable)transactionWithResultNoEnclosing:(BOOL)noEnclosing bodyWithReturn:(id _Nullable (^)(id<ScmSdkRuntimeTransactionWithReturn>))bodyWithReturn __attribute__((swift_name("transactionWithResult(noEnclosing:bodyWithReturn:)")));
@end

__attribute__((swift_name("AccountQueries")))
@protocol ScmSdkAccountQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (ScmSdkRuntimeQuery<ScmSdkAccountLocal *> *)getAccount __attribute__((swift_name("getAccount()")));
- (ScmSdkRuntimeQuery<id> *)getAccountMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *))mapper __attribute__((swift_name("getAccount(mapper:)")));
- (void)insertAccountAccountLocal:(ScmSdkAccountLocal *)AccountLocal __attribute__((swift_name("insertAccount(AccountLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppConfirmSettingsLocal")))
@interface ScmSdkAppConfirmSettingsLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isShowRecipients:(BOOL)isShowRecipients isAddCopyRecipient:(BOOL)isAddCopyRecipient isDeleteCopyRecipients:(BOOL)isDeleteCopyRecipients isEmptyProviderEmailNotification:(BOOL)isEmptyProviderEmailNotification isEnableAdditionalCodes:(BOOL)isEnableAdditionalCodes isChangeableGlCode:(BOOL)isChangeableGlCode isEnableWo:(BOOL)isEnableWo isChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeablePrioritySetDefault:(BOOL)isChangeablePrioritySetDefault isChangeableNte:(BOOL)isChangeableNte isAllowChangeableCurrency:(BOOL)isAllowChangeableCurrency isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isCreateLinkedRequest:(BOOL)isCreateLinkedRequest isAvoidDispatching:(BOOL)isAvoidDispatching isEnablePo:(BOOL)isEnablePo isRequirePo:(BOOL)isRequirePo isEnableLabels:(BOOL)isEnableLabels isLabelsAsSelectOnly:(BOOL)isLabelsAsSelectOnly isEditWeatherType:(BOOL)isEditWeatherType __attribute__((swift_name("init(id:isShowRecipients:isAddCopyRecipient:isDeleteCopyRecipients:isEmptyProviderEmailNotification:isEnableAdditionalCodes:isChangeableGlCode:isEnableWo:isChangeableCategory:isChangeablePriority:isChangeablePrioritySetDefault:isChangeableNte:isAllowChangeableCurrency:isChangeableScheduledDate:isChangeableProvider:isCreateLinkedRequest:isAvoidDispatching:isEnablePo:isRequirePo:isEnableLabels:isLabelsAsSelectOnly:isEditWeatherType:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppConfirmSettingsLocal *)doCopyId:(int32_t)id isShowRecipients:(BOOL)isShowRecipients isAddCopyRecipient:(BOOL)isAddCopyRecipient isDeleteCopyRecipients:(BOOL)isDeleteCopyRecipients isEmptyProviderEmailNotification:(BOOL)isEmptyProviderEmailNotification isEnableAdditionalCodes:(BOOL)isEnableAdditionalCodes isChangeableGlCode:(BOOL)isChangeableGlCode isEnableWo:(BOOL)isEnableWo isChangeableCategory:(BOOL)isChangeableCategory isChangeablePriority:(BOOL)isChangeablePriority isChangeablePrioritySetDefault:(BOOL)isChangeablePrioritySetDefault isChangeableNte:(BOOL)isChangeableNte isAllowChangeableCurrency:(BOOL)isAllowChangeableCurrency isChangeableScheduledDate:(BOOL)isChangeableScheduledDate isChangeableProvider:(BOOL)isChangeableProvider isCreateLinkedRequest:(BOOL)isCreateLinkedRequest isAvoidDispatching:(BOOL)isAvoidDispatching isEnablePo:(BOOL)isEnablePo isRequirePo:(BOOL)isRequirePo isEnableLabels:(BOOL)isEnableLabels isLabelsAsSelectOnly:(BOOL)isLabelsAsSelectOnly isEditWeatherType:(BOOL)isEditWeatherType __attribute__((swift_name("doCopy(id:isShowRecipients:isAddCopyRecipient:isDeleteCopyRecipients:isEmptyProviderEmailNotification:isEnableAdditionalCodes:isChangeableGlCode:isEnableWo:isChangeableCategory:isChangeablePriority:isChangeablePrioritySetDefault:isChangeableNte:isAllowChangeableCurrency:isChangeableScheduledDate:isChangeableProvider:isCreateLinkedRequest:isAvoidDispatching:isEnablePo:isRequirePo:isEnableLabels:isLabelsAsSelectOnly:isEditWeatherType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isAddCopyRecipient __attribute__((swift_name("isAddCopyRecipient")));
@property (readonly) BOOL isAllowChangeableCurrency __attribute__((swift_name("isAllowChangeableCurrency")));
@property (readonly) BOOL isAvoidDispatching __attribute__((swift_name("isAvoidDispatching")));
@property (readonly) BOOL isChangeableCategory __attribute__((swift_name("isChangeableCategory")));
@property (readonly) BOOL isChangeableGlCode __attribute__((swift_name("isChangeableGlCode")));
@property (readonly) BOOL isChangeableNte __attribute__((swift_name("isChangeableNte")));
@property (readonly) BOOL isChangeablePriority __attribute__((swift_name("isChangeablePriority")));
@property (readonly) BOOL isChangeablePrioritySetDefault __attribute__((swift_name("isChangeablePrioritySetDefault")));
@property (readonly) BOOL isChangeableProvider __attribute__((swift_name("isChangeableProvider")));
@property (readonly) BOOL isChangeableScheduledDate __attribute__((swift_name("isChangeableScheduledDate")));
@property (readonly) BOOL isCreateLinkedRequest __attribute__((swift_name("isCreateLinkedRequest")));
@property (readonly) BOOL isDeleteCopyRecipients __attribute__((swift_name("isDeleteCopyRecipients")));
@property (readonly) BOOL isEditWeatherType __attribute__((swift_name("isEditWeatherType")));
@property (readonly) BOOL isEmptyProviderEmailNotification __attribute__((swift_name("isEmptyProviderEmailNotification")));
@property (readonly) BOOL isEnableAdditionalCodes __attribute__((swift_name("isEnableAdditionalCodes")));
@property (readonly) BOOL isEnableLabels __attribute__((swift_name("isEnableLabels")));
@property (readonly) BOOL isEnablePo __attribute__((swift_name("isEnablePo")));
@property (readonly) BOOL isEnableWo __attribute__((swift_name("isEnableWo")));
@property (readonly) BOOL isLabelsAsSelectOnly __attribute__((swift_name("isLabelsAsSelectOnly")));
@property (readonly) BOOL isRequirePo __attribute__((swift_name("isRequirePo")));
@property (readonly) BOOL isShowRecipients __attribute__((swift_name("isShowRecipients")));
@end

__attribute__((swift_name("AppConfirmSettingsQueries")))
@protocol ScmSdkAppConfirmSettingsQueries <ScmSdkRuntimeTransacter>
@required
- (void)delete __attribute__((swift_name("delete()")));
- (ScmSdkRuntimeQuery<ScmSdkAppConfirmSettingsLocal *> *)getAppConfirmSettings __attribute__((swift_name("getAppConfirmSettings()")));
- (ScmSdkRuntimeQuery<id> *)getAppConfirmSettingsMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getAppConfirmSettings(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAppConfirmSettingsLocal *> *)getAppConfirmSettingsByIdId:(int32_t)id __attribute__((swift_name("getAppConfirmSettingsById(id:)")));
- (ScmSdkRuntimeQuery<id> *)getAppConfirmSettingsByIdId:(int32_t)id mapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getAppConfirmSettingsById(id:mapper:)")));
- (void)insertAppConfirmSettingsAppConfirmSettingsLocal:(ScmSdkAppConfirmSettingsLocal *)AppConfirmSettingsLocal __attribute__((swift_name("insertAppConfirmSettings(AppConfirmSettingsLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AppSettingsLocal")))
@interface ScmSdkAppSettingsLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isAssetFirstWorkOrderCreation:(BOOL)isAssetFirstWorkOrderCreation isTurnOffDescription:(BOOL)isTurnOffDescription isEnableLocationNotes:(BOOL)isEnableLocationNotes isShowPrivateStoreNotes:(BOOL)isShowPrivateStoreNotes isAlwaysShowLocationNotes:(BOOL)isAlwaysShowLocationNotes isHidePriority:(BOOL)isHidePriority daysOfHistoryToDisplay:(int32_t)daysOfHistoryToDisplay confirmationMessage:(NSString * _Nullable)confirmationMessage customDuplicateMessage:(NSString * _Nullable)customDuplicateMessage showProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("init(id:isAssetFirstWorkOrderCreation:isTurnOffDescription:isEnableLocationNotes:isShowPrivateStoreNotes:isAlwaysShowLocationNotes:isHidePriority:daysOfHistoryToDisplay:confirmationMessage:customDuplicateMessage:showProviderPhoneNumber:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAppSettingsLocal *)doCopyId:(int32_t)id isAssetFirstWorkOrderCreation:(BOOL)isAssetFirstWorkOrderCreation isTurnOffDescription:(BOOL)isTurnOffDescription isEnableLocationNotes:(BOOL)isEnableLocationNotes isShowPrivateStoreNotes:(BOOL)isShowPrivateStoreNotes isAlwaysShowLocationNotes:(BOOL)isAlwaysShowLocationNotes isHidePriority:(BOOL)isHidePriority daysOfHistoryToDisplay:(int32_t)daysOfHistoryToDisplay confirmationMessage:(NSString * _Nullable)confirmationMessage customDuplicateMessage:(NSString * _Nullable)customDuplicateMessage showProviderPhoneNumber:(BOOL)showProviderPhoneNumber __attribute__((swift_name("doCopy(id:isAssetFirstWorkOrderCreation:isTurnOffDescription:isEnableLocationNotes:isShowPrivateStoreNotes:isAlwaysShowLocationNotes:isHidePriority:daysOfHistoryToDisplay:confirmationMessage:customDuplicateMessage:showProviderPhoneNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable confirmationMessage __attribute__((swift_name("confirmationMessage")));
@property (readonly) NSString * _Nullable customDuplicateMessage __attribute__((swift_name("customDuplicateMessage")));
@property (readonly) int32_t daysOfHistoryToDisplay __attribute__((swift_name("daysOfHistoryToDisplay")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isAlwaysShowLocationNotes __attribute__((swift_name("isAlwaysShowLocationNotes")));
@property (readonly) BOOL isAssetFirstWorkOrderCreation __attribute__((swift_name("isAssetFirstWorkOrderCreation")));
@property (readonly) BOOL isEnableLocationNotes __attribute__((swift_name("isEnableLocationNotes")));
@property (readonly) BOOL isHidePriority __attribute__((swift_name("isHidePriority")));
@property (readonly) BOOL isShowPrivateStoreNotes __attribute__((swift_name("isShowPrivateStoreNotes")));
@property (readonly) BOOL isTurnOffDescription __attribute__((swift_name("isTurnOffDescription")));
@property (readonly) BOOL showProviderPhoneNumber __attribute__((swift_name("showProviderPhoneNumber")));
@end

__attribute__((swift_name("AppSettingsQueries")))
@protocol ScmSdkAppSettingsQueries <ScmSdkRuntimeTransacter>
@required
- (void)delete __attribute__((swift_name("delete()")));
- (ScmSdkRuntimeQuery<ScmSdkAppSettingsLocal *> *)getAppSettings __attribute__((swift_name("getAppSettings()")));
- (ScmSdkRuntimeQuery<id> *)getAppSettingsMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *))mapper __attribute__((swift_name("getAppSettings(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAppSettingsLocal *> *)getAppSettingsByIdId:(int32_t)id __attribute__((swift_name("getAppSettingsById(id:)")));
- (ScmSdkRuntimeQuery<id> *)getAppSettingsByIdId:(int32_t)id mapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *))mapper __attribute__((swift_name("getAppSettingsById(id:mapper:)")));
- (void)insertAppSettingsAppSettingsLocal:(ScmSdkAppSettingsLocal *)AppSettingsLocal __attribute__((swift_name("insertAppSettings(AppSettingsLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NoteSettingsLocal")))
@interface ScmSdkNoteSettingsLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone isMaskEmail:(BOOL)isMaskEmail __attribute__((swift_name("init(id:isMaskMoney:isMaskPhone:isMaskEmail:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkNoteSettingsLocal *)doCopyId:(int32_t)id isMaskMoney:(BOOL)isMaskMoney isMaskPhone:(BOOL)isMaskPhone isMaskEmail:(BOOL)isMaskEmail __attribute__((swift_name("doCopy(id:isMaskMoney:isMaskPhone:isMaskEmail:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isMaskEmail __attribute__((swift_name("isMaskEmail")));
@property (readonly) BOOL isMaskMoney __attribute__((swift_name("isMaskMoney")));
@property (readonly) BOOL isMaskPhone __attribute__((swift_name("isMaskPhone")));
@end

__attribute__((swift_name("NoteSettingsQueries")))
@protocol ScmSdkNoteSettingsQueries <ScmSdkRuntimeTransacter>
@required
- (void)delete __attribute__((swift_name("delete()")));
- (ScmSdkRuntimeQuery<ScmSdkNoteSettingsLocal *> *)getNoteSettings __attribute__((swift_name("getNoteSettings()")));
- (ScmSdkRuntimeQuery<id> *)getNoteSettingsMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getNoteSettings(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkNoteSettingsLocal *> *)getNoteSettingsByIdId:(int32_t)id __attribute__((swift_name("getNoteSettingsById(id:)")));
- (ScmSdkRuntimeQuery<id> *)getNoteSettingsByIdId:(int32_t)id mapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getNoteSettingsById(id:mapper:)")));
- (void)insertNoteSettingsNoteSettingsLocal:(ScmSdkNoteSettingsLocal *)NoteSettingsLocal __attribute__((swift_name("insertNoteSettings(NoteSettingsLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileFeaturesLocal")))
@interface ScmSdkProfileFeaturesLocal : ScmSdkBase
- (instancetype)initWithIsProposalsEnabled:(BOOL)isProposalsEnabled isAlertsEnabled:(BOOL)isAlertsEnabled isDecisionEngineEnabled:(BOOL)isDecisionEngineEnabled isFeedbackEnabled:(BOOL)isFeedbackEnabled isAssetTaggingEnabled:(BOOL)isAssetTaggingEnabled isCreateWObyAssetTagEnabled:(BOOL)isCreateWObyAssetTagEnabled isSiteAuditEmailReportEnabled:(BOOL)isSiteAuditEmailReportEnabled isProposalApproveReasonEnabled:(BOOL)isProposalApproveReasonEnabled isVideoCapabilityEnabled:(BOOL)isVideoCapabilityEnabled isDecisionTreeDashEnabled:(BOOL)isDecisionTreeDashEnabled isProposalAssignReasonEnabled:(BOOL)isProposalAssignReasonEnabled isProviderFeedbackEnabled:(BOOL)isProviderFeedbackEnabled isShowReviewsCounterEnabled:(BOOL)isShowReviewsCounterEnabled isInventoryManagementEnabled:(BOOL)isInventoryManagementEnabled isEulaLoginEnabled:(BOOL)isEulaLoginEnabled isSitePlanningEnabled:(BOOL)isSitePlanningEnabled isShowAssignedTechniciansEnabled:(BOOL)isShowAssignedTechniciansEnabled isShowInAppTutorialEnabled:(BOOL)isShowInAppTutorialEnabled isSitePlanningV2Enabled:(BOOL)isSitePlanningV2Enabled isDoNotDispatchEnabled:(BOOL)isDoNotDispatchEnabled isFeedbackCustomQuestionsEnabled:(BOOL)isFeedbackCustomQuestionsEnabled isBadgeScanningEnabled:(BOOL)isBadgeScanningEnabled isShowWeatherTypeEnabled:(BOOL)isShowWeatherTypeEnabled isSiteAccessRulesAdministrationEnabled:(BOOL)isSiteAccessRulesAdministrationEnabled isChecklistAssetTasksEnabled:(BOOL)isChecklistAssetTasksEnabled isIgnoreAssetTypeIdEnabled:(BOOL)isIgnoreAssetTypeIdEnabled isAssetFirstMobileEnabled:(BOOL)isAssetFirstMobileEnabled isMultipleAssetsPerWorkOrderEnabled:(BOOL)isMultipleAssetsPerWorkOrderEnabled isScMobileValidateMultipleAssetPmOnlyEnabled:(BOOL)isScMobileValidateMultipleAssetPmOnlyEnabled isHideSiteAuditEnabled:(BOOL)isHideSiteAuditEnabled isInvoicesEnabled:(BOOL)isInvoicesEnabled isInvoiceApprovalCommentEnabled:(BOOL)isInvoiceApprovalCommentEnabled isInvoiceMultiLineGLCodeEnabled:(BOOL)isInvoiceMultiLineGLCodeEnabled isInvoiceRejectNotificationEnabled:(BOOL)isInvoiceRejectNotificationEnabled isInvoiceSupportIntelligenceEnabled:(BOOL)isInvoiceSupportIntelligenceEnabled isOnOffShoreInvoiceItemsEnabled:(BOOL)isOnOffShoreInvoiceItemsEnabled isProposalHistoryInvDetailsEnabled:(BOOL)isProposalHistoryInvDetailsEnabled isMLIReturnButtonForOpenInvoice:(BOOL)isMLIReturnButtonForOpenInvoice isInvoicesWOAssignee:(BOOL)isInvoicesWOAssignee isHideExcludedCategories:(BOOL)isHideExcludedCategories isClosedLocationsEnabled:(BOOL)isClosedLocationsEnabled isNotificationForCompletedWOEnabled:(BOOL)isNotificationForCompletedWOEnabled isDashboardSettings2Mobile:(BOOL)isDashboardSettings2Mobile isLocalizationAddressFormatV1Enabled:(BOOL)isLocalizationAddressFormatV1Enabled isCurrencyCodeSupportV1Enabled:(BOOL)isCurrencyCodeSupportV1Enabled isSitePlanningAddYearEnabled:(BOOL)isSitePlanningAddYearEnabled isDateFormatMobileEnabled:(BOOL)isDateFormatMobileEnabled isSCMMobileRadiusMeasure:(BOOL)isSCMMobileRadiusMeasure isMobilePhoneFormat:(BOOL)isMobilePhoneFormat isDecimalSeparatorV2:(BOOL)isDecimalSeparatorV2 isPinnedNotes:(BOOL)isPinnedNotes isNameToLocationId:(BOOL)isNameToLocationId isNoPhoneWhenWoCreated:(BOOL)isNoPhoneWhenWoCreated limitStatusesByTrade:(BOOL)limitStatusesByTrade isAssetInventoryV2Enabled:(BOOL)isAssetInventoryV2Enabled isDashboardFeedbackFilters:(BOOL)isDashboardFeedbackFilters isSiteAuditStatus:(BOOL)isSiteAuditStatus isAssetStandardTypesBrands:(BOOL)isAssetStandardTypesBrands isInvoiceRejectionReason:(BOOL)isInvoiceRejectionReason isSiteAuditV2Enabled:(BOOL)isSiteAuditV2Enabled isMaxCompressionQuality:(BOOL)isMaxCompressionQuality isUserWOPermissionSCM:(BOOL)isUserWOPermissionSCM isAssetReadingsEnabled:(BOOL)isAssetReadingsEnabled isSiteAuditBackgroundService:(BOOL)isSiteAuditBackgroundService isSCMGainsightPX:(BOOL)isSCMGainsightPX isBudgetInsightsView:(BOOL)isBudgetInsightsView isReasonForReassignmentDefaultOther:(BOOL)isReasonForReassignmentDefaultOther isDashboardAssociationMobile:(BOOL)isDashboardAssociationMobile isPromptReview:(BOOL)isPromptReview isEasierAssetAttachmentEnabled:(BOOL)isEasierAssetAttachmentEnabled isRemoveSecuritySCM:(BOOL)isRemoveSecuritySCM isSiteAuditUnsavedScm:(BOOL)isSiteAuditUnsavedScm __attribute__((swift_name("init(isProposalsEnabled:isAlertsEnabled:isDecisionEngineEnabled:isFeedbackEnabled:isAssetTaggingEnabled:isCreateWObyAssetTagEnabled:isSiteAuditEmailReportEnabled:isProposalApproveReasonEnabled:isVideoCapabilityEnabled:isDecisionTreeDashEnabled:isProposalAssignReasonEnabled:isProviderFeedbackEnabled:isShowReviewsCounterEnabled:isInventoryManagementEnabled:isEulaLoginEnabled:isSitePlanningEnabled:isShowAssignedTechniciansEnabled:isShowInAppTutorialEnabled:isSitePlanningV2Enabled:isDoNotDispatchEnabled:isFeedbackCustomQuestionsEnabled:isBadgeScanningEnabled:isShowWeatherTypeEnabled:isSiteAccessRulesAdministrationEnabled:isChecklistAssetTasksEnabled:isIgnoreAssetTypeIdEnabled:isAssetFirstMobileEnabled:isMultipleAssetsPerWorkOrderEnabled:isScMobileValidateMultipleAssetPmOnlyEnabled:isHideSiteAuditEnabled:isInvoicesEnabled:isInvoiceApprovalCommentEnabled:isInvoiceMultiLineGLCodeEnabled:isInvoiceRejectNotificationEnabled:isInvoiceSupportIntelligenceEnabled:isOnOffShoreInvoiceItemsEnabled:isProposalHistoryInvDetailsEnabled:isMLIReturnButtonForOpenInvoice:isInvoicesWOAssignee:isHideExcludedCategories:isClosedLocationsEnabled:isNotificationForCompletedWOEnabled:isDashboardSettings2Mobile:isLocalizationAddressFormatV1Enabled:isCurrencyCodeSupportV1Enabled:isSitePlanningAddYearEnabled:isDateFormatMobileEnabled:isSCMMobileRadiusMeasure:isMobilePhoneFormat:isDecimalSeparatorV2:isPinnedNotes:isNameToLocationId:isNoPhoneWhenWoCreated:limitStatusesByTrade:isAssetInventoryV2Enabled:isDashboardFeedbackFilters:isSiteAuditStatus:isAssetStandardTypesBrands:isInvoiceRejectionReason:isSiteAuditV2Enabled:isMaxCompressionQuality:isUserWOPermissionSCM:isAssetReadingsEnabled:isSiteAuditBackgroundService:isSCMGainsightPX:isBudgetInsightsView:isReasonForReassignmentDefaultOther:isDashboardAssociationMobile:isPromptReview:isEasierAssetAttachmentEnabled:isRemoveSecuritySCM:isSiteAuditUnsavedScm:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component28 __attribute__((swift_name("component28()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component29 __attribute__((swift_name("component29()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component30 __attribute__((swift_name("component30()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component31 __attribute__((swift_name("component31()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component32 __attribute__((swift_name("component32()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component33 __attribute__((swift_name("component33()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component34 __attribute__((swift_name("component34()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component35 __attribute__((swift_name("component35()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component36 __attribute__((swift_name("component36()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component37 __attribute__((swift_name("component37()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component38 __attribute__((swift_name("component38()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component39 __attribute__((swift_name("component39()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component40 __attribute__((swift_name("component40()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component41 __attribute__((swift_name("component41()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component42 __attribute__((swift_name("component42()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component43 __attribute__((swift_name("component43()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component44 __attribute__((swift_name("component44()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component45 __attribute__((swift_name("component45()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component46 __attribute__((swift_name("component46()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component47 __attribute__((swift_name("component47()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component48 __attribute__((swift_name("component48()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component49 __attribute__((swift_name("component49()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component50 __attribute__((swift_name("component50()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component51 __attribute__((swift_name("component51()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component52 __attribute__((swift_name("component52()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component53 __attribute__((swift_name("component53()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component54 __attribute__((swift_name("component54()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component55 __attribute__((swift_name("component55()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component56 __attribute__((swift_name("component56()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component57 __attribute__((swift_name("component57()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component58 __attribute__((swift_name("component58()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component59 __attribute__((swift_name("component59()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component60 __attribute__((swift_name("component60()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component61 __attribute__((swift_name("component61()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component62 __attribute__((swift_name("component62()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component63 __attribute__((swift_name("component63()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component64 __attribute__((swift_name("component64()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component65 __attribute__((swift_name("component65()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component66 __attribute__((swift_name("component66()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component67 __attribute__((swift_name("component67()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component68 __attribute__((swift_name("component68()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component69 __attribute__((swift_name("component69()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component70 __attribute__((swift_name("component70()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component71 __attribute__((swift_name("component71()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component72 __attribute__((swift_name("component72()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProfileFeaturesLocal *)doCopyIsProposalsEnabled:(BOOL)isProposalsEnabled isAlertsEnabled:(BOOL)isAlertsEnabled isDecisionEngineEnabled:(BOOL)isDecisionEngineEnabled isFeedbackEnabled:(BOOL)isFeedbackEnabled isAssetTaggingEnabled:(BOOL)isAssetTaggingEnabled isCreateWObyAssetTagEnabled:(BOOL)isCreateWObyAssetTagEnabled isSiteAuditEmailReportEnabled:(BOOL)isSiteAuditEmailReportEnabled isProposalApproveReasonEnabled:(BOOL)isProposalApproveReasonEnabled isVideoCapabilityEnabled:(BOOL)isVideoCapabilityEnabled isDecisionTreeDashEnabled:(BOOL)isDecisionTreeDashEnabled isProposalAssignReasonEnabled:(BOOL)isProposalAssignReasonEnabled isProviderFeedbackEnabled:(BOOL)isProviderFeedbackEnabled isShowReviewsCounterEnabled:(BOOL)isShowReviewsCounterEnabled isInventoryManagementEnabled:(BOOL)isInventoryManagementEnabled isEulaLoginEnabled:(BOOL)isEulaLoginEnabled isSitePlanningEnabled:(BOOL)isSitePlanningEnabled isShowAssignedTechniciansEnabled:(BOOL)isShowAssignedTechniciansEnabled isShowInAppTutorialEnabled:(BOOL)isShowInAppTutorialEnabled isSitePlanningV2Enabled:(BOOL)isSitePlanningV2Enabled isDoNotDispatchEnabled:(BOOL)isDoNotDispatchEnabled isFeedbackCustomQuestionsEnabled:(BOOL)isFeedbackCustomQuestionsEnabled isBadgeScanningEnabled:(BOOL)isBadgeScanningEnabled isShowWeatherTypeEnabled:(BOOL)isShowWeatherTypeEnabled isSiteAccessRulesAdministrationEnabled:(BOOL)isSiteAccessRulesAdministrationEnabled isChecklistAssetTasksEnabled:(BOOL)isChecklistAssetTasksEnabled isIgnoreAssetTypeIdEnabled:(BOOL)isIgnoreAssetTypeIdEnabled isAssetFirstMobileEnabled:(BOOL)isAssetFirstMobileEnabled isMultipleAssetsPerWorkOrderEnabled:(BOOL)isMultipleAssetsPerWorkOrderEnabled isScMobileValidateMultipleAssetPmOnlyEnabled:(BOOL)isScMobileValidateMultipleAssetPmOnlyEnabled isHideSiteAuditEnabled:(BOOL)isHideSiteAuditEnabled isInvoicesEnabled:(BOOL)isInvoicesEnabled isInvoiceApprovalCommentEnabled:(BOOL)isInvoiceApprovalCommentEnabled isInvoiceMultiLineGLCodeEnabled:(BOOL)isInvoiceMultiLineGLCodeEnabled isInvoiceRejectNotificationEnabled:(BOOL)isInvoiceRejectNotificationEnabled isInvoiceSupportIntelligenceEnabled:(BOOL)isInvoiceSupportIntelligenceEnabled isOnOffShoreInvoiceItemsEnabled:(BOOL)isOnOffShoreInvoiceItemsEnabled isProposalHistoryInvDetailsEnabled:(BOOL)isProposalHistoryInvDetailsEnabled isMLIReturnButtonForOpenInvoice:(BOOL)isMLIReturnButtonForOpenInvoice isInvoicesWOAssignee:(BOOL)isInvoicesWOAssignee isHideExcludedCategories:(BOOL)isHideExcludedCategories isClosedLocationsEnabled:(BOOL)isClosedLocationsEnabled isNotificationForCompletedWOEnabled:(BOOL)isNotificationForCompletedWOEnabled isDashboardSettings2Mobile:(BOOL)isDashboardSettings2Mobile isLocalizationAddressFormatV1Enabled:(BOOL)isLocalizationAddressFormatV1Enabled isCurrencyCodeSupportV1Enabled:(BOOL)isCurrencyCodeSupportV1Enabled isSitePlanningAddYearEnabled:(BOOL)isSitePlanningAddYearEnabled isDateFormatMobileEnabled:(BOOL)isDateFormatMobileEnabled isSCMMobileRadiusMeasure:(BOOL)isSCMMobileRadiusMeasure isMobilePhoneFormat:(BOOL)isMobilePhoneFormat isDecimalSeparatorV2:(BOOL)isDecimalSeparatorV2 isPinnedNotes:(BOOL)isPinnedNotes isNameToLocationId:(BOOL)isNameToLocationId isNoPhoneWhenWoCreated:(BOOL)isNoPhoneWhenWoCreated limitStatusesByTrade:(BOOL)limitStatusesByTrade isAssetInventoryV2Enabled:(BOOL)isAssetInventoryV2Enabled isDashboardFeedbackFilters:(BOOL)isDashboardFeedbackFilters isSiteAuditStatus:(BOOL)isSiteAuditStatus isAssetStandardTypesBrands:(BOOL)isAssetStandardTypesBrands isInvoiceRejectionReason:(BOOL)isInvoiceRejectionReason isSiteAuditV2Enabled:(BOOL)isSiteAuditV2Enabled isMaxCompressionQuality:(BOOL)isMaxCompressionQuality isUserWOPermissionSCM:(BOOL)isUserWOPermissionSCM isAssetReadingsEnabled:(BOOL)isAssetReadingsEnabled isSiteAuditBackgroundService:(BOOL)isSiteAuditBackgroundService isSCMGainsightPX:(BOOL)isSCMGainsightPX isBudgetInsightsView:(BOOL)isBudgetInsightsView isReasonForReassignmentDefaultOther:(BOOL)isReasonForReassignmentDefaultOther isDashboardAssociationMobile:(BOOL)isDashboardAssociationMobile isPromptReview:(BOOL)isPromptReview isEasierAssetAttachmentEnabled:(BOOL)isEasierAssetAttachmentEnabled isRemoveSecuritySCM:(BOOL)isRemoveSecuritySCM isSiteAuditUnsavedScm:(BOOL)isSiteAuditUnsavedScm __attribute__((swift_name("doCopy(isProposalsEnabled:isAlertsEnabled:isDecisionEngineEnabled:isFeedbackEnabled:isAssetTaggingEnabled:isCreateWObyAssetTagEnabled:isSiteAuditEmailReportEnabled:isProposalApproveReasonEnabled:isVideoCapabilityEnabled:isDecisionTreeDashEnabled:isProposalAssignReasonEnabled:isProviderFeedbackEnabled:isShowReviewsCounterEnabled:isInventoryManagementEnabled:isEulaLoginEnabled:isSitePlanningEnabled:isShowAssignedTechniciansEnabled:isShowInAppTutorialEnabled:isSitePlanningV2Enabled:isDoNotDispatchEnabled:isFeedbackCustomQuestionsEnabled:isBadgeScanningEnabled:isShowWeatherTypeEnabled:isSiteAccessRulesAdministrationEnabled:isChecklistAssetTasksEnabled:isIgnoreAssetTypeIdEnabled:isAssetFirstMobileEnabled:isMultipleAssetsPerWorkOrderEnabled:isScMobileValidateMultipleAssetPmOnlyEnabled:isHideSiteAuditEnabled:isInvoicesEnabled:isInvoiceApprovalCommentEnabled:isInvoiceMultiLineGLCodeEnabled:isInvoiceRejectNotificationEnabled:isInvoiceSupportIntelligenceEnabled:isOnOffShoreInvoiceItemsEnabled:isProposalHistoryInvDetailsEnabled:isMLIReturnButtonForOpenInvoice:isInvoicesWOAssignee:isHideExcludedCategories:isClosedLocationsEnabled:isNotificationForCompletedWOEnabled:isDashboardSettings2Mobile:isLocalizationAddressFormatV1Enabled:isCurrencyCodeSupportV1Enabled:isSitePlanningAddYearEnabled:isDateFormatMobileEnabled:isSCMMobileRadiusMeasure:isMobilePhoneFormat:isDecimalSeparatorV2:isPinnedNotes:isNameToLocationId:isNoPhoneWhenWoCreated:limitStatusesByTrade:isAssetInventoryV2Enabled:isDashboardFeedbackFilters:isSiteAuditStatus:isAssetStandardTypesBrands:isInvoiceRejectionReason:isSiteAuditV2Enabled:isMaxCompressionQuality:isUserWOPermissionSCM:isAssetReadingsEnabled:isSiteAuditBackgroundService:isSCMGainsightPX:isBudgetInsightsView:isReasonForReassignmentDefaultOther:isDashboardAssociationMobile:isPromptReview:isEasierAssetAttachmentEnabled:isRemoveSecuritySCM:isSiteAuditUnsavedScm:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isAlertsEnabled __attribute__((swift_name("isAlertsEnabled")));
@property (readonly) BOOL isAssetFirstMobileEnabled __attribute__((swift_name("isAssetFirstMobileEnabled")));
@property (readonly) BOOL isAssetInventoryV2Enabled __attribute__((swift_name("isAssetInventoryV2Enabled")));
@property (readonly) BOOL isAssetReadingsEnabled __attribute__((swift_name("isAssetReadingsEnabled")));
@property (readonly) BOOL isAssetStandardTypesBrands __attribute__((swift_name("isAssetStandardTypesBrands")));
@property (readonly) BOOL isAssetTaggingEnabled __attribute__((swift_name("isAssetTaggingEnabled")));
@property (readonly) BOOL isBadgeScanningEnabled __attribute__((swift_name("isBadgeScanningEnabled")));
@property (readonly) BOOL isBudgetInsightsView __attribute__((swift_name("isBudgetInsightsView")));
@property (readonly) BOOL isChecklistAssetTasksEnabled __attribute__((swift_name("isChecklistAssetTasksEnabled")));
@property (readonly) BOOL isClosedLocationsEnabled __attribute__((swift_name("isClosedLocationsEnabled")));
@property (readonly) BOOL isCreateWObyAssetTagEnabled __attribute__((swift_name("isCreateWObyAssetTagEnabled")));
@property (readonly) BOOL isCurrencyCodeSupportV1Enabled __attribute__((swift_name("isCurrencyCodeSupportV1Enabled")));
@property (readonly) BOOL isDashboardAssociationMobile __attribute__((swift_name("isDashboardAssociationMobile")));
@property (readonly) BOOL isDashboardFeedbackFilters __attribute__((swift_name("isDashboardFeedbackFilters")));
@property (readonly) BOOL isDashboardSettings2Mobile __attribute__((swift_name("isDashboardSettings2Mobile")));
@property (readonly) BOOL isDateFormatMobileEnabled __attribute__((swift_name("isDateFormatMobileEnabled")));
@property (readonly) BOOL isDecimalSeparatorV2 __attribute__((swift_name("isDecimalSeparatorV2")));
@property (readonly) BOOL isDecisionEngineEnabled __attribute__((swift_name("isDecisionEngineEnabled")));
@property (readonly) BOOL isDecisionTreeDashEnabled __attribute__((swift_name("isDecisionTreeDashEnabled")));
@property (readonly) BOOL isDoNotDispatchEnabled __attribute__((swift_name("isDoNotDispatchEnabled")));
@property (readonly) BOOL isEasierAssetAttachmentEnabled __attribute__((swift_name("isEasierAssetAttachmentEnabled")));
@property (readonly) BOOL isEulaLoginEnabled __attribute__((swift_name("isEulaLoginEnabled")));
@property (readonly) BOOL isFeedbackCustomQuestionsEnabled __attribute__((swift_name("isFeedbackCustomQuestionsEnabled")));
@property (readonly) BOOL isFeedbackEnabled __attribute__((swift_name("isFeedbackEnabled")));
@property (readonly) BOOL isHideExcludedCategories __attribute__((swift_name("isHideExcludedCategories")));
@property (readonly) BOOL isHideSiteAuditEnabled __attribute__((swift_name("isHideSiteAuditEnabled")));
@property (readonly) BOOL isIgnoreAssetTypeIdEnabled __attribute__((swift_name("isIgnoreAssetTypeIdEnabled")));
@property (readonly) BOOL isInventoryManagementEnabled __attribute__((swift_name("isInventoryManagementEnabled")));
@property (readonly) BOOL isInvoiceApprovalCommentEnabled __attribute__((swift_name("isInvoiceApprovalCommentEnabled")));
@property (readonly) BOOL isInvoiceMultiLineGLCodeEnabled __attribute__((swift_name("isInvoiceMultiLineGLCodeEnabled")));
@property (readonly) BOOL isInvoiceRejectNotificationEnabled __attribute__((swift_name("isInvoiceRejectNotificationEnabled")));
@property (readonly) BOOL isInvoiceRejectionReason __attribute__((swift_name("isInvoiceRejectionReason")));
@property (readonly) BOOL isInvoiceSupportIntelligenceEnabled __attribute__((swift_name("isInvoiceSupportIntelligenceEnabled")));
@property (readonly) BOOL isInvoicesEnabled __attribute__((swift_name("isInvoicesEnabled")));
@property (readonly) BOOL isInvoicesWOAssignee __attribute__((swift_name("isInvoicesWOAssignee")));
@property (readonly) BOOL isLocalizationAddressFormatV1Enabled __attribute__((swift_name("isLocalizationAddressFormatV1Enabled")));
@property (readonly) BOOL isMLIReturnButtonForOpenInvoice __attribute__((swift_name("isMLIReturnButtonForOpenInvoice")));
@property (readonly) BOOL isMaxCompressionQuality __attribute__((swift_name("isMaxCompressionQuality")));
@property (readonly) BOOL isMobilePhoneFormat __attribute__((swift_name("isMobilePhoneFormat")));
@property (readonly) BOOL isMultipleAssetsPerWorkOrderEnabled __attribute__((swift_name("isMultipleAssetsPerWorkOrderEnabled")));
@property (readonly) BOOL isNameToLocationId __attribute__((swift_name("isNameToLocationId")));
@property (readonly) BOOL isNoPhoneWhenWoCreated __attribute__((swift_name("isNoPhoneWhenWoCreated")));
@property (readonly) BOOL isNotificationForCompletedWOEnabled __attribute__((swift_name("isNotificationForCompletedWOEnabled")));
@property (readonly) BOOL isOnOffShoreInvoiceItemsEnabled __attribute__((swift_name("isOnOffShoreInvoiceItemsEnabled")));
@property (readonly) BOOL isPinnedNotes __attribute__((swift_name("isPinnedNotes")));
@property (readonly) BOOL isPromptReview __attribute__((swift_name("isPromptReview")));
@property (readonly) BOOL isProposalApproveReasonEnabled __attribute__((swift_name("isProposalApproveReasonEnabled")));
@property (readonly) BOOL isProposalAssignReasonEnabled __attribute__((swift_name("isProposalAssignReasonEnabled")));
@property (readonly) BOOL isProposalHistoryInvDetailsEnabled __attribute__((swift_name("isProposalHistoryInvDetailsEnabled")));
@property (readonly) BOOL isProposalsEnabled __attribute__((swift_name("isProposalsEnabled")));
@property (readonly) BOOL isProviderFeedbackEnabled __attribute__((swift_name("isProviderFeedbackEnabled")));
@property (readonly) BOOL isReasonForReassignmentDefaultOther __attribute__((swift_name("isReasonForReassignmentDefaultOther")));
@property (readonly) BOOL isRemoveSecuritySCM __attribute__((swift_name("isRemoveSecuritySCM")));
@property (readonly) BOOL isSCMGainsightPX __attribute__((swift_name("isSCMGainsightPX")));
@property (readonly) BOOL isSCMMobileRadiusMeasure __attribute__((swift_name("isSCMMobileRadiusMeasure")));
@property (readonly) BOOL isScMobileValidateMultipleAssetPmOnlyEnabled __attribute__((swift_name("isScMobileValidateMultipleAssetPmOnlyEnabled")));
@property (readonly) BOOL isShowAssignedTechniciansEnabled __attribute__((swift_name("isShowAssignedTechniciansEnabled")));
@property (readonly) BOOL isShowInAppTutorialEnabled __attribute__((swift_name("isShowInAppTutorialEnabled")));
@property (readonly) BOOL isShowReviewsCounterEnabled __attribute__((swift_name("isShowReviewsCounterEnabled")));
@property (readonly) BOOL isShowWeatherTypeEnabled __attribute__((swift_name("isShowWeatherTypeEnabled")));
@property (readonly) BOOL isSiteAccessRulesAdministrationEnabled __attribute__((swift_name("isSiteAccessRulesAdministrationEnabled")));
@property (readonly) BOOL isSiteAuditBackgroundService __attribute__((swift_name("isSiteAuditBackgroundService")));
@property (readonly) BOOL isSiteAuditEmailReportEnabled __attribute__((swift_name("isSiteAuditEmailReportEnabled")));
@property (readonly) BOOL isSiteAuditStatus __attribute__((swift_name("isSiteAuditStatus")));
@property (readonly) BOOL isSiteAuditUnsavedScm __attribute__((swift_name("isSiteAuditUnsavedScm")));
@property (readonly) BOOL isSiteAuditV2Enabled __attribute__((swift_name("isSiteAuditV2Enabled")));
@property (readonly) BOOL isSitePlanningAddYearEnabled __attribute__((swift_name("isSitePlanningAddYearEnabled")));
@property (readonly) BOOL isSitePlanningEnabled __attribute__((swift_name("isSitePlanningEnabled")));
@property (readonly) BOOL isSitePlanningV2Enabled __attribute__((swift_name("isSitePlanningV2Enabled")));
@property (readonly) BOOL isUserWOPermissionSCM __attribute__((swift_name("isUserWOPermissionSCM")));
@property (readonly) BOOL isVideoCapabilityEnabled __attribute__((swift_name("isVideoCapabilityEnabled")));
@property (readonly) BOOL limitStatusesByTrade __attribute__((swift_name("limitStatusesByTrade")));
@end

__attribute__((swift_name("ProfileFeaturesQueries")))
@protocol ScmSdkProfileFeaturesQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteFeatures __attribute__((swift_name("deleteFeatures()")));
- (ScmSdkRuntimeQuery<ScmSdkProfileFeaturesLocal *> *)getFeatures __attribute__((swift_name("getFeatures()")));
- (ScmSdkRuntimeQuery<id> *)getFeaturesMapper:(id (^)(ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getFeatures(mapper:)")));
- (void)insertFeaturesProfileFeaturesLocal:(ScmSdkProfileFeaturesLocal *)ProfileFeaturesLocal __attribute__((swift_name("insertFeatures(ProfileFeaturesLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileLocal")))
@interface ScmSdkProfileLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id authUserId:(ScmSdkInt * _Nullable)authUserId subscriberName:(NSString *)subscriberName roles:(NSArray<ScmSdkInt *> *)roles dashboards:(NSArray<ScmSdkDashboardDataLocal *> *)dashboards isDashboard:(BOOL)isDashboard isUniversalUser:(BOOL)isUniversalUser proposalLimit:(float)proposalLimit proposalCurrencyId:(int32_t)proposalCurrencyId isAccountPayableManager:(BOOL)isAccountPayableManager isMlpUser:(BOOL)isMlpUser eulaSigned:(BOOL)eulaSigned subscriberId:(int32_t)subscriberId defaultScUserSetupId:(int32_t)defaultScUserSetupId isMliUser:(BOOL)isMliUser isInvoicesTaxValidation:(BOOL)isInvoicesTaxValidation __attribute__((swift_name("init(id:authUserId:subscriberName:roles:dashboards:isDashboard:isUniversalUser:proposalLimit:proposalCurrencyId:isAccountPayableManager:isMlpUser:eulaSigned:subscriberId:defaultScUserSetupId:isMliUser:isInvoicesTaxValidation:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkDashboardDataLocal *> *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProfileLocal *)doCopyId:(int32_t)id authUserId:(ScmSdkInt * _Nullable)authUserId subscriberName:(NSString *)subscriberName roles:(NSArray<ScmSdkInt *> *)roles dashboards:(NSArray<ScmSdkDashboardDataLocal *> *)dashboards isDashboard:(BOOL)isDashboard isUniversalUser:(BOOL)isUniversalUser proposalLimit:(float)proposalLimit proposalCurrencyId:(int32_t)proposalCurrencyId isAccountPayableManager:(BOOL)isAccountPayableManager isMlpUser:(BOOL)isMlpUser eulaSigned:(BOOL)eulaSigned subscriberId:(int32_t)subscriberId defaultScUserSetupId:(int32_t)defaultScUserSetupId isMliUser:(BOOL)isMliUser isInvoicesTaxValidation:(BOOL)isInvoicesTaxValidation __attribute__((swift_name("doCopy(id:authUserId:subscriberName:roles:dashboards:isDashboard:isUniversalUser:proposalLimit:proposalCurrencyId:isAccountPayableManager:isMlpUser:eulaSigned:subscriberId:defaultScUserSetupId:isMliUser:isInvoicesTaxValidation:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkInt * _Nullable authUserId __attribute__((swift_name("authUserId")));
@property (readonly) NSArray<ScmSdkDashboardDataLocal *> *dashboards __attribute__((swift_name("dashboards")));
@property (readonly) int32_t defaultScUserSetupId __attribute__((swift_name("defaultScUserSetupId")));
@property (readonly) BOOL eulaSigned __attribute__((swift_name("eulaSigned")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isAccountPayableManager __attribute__((swift_name("isAccountPayableManager")));
@property (readonly) BOOL isDashboard __attribute__((swift_name("isDashboard")));
@property (readonly) BOOL isInvoicesTaxValidation __attribute__((swift_name("isInvoicesTaxValidation")));
@property (readonly) BOOL isMliUser __attribute__((swift_name("isMliUser")));
@property (readonly) BOOL isMlpUser __attribute__((swift_name("isMlpUser")));
@property (readonly) BOOL isUniversalUser __attribute__((swift_name("isUniversalUser")));
@property (readonly) int32_t proposalCurrencyId __attribute__((swift_name("proposalCurrencyId")));
@property (readonly) float proposalLimit __attribute__((swift_name("proposalLimit")));
@property (readonly) NSArray<ScmSdkInt *> *roles __attribute__((swift_name("roles")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *subscriberName __attribute__((swift_name("subscriberName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfileLocal.Adapter")))
@interface ScmSdkProfileLocalAdapter : ScmSdkBase
- (instancetype)initWithRolesAdapter:(id<ScmSdkRuntimeColumnAdapter>)rolesAdapter dashboardsAdapter:(id<ScmSdkRuntimeColumnAdapter>)dashboardsAdapter __attribute__((swift_name("init(rolesAdapter:dashboardsAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> dashboardsAdapter __attribute__((swift_name("dashboardsAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> rolesAdapter __attribute__((swift_name("rolesAdapter")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProfilePermissionsLocal")))
@interface ScmSdkProfilePermissionsLocal : ScmSdkBase
- (instancetype)initWithIsEnableCreateWorkOrder:(BOOL)isEnableCreateWorkOrder isEnableSiteAudit:(BOOL)isEnableSiteAudit isSiteAudit:(BOOL)isSiteAudit isCreateWorkOrder:(BOOL)isCreateWorkOrder isViewWorkOrder:(BOOL)isViewWorkOrder isEditWorkOrder:(BOOL)isEditWorkOrder isWorkOrderStatusChange:(BOOL)isWorkOrderStatusChange isChangeableNte:(BOOL)isChangeableNte isMaskMoney:(BOOL)isMaskMoney isBadgeReviewer:(BOOL)isBadgeReviewer isProposalProcess:(BOOL)isProposalProcess isProposalRead:(BOOL)isProposalRead isProposalEnabled:(BOOL)isProposalEnabled isInvoiceProcess:(BOOL)isInvoiceProcess isInvoicesReadAll:(BOOL)isInvoicesReadAll isInvoicesFullControl:(BOOL)isInvoicesFullControl isReportsReadEdit:(BOOL)isReportsReadEdit isReportsRead:(BOOL)isReportsRead isInvoiceRead:(BOOL)isInvoiceRead isInvoiceCreate:(BOOL)isInvoiceCreate isPlaceServiceRequests:(BOOL)isPlaceServiceRequests __attribute__((swift_name("init(isEnableCreateWorkOrder:isEnableSiteAudit:isSiteAudit:isCreateWorkOrder:isViewWorkOrder:isEditWorkOrder:isWorkOrderStatusChange:isChangeableNte:isMaskMoney:isBadgeReviewer:isProposalProcess:isProposalRead:isProposalEnabled:isInvoiceProcess:isInvoicesReadAll:isInvoicesFullControl:isReportsReadEdit:isReportsRead:isInvoiceRead:isInvoiceCreate:isPlaceServiceRequests:)"))) __attribute__((objc_designated_initializer));
- (BOOL)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProfilePermissionsLocal *)doCopyIsEnableCreateWorkOrder:(BOOL)isEnableCreateWorkOrder isEnableSiteAudit:(BOOL)isEnableSiteAudit isSiteAudit:(BOOL)isSiteAudit isCreateWorkOrder:(BOOL)isCreateWorkOrder isViewWorkOrder:(BOOL)isViewWorkOrder isEditWorkOrder:(BOOL)isEditWorkOrder isWorkOrderStatusChange:(BOOL)isWorkOrderStatusChange isChangeableNte:(BOOL)isChangeableNte isMaskMoney:(BOOL)isMaskMoney isBadgeReviewer:(BOOL)isBadgeReviewer isProposalProcess:(BOOL)isProposalProcess isProposalRead:(BOOL)isProposalRead isProposalEnabled:(BOOL)isProposalEnabled isInvoiceProcess:(BOOL)isInvoiceProcess isInvoicesReadAll:(BOOL)isInvoicesReadAll isInvoicesFullControl:(BOOL)isInvoicesFullControl isReportsReadEdit:(BOOL)isReportsReadEdit isReportsRead:(BOOL)isReportsRead isInvoiceRead:(BOOL)isInvoiceRead isInvoiceCreate:(BOOL)isInvoiceCreate isPlaceServiceRequests:(BOOL)isPlaceServiceRequests __attribute__((swift_name("doCopy(isEnableCreateWorkOrder:isEnableSiteAudit:isSiteAudit:isCreateWorkOrder:isViewWorkOrder:isEditWorkOrder:isWorkOrderStatusChange:isChangeableNte:isMaskMoney:isBadgeReviewer:isProposalProcess:isProposalRead:isProposalEnabled:isInvoiceProcess:isInvoicesReadAll:isInvoicesFullControl:isReportsReadEdit:isReportsRead:isInvoiceRead:isInvoiceCreate:isPlaceServiceRequests:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isBadgeReviewer __attribute__((swift_name("isBadgeReviewer")));
@property (readonly) BOOL isChangeableNte __attribute__((swift_name("isChangeableNte")));
@property (readonly) BOOL isCreateWorkOrder __attribute__((swift_name("isCreateWorkOrder")));
@property (readonly) BOOL isEditWorkOrder __attribute__((swift_name("isEditWorkOrder")));
@property (readonly) BOOL isEnableCreateWorkOrder __attribute__((swift_name("isEnableCreateWorkOrder")));
@property (readonly) BOOL isEnableSiteAudit __attribute__((swift_name("isEnableSiteAudit")));
@property (readonly) BOOL isInvoiceCreate __attribute__((swift_name("isInvoiceCreate")));
@property (readonly) BOOL isInvoiceProcess __attribute__((swift_name("isInvoiceProcess")));
@property (readonly) BOOL isInvoiceRead __attribute__((swift_name("isInvoiceRead")));
@property (readonly) BOOL isInvoicesFullControl __attribute__((swift_name("isInvoicesFullControl")));
@property (readonly) BOOL isInvoicesReadAll __attribute__((swift_name("isInvoicesReadAll")));
@property (readonly) BOOL isMaskMoney __attribute__((swift_name("isMaskMoney")));
@property (readonly) BOOL isPlaceServiceRequests __attribute__((swift_name("isPlaceServiceRequests")));
@property (readonly) BOOL isProposalEnabled __attribute__((swift_name("isProposalEnabled")));
@property (readonly) BOOL isProposalProcess __attribute__((swift_name("isProposalProcess")));
@property (readonly) BOOL isProposalRead __attribute__((swift_name("isProposalRead")));
@property (readonly) BOOL isReportsRead __attribute__((swift_name("isReportsRead")));
@property (readonly) BOOL isReportsReadEdit __attribute__((swift_name("isReportsReadEdit")));
@property (readonly) BOOL isSiteAudit __attribute__((swift_name("isSiteAudit")));
@property (readonly) BOOL isViewWorkOrder __attribute__((swift_name("isViewWorkOrder")));
@property (readonly) BOOL isWorkOrderStatusChange __attribute__((swift_name("isWorkOrderStatusChange")));
@end

__attribute__((swift_name("ProfilePermissionsQueries")))
@protocol ScmSdkProfilePermissionsQueries <ScmSdkRuntimeTransacter>
@required
- (void)deletePermissions __attribute__((swift_name("deletePermissions()")));
- (ScmSdkRuntimeQuery<ScmSdkProfilePermissionsLocal *> *)getPermissions __attribute__((swift_name("getPermissions()")));
- (ScmSdkRuntimeQuery<id> *)getPermissionsMapper:(id (^)(ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getPermissions(mapper:)")));
- (void)insertPermissionsProfilePermissionsLocal:(ScmSdkProfilePermissionsLocal *)ProfilePermissionsLocal __attribute__((swift_name("insertPermissions(ProfilePermissionsLocal:)")));
@end

__attribute__((swift_name("ProfileQueries")))
@protocol ScmSdkProfileQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteUser __attribute__((swift_name("deleteUser()")));
- (ScmSdkRuntimeQuery<ScmSdkInt *> *)getSubscriberId __attribute__((swift_name("getSubscriberId()")));
- (ScmSdkRuntimeQuery<ScmSdkProfileLocal *> *)getUser __attribute__((swift_name("getUser()")));
- (ScmSdkRuntimeQuery<id> *)getUserMapper:(id (^)(ScmSdkInt *, ScmSdkInt * _Nullable, NSString *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkDashboardDataLocal *> *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkFloat *, ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getUser(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkInt *> *)getUserId __attribute__((swift_name("getUserId()")));
- (void)insertUserProfileLocal:(ScmSdkProfileLocal *)ProfileLocal __attribute__((swift_name("insertUser(ProfileLocal:)")));
- (void)updateInvoicesSettingsIsMliUser:(BOOL)isMliUser isInvoicesTaxValidation:(BOOL)isInvoicesTaxValidation __attribute__((swift_name("updateInvoicesSettings(isMliUser:isInvoicesTaxValidation:)")));
@end

__attribute__((swift_name("ScmSdkDatabase")))
@protocol ScmSdkScmSdkDatabase <ScmSdkRuntimeTransacter>
@required
@property (readonly) id<ScmSdkAccountQueries> accountQueries __attribute__((swift_name("accountQueries")));
@property (readonly) id<ScmSdkAdditionalApprovalCodeQueries> additionalApprovalCodeQueries __attribute__((swift_name("additionalApprovalCodeQueries")));
@property (readonly) id<ScmSdkAdditionalFieldQueries> additionalFieldQueries __attribute__((swift_name("additionalFieldQueries")));
@property (readonly) id<ScmSdkAppConfirmSettingsQueries> appConfirmSettingsQueries __attribute__((swift_name("appConfirmSettingsQueries")));
@property (readonly) id<ScmSdkAppSettingsQueries> appSettingsQueries __attribute__((swift_name("appSettingsQueries")));
@property (readonly) id<ScmSdkAuditAreaQueries> auditAreaQueries __attribute__((swift_name("auditAreaQueries")));
@property (readonly) id<ScmSdkAuditCheckItemQueries> auditCheckItemQueries __attribute__((swift_name("auditCheckItemQueries")));
@property (readonly) id<ScmSdkAuditCheckItemTemplateQueries> auditCheckItemTemplateQueries __attribute__((swift_name("auditCheckItemTemplateQueries")));
@property (readonly) id<ScmSdkAuditCheckListQueries> auditCheckListQueries __attribute__((swift_name("auditCheckListQueries")));
@property (readonly) id<ScmSdkAuditCheckListTemplateQueries> auditCheckListTemplateQueries __attribute__((swift_name("auditCheckListTemplateQueries")));
@property (readonly) id<ScmSdkAuditInfoQueries> auditInfoQueries __attribute__((swift_name("auditInfoQueries")));
@property (readonly) id<ScmSdkCategoryLocalQueries> categoryLocalQueries __attribute__((swift_name("categoryLocalQueries")));
@property (readonly) id<ScmSdkCheckItemCommentQueries> checkItemCommentQueries __attribute__((swift_name("checkItemCommentQueries")));
@property (readonly) id<ScmSdkCommentAttachmentQueries> commentAttachmentQueries __attribute__((swift_name("commentAttachmentQueries")));
@property (readonly) id<ScmSdkContactInfoQueries> contactInfoQueries __attribute__((swift_name("contactInfoQueries")));
@property (readonly) id<ScmSdkInvoiceFilterQueries> invoiceFilterQueries __attribute__((swift_name("invoiceFilterQueries")));
@property (readonly) id<ScmSdkIssueRequestInfoQueries> issueRequestInfoQueries __attribute__((swift_name("issueRequestInfoQueries")));
@property (readonly) id<ScmSdkLocationNotificationQueries> locationNotificationQueries __attribute__((swift_name("locationNotificationQueries")));
@property (readonly) id<ScmSdkNoteSettingsQueries> noteSettingsQueries __attribute__((swift_name("noteSettingsQueries")));
@property (readonly) id<ScmSdkPriorityLocalQueries> priorityLocalQueries __attribute__((swift_name("priorityLocalQueries")));
@property (readonly) id<ScmSdkProfileFeaturesQueries> profileFeaturesQueries __attribute__((swift_name("profileFeaturesQueries")));
@property (readonly) id<ScmSdkProfilePermissionsQueries> profilePermissionsQueries __attribute__((swift_name("profilePermissionsQueries")));
@property (readonly) id<ScmSdkProfileQueries> profileQueries __attribute__((swift_name("profileQueries")));
@property (readonly) id<ScmSdkProviderLocalQueries> providerLocalQueries __attribute__((swift_name("providerLocalQueries")));
@property (readonly) id<ScmSdkSearchHistoryQueries> searchHistoryQueries __attribute__((swift_name("searchHistoryQueries")));
@property (readonly) id<ScmSdkStatisticItemCommentAttachmentQueries> statisticItemCommentAttachmentQueries __attribute__((swift_name("statisticItemCommentAttachmentQueries")));
@property (readonly) id<ScmSdkStatisticItemCommentQueries> statisticItemCommentQueries __attribute__((swift_name("statisticItemCommentQueries")));
@property (readonly) id<ScmSdkStatisticItemQuantityQueries> statisticItemQuantityQueries __attribute__((swift_name("statisticItemQuantityQueries")));
@property (readonly) id<ScmSdkStatisticItemQueries> statisticItemQueries __attribute__((swift_name("statisticItemQueries")));
@property (readonly) id<ScmSdkStatisticItemWorkOrderAttachmentQueries> statisticItemWorkOrderAttachmentQueries __attribute__((swift_name("statisticItemWorkOrderAttachmentQueries")));
@property (readonly) id<ScmSdkStatisticItemWorkOrderQueries> statisticItemWorkOrderQueries __attribute__((swift_name("statisticItemWorkOrderQueries")));
@property (readonly) id<ScmSdkStoreLocationLocalQueries> storeLocationLocalQueries __attribute__((swift_name("storeLocationLocalQueries")));
@property (readonly) id<ScmSdkSubsidiariesQueries> subsidiariesQueries __attribute__((swift_name("subsidiariesQueries")));
@property (readonly) id<ScmSdkTradeLocalQueries> tradeLocalQueries __attribute__((swift_name("tradeLocalQueries")));
@property (readonly) id<ScmSdkTroubleshootingFieldQueries> troubleshootingFieldQueries __attribute__((swift_name("troubleshootingFieldQueries")));
@property (readonly) id<ScmSdkWeatherTypeLocalQueries> weatherTypeLocalQueries __attribute__((swift_name("weatherTypeLocalQueries")));
@property (readonly) id<ScmSdkWorkOrderAttachmentQueries> workOrderAttachmentQueries __attribute__((swift_name("workOrderAttachmentQueries")));
@property (readonly) id<ScmSdkWorkOrderTemplateQueries> workOrderTemplateQueries __attribute__((swift_name("workOrderTemplateQueries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmSdkDatabaseCompanion")))
@interface ScmSdkScmSdkDatabaseCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkScmSdkDatabaseCompanion *shared __attribute__((swift_name("shared")));
- (id<ScmSdkScmSdkDatabase>)invokeDriver:(id<ScmSdkRuntimeSqlDriver>)driver AuditCheckItemLocalAdapter:(ScmSdkAuditCheckItemLocalAdapter *)AuditCheckItemLocalAdapter AuditCheckItemTemplateLocalAdapter:(ScmSdkAuditCheckItemTemplateLocalAdapter *)AuditCheckItemTemplateLocalAdapter AuditInfoLocalAdapter:(ScmSdkAuditInfoLocalAdapter *)AuditInfoLocalAdapter InvoiceFilterLocalAdapter:(ScmSdkInvoiceFilterLocalAdapter *)InvoiceFilterLocalAdapter ProfileLocalAdapter:(ScmSdkProfileLocalAdapter *)ProfileLocalAdapter SiteAuditStatisticItemLocalAdapter:(ScmSdkSiteAuditStatisticItemLocalAdapter *)SiteAuditStatisticItemLocalAdapter StoreLocationLocalAdapter:(ScmSdkStoreLocationLocalAdapter *)StoreLocationLocalAdapter __attribute__((swift_name("invoke(driver:AuditCheckItemLocalAdapter:AuditCheckItemTemplateLocalAdapter:AuditInfoLocalAdapter:InvoiceFilterLocalAdapter:ProfileLocalAdapter:SiteAuditStatisticItemLocalAdapter:StoreLocationLocalAdapter:)")));
@property (readonly) id<ScmSdkRuntimeSqlDriverSchema> Schema __attribute__((swift_name("Schema")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SubscriberLocal")))
@interface ScmSdkSubscriberLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id name:(NSString *)name description:(NSString *)description isCurrent:(BOOL)isCurrent __attribute__((swift_name("init(id:name:description:isCurrent:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSubscriberLocal *)doCopyId:(int32_t)id name:(NSString *)name description:(NSString *)description isCurrent:(BOOL)isCurrent __attribute__((swift_name("doCopy(id:name:description:isCurrent:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isCurrent __attribute__((swift_name("isCurrent")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("SubsidiariesQueries")))
@protocol ScmSdkSubsidiariesQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (void)insertSubscriberLocal:(ScmSdkSubscriberLocal *)SubscriberLocal __attribute__((swift_name("insert(SubscriberLocal:)")));
- (void)removeOldCurrentId:(int32_t)id __attribute__((swift_name("removeOldCurrent(id:)")));
- (ScmSdkRuntimeQuery<ScmSdkSubscriberLocal *> *)selectAll __attribute__((swift_name("selectAll()")));
- (ScmSdkRuntimeQuery<id> *)selectAllMapper:(id (^)(ScmSdkInt *, NSString *, NSString *, ScmSdkBoolean *))mapper __attribute__((swift_name("selectAll(mapper:)")));
- (void)setCurrentIsCurrent:(BOOL)isCurrent id:(int32_t)id __attribute__((swift_name("setCurrent(isCurrent:id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditAreaLocal")))
@interface ScmSdkAuditAreaLocal : ScmSdkBase
- (instancetype)initWithAuditAreaId:(NSString *)auditAreaId auditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("init(auditAreaId:auditInfoId:serverId:name:sortOrder:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditAreaLocal *)doCopyAuditAreaId:(NSString *)auditAreaId auditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("doCopy(auditAreaId:auditInfoId:serverId:name:sortOrder:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditAreaId __attribute__((swift_name("auditAreaId")));
@property (readonly) int64_t auditInfoId __attribute__((swift_name("auditInfoId")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((swift_name("AuditAreaQueries")))
@protocol ScmSdkAuditAreaQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByIdAuditAreaId:(NSString *)auditAreaId __attribute__((swift_name("deleteById(auditAreaId:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditAreaLocal *> *)getAreaByIdAuditAreaId:(NSString *)auditAreaId __attribute__((swift_name("getAreaById(auditAreaId:)")));
- (ScmSdkRuntimeQuery<id> *)getAreaByIdAuditAreaId:(NSString *)auditAreaId mapper:(id (^)(NSString *, ScmSdkLong *, ScmSdkInt *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getAreaById(auditAreaId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkGetAreaWithCheckList *> *)getAreaWithCheckListAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("getAreaWithCheckList(auditInfoId:)")));
- (ScmSdkRuntimeQuery<id> *)getAreaWithCheckListAuditInfoId:(int64_t)auditInfoId mapper:(id (^)(NSString *, NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkLong *, ScmSdkLong *))mapper __attribute__((swift_name("getAreaWithCheckList(auditInfoId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditAreaLocal *> *)getAreasByAuditIdAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("getAreasByAuditId(auditInfoId:)")));
- (ScmSdkRuntimeQuery<id> *)getAreasByAuditIdAuditInfoId:(int64_t)auditInfoId mapper:(id (^)(NSString *, ScmSdkLong *, ScmSdkInt *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getAreasByAuditId(auditInfoId:mapper:)")));
- (void)insertAuditAreaLocal:(ScmSdkAuditAreaLocal *)AuditAreaLocal __attribute__((swift_name("insert(AuditAreaLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemLocal")))
@interface ScmSdkAuditCheckItemLocal : ScmSdkBase
- (instancetype)initWithCheckItemId:(NSString *)checkItemId auditCheckListId:(NSString *)auditCheckListId name:(NSString *)name description:(NSString *)description date:(NSString *)date impact:(NSString *)impact isUnlisted:(BOOL)isUnlisted ratingSystem:(int32_t)ratingSystem passThreshold:(int32_t)passThreshold score:(int32_t)score range:(NSArray<ScmSdkInt *> *)range sortOrder:(int32_t)sortOrder quantity:(ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable)quantity quantityId:(int32_t)quantityId serverId:(int32_t)serverId existedWorkOrders:(NSArray<ScmSdkInt *> * _Nullable)existedWorkOrders __attribute__((swift_name("init(checkItemId:auditCheckListId:name:description:date:impact:isUnlisted:ratingSystem:passThreshold:score:range:sortOrder:quantity:quantityId:serverId:existedWorkOrders:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemLocal *)doCopyCheckItemId:(NSString *)checkItemId auditCheckListId:(NSString *)auditCheckListId name:(NSString *)name description:(NSString *)description date:(NSString *)date impact:(NSString *)impact isUnlisted:(BOOL)isUnlisted ratingSystem:(int32_t)ratingSystem passThreshold:(int32_t)passThreshold score:(int32_t)score range:(NSArray<ScmSdkInt *> *)range sortOrder:(int32_t)sortOrder quantity:(ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable)quantity quantityId:(int32_t)quantityId serverId:(int32_t)serverId existedWorkOrders:(NSArray<ScmSdkInt *> * _Nullable)existedWorkOrders __attribute__((swift_name("doCopy(checkItemId:auditCheckListId:name:description:date:impact:isUnlisted:ratingSystem:passThreshold:score:range:sortOrder:quantity:quantityId:serverId:existedWorkOrders:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckListId __attribute__((swift_name("auditCheckListId")));
@property (readonly) NSString *checkItemId __attribute__((swift_name("checkItemId")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSArray<ScmSdkInt *> * _Nullable existedWorkOrders __attribute__((swift_name("existedWorkOrders")));
@property (readonly) NSString *impact __attribute__((swift_name("impact")));
@property (readonly) BOOL isUnlisted __attribute__((swift_name("isUnlisted")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t passThreshold __attribute__((swift_name("passThreshold")));
@property (readonly) ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable quantity __attribute__((swift_name("quantity")));
@property (readonly) int32_t quantityId __attribute__((swift_name("quantityId")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) int32_t ratingSystem __attribute__((swift_name("ratingSystem")));
@property (readonly) int32_t score __attribute__((swift_name("score")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemLocal.Adapter")))
@interface ScmSdkAuditCheckItemLocalAdapter : ScmSdkBase
- (instancetype)initWithRangeAdapter:(id<ScmSdkRuntimeColumnAdapter>)rangeAdapter quantityAdapter:(id<ScmSdkRuntimeColumnAdapter>)quantityAdapter existedWorkOrdersAdapter:(id<ScmSdkRuntimeColumnAdapter>)existedWorkOrdersAdapter __attribute__((swift_name("init(rangeAdapter:quantityAdapter:existedWorkOrdersAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> existedWorkOrdersAdapter __attribute__((swift_name("existedWorkOrdersAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> quantityAdapter __attribute__((swift_name("quantityAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> rangeAdapter __attribute__((swift_name("rangeAdapter")));
@end

__attribute__((swift_name("AuditCheckItemQueries")))
@protocol ScmSdkAuditCheckItemQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByCkeckListIdAuditCheckListId:(NSString *)auditCheckListId __attribute__((swift_name("deleteByCkeckListId(auditCheckListId:)")));
- (void)deleteByIdCheckItemId:(NSString *)checkItemId __attribute__((swift_name("deleteById(checkItemId:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemLocal *> *)getAllItemsByAuditCheckListIdAuditCheckListId:(NSString *)auditCheckListId __attribute__((swift_name("getAllItemsByAuditCheckListId(auditCheckListId:)")));
- (ScmSdkRuntimeQuery<id> *)getAllItemsByAuditCheckListIdAuditCheckListId:(NSString *)auditCheckListId mapper:(id (^)(NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *, ScmSdkInt *, ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> * _Nullable))mapper __attribute__((swift_name("getAllItemsByAuditCheckListId(auditCheckListId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemLocal *> *)getByIdCheckItemId:(NSString *)checkItemId __attribute__((swift_name("getById(checkItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdCheckItemId:(NSString *)checkItemId mapper:(id (^)(NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *, ScmSdkInt *, ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> * _Nullable))mapper __attribute__((swift_name("getById(checkItemId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemLocal *> *)getItemsByAuditCheckListIdAuditCheckListId:(NSString *)auditCheckListId __attribute__((swift_name("getItemsByAuditCheckListId(auditCheckListId:)")));
- (ScmSdkRuntimeQuery<id> *)getItemsByAuditCheckListIdAuditCheckListId:(NSString *)auditCheckListId mapper:(id (^)(NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *, ScmSdkInt *, ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> * _Nullable))mapper __attribute__((swift_name("getItemsByAuditCheckListId(auditCheckListId:mapper:)")));
- (void)insertAuditCheckItemLocal:(ScmSdkAuditCheckItemLocal *)AuditCheckItemLocal __attribute__((swift_name("insert(AuditCheckItemLocal:)")));
- (void)unlistAuditCheckListId:(NSString *)auditCheckListId __attribute__((swift_name("unlist(auditCheckListId:)")));
- (void)updateDateDate:(NSString *)date checkItemId:(NSString *)checkItemId __attribute__((swift_name("updateDate(date:checkItemId:)")));
- (void)updateQuantityQuantity:(ScmSdkKotlinPair<NSString *, ScmSdkInt *> * _Nullable)quantity checkItemId:(NSString *)checkItemId __attribute__((swift_name("updateQuantity(quantity:checkItemId:)")));
- (void)updateScoreScore:(int32_t)score checkItemId:(NSString *)checkItemId __attribute__((swift_name("updateScore(score:checkItemId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemTemplateLocal")))
@interface ScmSdkAuditCheckItemTemplateLocal : ScmSdkBase
- (instancetype)initWithId:(NSString *)id auditInfoTemplateId:(int32_t)auditInfoTemplateId auditCheckListTemplateId:(int32_t)auditCheckListTemplateId name:(NSString *)name description:(NSString *)description ratingSystem:(int32_t)ratingSystem passThreshold:(int32_t)passThreshold range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("init(id:auditInfoTemplateId:auditCheckListTemplateId:name:description:ratingSystem:passThreshold:range:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckItemTemplateLocal *)doCopyId:(NSString *)id auditInfoTemplateId:(int32_t)auditInfoTemplateId auditCheckListTemplateId:(int32_t)auditCheckListTemplateId name:(NSString *)name description:(NSString *)description ratingSystem:(int32_t)ratingSystem passThreshold:(int32_t)passThreshold range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("doCopy(id:auditInfoTemplateId:auditCheckListTemplateId:name:description:ratingSystem:passThreshold:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t auditCheckListTemplateId __attribute__((swift_name("auditCheckListTemplateId")));
@property (readonly) int32_t auditInfoTemplateId __attribute__((swift_name("auditInfoTemplateId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t passThreshold __attribute__((swift_name("passThreshold")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) int32_t ratingSystem __attribute__((swift_name("ratingSystem")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemTemplateLocal.Adapter")))
@interface ScmSdkAuditCheckItemTemplateLocalAdapter : ScmSdkBase
- (instancetype)initWithRangeAdapter:(id<ScmSdkRuntimeColumnAdapter>)rangeAdapter __attribute__((swift_name("init(rangeAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> rangeAdapter __attribute__((swift_name("rangeAdapter")));
@end

__attribute__((swift_name("AuditCheckItemTemplateQueries")))
@protocol ScmSdkAuditCheckItemTemplateQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByIdId:(NSString *)id __attribute__((swift_name("deleteById(id:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemTemplateLocal *> *)getByAuditTemplateIdAuditInfoTemplateId:(int32_t)auditInfoTemplateId __attribute__((swift_name("getByAuditTemplateId(auditInfoTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByAuditTemplateIdAuditInfoTemplateId:(int32_t)auditInfoTemplateId mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getByAuditTemplateId(auditInfoTemplateId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemTemplateLocal *> *)getByCheckListTemplateIdAuditCheckListTemplateId:(int32_t)auditCheckListTemplateId __attribute__((swift_name("getByCheckListTemplateId(auditCheckListTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCheckListTemplateIdAuditCheckListTemplateId:(int32_t)auditCheckListTemplateId mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getByCheckListTemplateId(auditCheckListTemplateId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckItemTemplateLocal *> *)getByIdId:(NSString *)id __attribute__((swift_name("getById(id:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(NSString *)id mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getById(id:mapper:)")));
- (void)insertAuditCheckItemTemplateLocal:(ScmSdkAuditCheckItemTemplateLocal *)AuditCheckItemTemplateLocal __attribute__((swift_name("insert(AuditCheckItemTemplateLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckListLocal")))
@interface ScmSdkAuditCheckListLocal : ScmSdkBase
- (instancetype)initWithCheckListId:(NSString *)checkListId auditAreaId:(NSString *)auditAreaId name:(NSString *)name isCustom:(BOOL)isCustom isUnlisted:(BOOL)isUnlisted sortOrder:(int32_t)sortOrder serverId:(int32_t)serverId __attribute__((swift_name("init(checkListId:auditAreaId:name:isCustom:isUnlisted:sortOrder:serverId:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckListLocal *)doCopyCheckListId:(NSString *)checkListId auditAreaId:(NSString *)auditAreaId name:(NSString *)name isCustom:(BOOL)isCustom isUnlisted:(BOOL)isUnlisted sortOrder:(int32_t)sortOrder serverId:(int32_t)serverId __attribute__((swift_name("doCopy(checkListId:auditAreaId:name:isCustom:isUnlisted:sortOrder:serverId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditAreaId __attribute__((swift_name("auditAreaId")));
@property (readonly) NSString *checkListId __attribute__((swift_name("checkListId")));
@property (readonly) BOOL isCustom __attribute__((swift_name("isCustom")));
@property (readonly) BOOL isUnlisted __attribute__((swift_name("isUnlisted")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((swift_name("AuditCheckListQueries")))
@protocol ScmSdkAuditCheckListQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByIdCheckListId:(NSString *)checkListId __attribute__((swift_name("deleteById(checkListId:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckListLocal *> *)getByIdCheckListId:(NSString *)checkListId __attribute__((swift_name("getById(checkListId:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdCheckListId:(NSString *)checkListId mapper:(id (^)(NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *))mapper __attribute__((swift_name("getById(checkListId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckListLocal *> *)getItemsByAuditAreaIdAuditAreaId:(NSString *)auditAreaId __attribute__((swift_name("getItemsByAuditAreaId(auditAreaId:)")));
- (ScmSdkRuntimeQuery<id> *)getItemsByAuditAreaIdAuditAreaId:(NSString *)auditAreaId mapper:(id (^)(NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *))mapper __attribute__((swift_name("getItemsByAuditAreaId(auditAreaId:mapper:)")));
- (void)insertAuditCheckListLocal:(ScmSdkAuditCheckListLocal *)AuditCheckListLocal __attribute__((swift_name("insert(AuditCheckListLocal:)")));
- (void)setUnlistIsUnlisted:(BOOL)isUnlisted checkListId:(NSString *)checkListId __attribute__((swift_name("setUnlist(isUnlisted:checkListId:)")));
- (void)updateNameName:(NSString *)name checkListId:(NSString *)checkListId __attribute__((swift_name("updateName(name:checkListId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckListTemplateLocal")))
@interface ScmSdkAuditCheckListTemplateLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id auditInfoTemplateId:(int32_t)auditInfoTemplateId name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("init(id:auditInfoTemplateId:name:sortOrder:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditCheckListTemplateLocal *)doCopyId:(int32_t)id auditInfoTemplateId:(int32_t)auditInfoTemplateId name:(NSString *)name sortOrder:(int32_t)sortOrder __attribute__((swift_name("doCopy(id:auditInfoTemplateId:name:sortOrder:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t auditInfoTemplateId __attribute__((swift_name("auditInfoTemplateId")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((swift_name("AuditCheckListTemplateQueries")))
@protocol ScmSdkAuditCheckListTemplateQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkAuditCheckListTemplateLocal *> *)getCheckListTemplatesByTemplateIdAuditInfoTemplateId:(int32_t)auditInfoTemplateId __attribute__((swift_name("getCheckListTemplatesByTemplateId(auditInfoTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getCheckListTemplatesByTemplateIdAuditInfoTemplateId:(int32_t)auditInfoTemplateId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getCheckListTemplatesByTemplateId(auditInfoTemplateId:mapper:)")));
- (void)insertAuditCheckListTemplateLocal:(ScmSdkAuditCheckListTemplateLocal *)AuditCheckListTemplateLocal __attribute__((swift_name("insert(AuditCheckListTemplateLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoLocal")))
@interface ScmSdkAuditInfoLocal : ScmSdkBase
- (instancetype)initWithAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId __attribute__((swift_name("init(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditInfoLocal *)doCopyAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId __attribute__((swift_name("doCopy(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable address __attribute__((swift_name("address")));
@property (readonly) int64_t auditInfoId __attribute__((swift_name("auditInfoId")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSArray<NSString *> *emails __attribute__((swift_name("emails")));
@property (readonly) NSString * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) BOOL isDataChange __attribute__((swift_name("isDataChange")));
@property (readonly) BOOL isSendEmail __attribute__((swift_name("isSendEmail")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t templateId __attribute__((swift_name("templateId")));
@property (readonly) NSString *templateName __attribute__((swift_name("templateName")));
@property (readonly) NSString *timeZone __attribute__((swift_name("timeZone")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoLocal.Adapter")))
@interface ScmSdkAuditInfoLocalAdapter : ScmSdkBase
- (instancetype)initWithEmailsAdapter:(id<ScmSdkRuntimeColumnAdapter>)emailsAdapter __attribute__((swift_name("init(emailsAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> emailsAdapter __attribute__((swift_name("emailsAdapter")));
@end

__attribute__((swift_name("AuditInfoQueries")))
@protocol ScmSdkAuditInfoQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoWithItemsCount *> *)auditInfoWithItemsCountAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("auditInfoWithItemsCount(auditInfoId:)")));
- (ScmSdkRuntimeQuery<id> *)auditInfoWithItemsCountAuditInfoId:(int64_t)auditInfoId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable, ScmSdkLong *, ScmSdkLong * _Nullable))mapper __attribute__((swift_name("auditInfoWithItemsCount(auditInfoId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoWithItemsCountByUserId *> *)auditInfoWithItemsCountByUserIdUserId:(int32_t)userId __attribute__((swift_name("auditInfoWithItemsCountByUserId(userId:)")));
- (ScmSdkRuntimeQuery<id> *)auditInfoWithItemsCountByUserIdUserId:(int32_t)userId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable, ScmSdkLong *, ScmSdkLong * _Nullable))mapper __attribute__((swift_name("auditInfoWithItemsCountByUserId(userId:mapper:)")));
- (void)deleteByIdAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("deleteById(auditInfoId:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoLocal *> *)getByIdAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("getById(auditInfoId:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdAuditInfoId:(int64_t)auditInfoId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getById(auditInfoId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoLocal *> *)getByLocationAndTemplateIdLocationId:(int32_t)locationId templateId:(int32_t)templateId __attribute__((swift_name("getByLocationAndTemplateId(locationId:templateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByLocationAndTemplateIdLocationId:(int32_t)locationId templateId:(int32_t)templateId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getByLocationAndTemplateId(locationId:templateId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoLocal *> *)getByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getByServerId(serverId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkAuditInfoLocal *> *)getByUserIdUserId:(int32_t)userId __attribute__((swift_name("getByUserId(userId:)")));
- (ScmSdkRuntimeQuery<id> *)getByUserIdUserId:(int32_t)userId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, NSArray<NSString *> *, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, NSString * _Nullable, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getByUserId(userId:mapper:)")));
- (void)insertAuditInfoLocal:(ScmSdkAuditInfoLocal *)AuditInfoLocal __attribute__((swift_name("insert(AuditInfoLocal:)")));
- (void)makeAdChangedIsDataChange:(BOOL)isDataChange auditInfoId:(int64_t)auditInfoId __attribute__((swift_name("makeAdChanged(isDataChange:auditInfoId:)")));
- (void)updateEmailsEmails:(NSArray<NSString *> *)emails auditInfoId:(int64_t)auditInfoId __attribute__((swift_name("updateEmails(emails:auditInfoId:)")));
- (void)updateSendEmailsIsSendEmail:(BOOL)isSendEmail auditInfoId:(int64_t)auditInfoId __attribute__((swift_name("updateSendEmails(isSendEmail:auditInfoId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoWithItemsCount")))
@interface ScmSdkAuditInfoWithItemsCount : ScmSdkBase
- (instancetype)initWithAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId checkListItemsCount:(int64_t)checkListItemsCount itemsCount:(ScmSdkLong * _Nullable)itemsCount __attribute__((swift_name("init(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:checkListItemsCount:itemsCount:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLong * _Nullable)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditInfoWithItemsCount *)doCopyAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId checkListItemsCount:(int64_t)checkListItemsCount itemsCount:(ScmSdkLong * _Nullable)itemsCount __attribute__((swift_name("doCopy(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:checkListItemsCount:itemsCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable address __attribute__((swift_name("address")));
@property (readonly) int64_t auditInfoId __attribute__((swift_name("auditInfoId")));
@property (readonly) int64_t checkListItemsCount __attribute__((swift_name("checkListItemsCount")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSArray<NSString *> *emails __attribute__((swift_name("emails")));
@property (readonly) NSString * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) BOOL isDataChange __attribute__((swift_name("isDataChange")));
@property (readonly) BOOL isSendEmail __attribute__((swift_name("isSendEmail")));
@property (readonly) ScmSdkLong * _Nullable itemsCount __attribute__((swift_name("itemsCount")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t templateId __attribute__((swift_name("templateId")));
@property (readonly) NSString *templateName __attribute__((swift_name("templateName")));
@property (readonly) NSString *timeZone __attribute__((swift_name("timeZone")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditInfoWithItemsCountByUserId")))
@interface ScmSdkAuditInfoWithItemsCountByUserId : ScmSdkBase
- (instancetype)initWithAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId checkListItemsCount:(int64_t)checkListItemsCount itemsCount:(ScmSdkLong * _Nullable)itemsCount __attribute__((swift_name("init(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:checkListItemsCount:itemsCount:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLong * _Nullable)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkAuditInfoWithItemsCountByUserId *)doCopyAuditInfoId:(int64_t)auditInfoId serverId:(int32_t)serverId userId:(int32_t)userId templateId:(int32_t)templateId templateName:(NSString *)templateName locationId:(int32_t)locationId locationName:(NSString *)locationName startDate:(NSString *)startDate timeZone:(NSString *)timeZone endDate:(NSString * _Nullable)endDate isSendEmail:(BOOL)isSendEmail emails:(NSArray<NSString *> *)emails city:(NSString * _Nullable)city state:(NSString * _Nullable)state zip:(NSString * _Nullable)zip country:(NSString * _Nullable)country isDataChange:(BOOL)isDataChange address:(NSString * _Nullable)address storeId:(NSString * _Nullable)storeId checkListItemsCount:(int64_t)checkListItemsCount itemsCount:(ScmSdkLong * _Nullable)itemsCount __attribute__((swift_name("doCopy(auditInfoId:serverId:userId:templateId:templateName:locationId:locationName:startDate:timeZone:endDate:isSendEmail:emails:city:state:zip:country:isDataChange:address:storeId:checkListItemsCount:itemsCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable address __attribute__((swift_name("address")));
@property (readonly) int64_t auditInfoId __attribute__((swift_name("auditInfoId")));
@property (readonly) int64_t checkListItemsCount __attribute__((swift_name("checkListItemsCount")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSArray<NSString *> *emails __attribute__((swift_name("emails")));
@property (readonly) NSString * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) BOOL isDataChange __attribute__((swift_name("isDataChange")));
@property (readonly) BOOL isSendEmail __attribute__((swift_name("isSendEmail")));
@property (readonly) ScmSdkLong * _Nullable itemsCount __attribute__((swift_name("itemsCount")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t templateId __attribute__((swift_name("templateId")));
@property (readonly) NSString *templateName __attribute__((swift_name("templateName")));
@property (readonly) NSString *timeZone __attribute__((swift_name("timeZone")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CheckItemCommentLocal")))
@interface ScmSdkCheckItemCommentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date userName:(NSString *)userName description:(NSString * _Nullable)description isPersistent:(BOOL)isPersistent serverId:(ScmSdkInt * _Nullable)serverId __attribute__((swift_name("init(id:auditCheckItemId:date:userName:description:isPersistent:serverId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCheckItemCommentLocal *)doCopyId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date userName:(NSString *)userName description:(NSString * _Nullable)description isPersistent:(BOOL)isPersistent serverId:(ScmSdkInt * _Nullable)serverId __attribute__((swift_name("doCopy(id:auditCheckItemId:date:userName:description:isPersistent:serverId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isPersistent __attribute__((swift_name("isPersistent")));
@property (readonly) ScmSdkInt * _Nullable serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *userName __attribute__((swift_name("userName")));
@end

__attribute__((swift_name("CheckItemCommentQueries")))
@protocol ScmSdkCheckItemCommentQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByIdId_:(int32_t)id __attribute__((swift_name("deleteById(id_:)")));
- (ScmSdkRuntimeQuery<ScmSdkCheckItemCommentLocal *> *)getAll __attribute__((swift_name("getAll()")));
- (ScmSdkRuntimeQuery<id> *)getAllMapper:(id (^)(ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getAll(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkCheckItemCommentLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper_:(id (^)(ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getById(id:mapper_:)")));
- (ScmSdkRuntimeQuery<ScmSdkCheckItemCommentLocal *> *)getCommentsByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getCommentsByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getCommentsByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper:(id (^)(ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable, ScmSdkBoolean *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getCommentsByCheckItemId(auditCheckItemId:mapper:)")));
- (void)insertAuditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date userName:(NSString *)userName description:(NSString * _Nullable)description isPersistent:(BOOL)isPersistent __attribute__((swift_name("insert(auditCheckItemId:date:userName:description:isPersistent:)")));
- (void)insertFromIssuesServerId:(ScmSdkInt * _Nullable)serverId auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date userName:(NSString *)userName description:(NSString * _Nullable)description isPersistent:(BOOL)isPersistent __attribute__((swift_name("insertFromIssues(serverId:auditCheckItemId:date:userName:description:isPersistent:)")));
- (ScmSdkRuntimeQuery<ScmSdkLong *> *)lastInsertRowId __attribute__((swift_name("lastInsertRowId()")));
- (void)updateDescription:(NSString * _Nullable)description isPersistent:(BOOL)isPersistent id:(int32_t)id __attribute__((swift_name("update(description:isPersistent:id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CommentAttachmentLocal")))
@interface ScmSdkCommentAttachmentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id commentId:(int32_t)commentId fileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType remoteName:(NSString *)remoteName isPosted:(BOOL)isPosted serverId:(ScmSdkInt * _Nullable)serverId url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("init(id:commentId:fileName:filePath:mimeType:remoteName:isPosted:serverId:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCommentAttachmentLocal *)doCopyId:(int32_t)id commentId:(int32_t)commentId fileName:(NSString *)fileName filePath:(NSString *)filePath mimeType:(NSString *)mimeType remoteName:(NSString *)remoteName isPosted:(BOOL)isPosted serverId:(ScmSdkInt * _Nullable)serverId url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("doCopy(id:commentId:fileName:filePath:mimeType:remoteName:isPosted:serverId:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t commentId __attribute__((swift_name("commentId")));
@property (readonly) NSString *fileName __attribute__((swift_name("fileName")));
@property (readonly) NSString *filePath __attribute__((swift_name("filePath")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isPosted __attribute__((swift_name("isPosted")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) ScmSdkInt * _Nullable serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString * _Nullable url __attribute__((swift_name("url")));
@property (readonly) NSString * _Nullable urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((swift_name("CommentAttachmentQueries")))
@protocol ScmSdkCommentAttachmentQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteByCommentIdCommentId:(int32_t)commentId __attribute__((swift_name("deleteByCommentId(commentId:)")));
- (void)deleteByCommentIdWithExceptionsCommentId:(int32_t)commentId fileName:(id)fileName __attribute__((swift_name("deleteByCommentIdWithExceptions(commentId:fileName:)")));
- (void)deleteByFileNameFileName:(NSString *)fileName __attribute__((swift_name("deleteByFileName(fileName:)")));
- (void)deleteByIdId_:(int32_t)id __attribute__((swift_name("deleteById(id_:)")));
- (ScmSdkRuntimeQuery<ScmSdkCommentAttachmentLocal *> *)getAll __attribute__((swift_name("getAll()")));
- (ScmSdkRuntimeQuery<id> *)getAllMapper_:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getAll(mapper_:)")));
- (ScmSdkRuntimeQuery<ScmSdkCommentAttachmentLocal *> *)getAttachmentsByCommentIdCommentId:(int32_t)commentId __attribute__((swift_name("getAttachmentsByCommentId(commentId:)")));
- (ScmSdkRuntimeQuery<id> *)getAttachmentsByCommentIdCommentId:(int32_t)commentId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getAttachmentsByCommentId(commentId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkCommentAttachmentLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper__:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getById(id:mapper__:)")));
- (ScmSdkRuntimeQuery<ScmSdkCommentAttachmentLocal *> *)getUnpostedAttachmentsByCommentIdCommentId:(int32_t)commentId __attribute__((swift_name("getUnpostedAttachmentsByCommentId(commentId:)")));
- (ScmSdkRuntimeQuery<id> *)getUnpostedAttachmentsByCommentIdCommentId:(int32_t)commentId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getUnpostedAttachmentsByCommentId(commentId:mapper:)")));
- (void)insertCommentId:(int32_t)commentId fileName:(NSString *)fileName remoteName:(NSString *)remoteName filePath:(NSString *)filePath mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted serverId:(ScmSdkInt * _Nullable)serverId url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("insert(commentId:fileName:remoteName:filePath:mimeType:isPosted:serverId:url:urlResized:)")));
- (void)updateAttachmentByFileNameRemoteName:(NSString *)remoteName filePath:(NSString *)filePath mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized fileName:(NSString *)fileName __attribute__((swift_name("updateAttachmentByFileName(remoteName:filePath:mimeType:isPosted:url:urlResized:fileName:)")));
- (void)updateRemoteNameRemoteName:(NSString *)remoteName fileName:(NSString *)fileName __attribute__((swift_name("updateRemoteName(remoteName:fileName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetAreaWithCheckList")))
@interface ScmSdkGetAreaWithCheckList : ScmSdkBase
- (instancetype)initWithAuditAreaId:(NSString *)auditAreaId name:(NSString *)name sortOrder:(int32_t)sortOrder serverId:(int32_t)serverId checkListName:(NSString *)checkListName checkListId:(NSString *)checkListId isUnlisted:(BOOL)isUnlisted checkListLocalSortOrder:(int32_t)checkListLocalSortOrder restOfCheckItems:(int64_t)restOfCheckItems checkListCount:(int64_t)checkListCount __attribute__((swift_name("init(auditAreaId:name:sortOrder:serverId:checkListName:checkListId:isUnlisted:checkListLocalSortOrder:restOfCheckItems:checkListCount:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkGetAreaWithCheckList *)doCopyAuditAreaId:(NSString *)auditAreaId name:(NSString *)name sortOrder:(int32_t)sortOrder serverId:(int32_t)serverId checkListName:(NSString *)checkListName checkListId:(NSString *)checkListId isUnlisted:(BOOL)isUnlisted checkListLocalSortOrder:(int32_t)checkListLocalSortOrder restOfCheckItems:(int64_t)restOfCheckItems checkListCount:(int64_t)checkListCount __attribute__((swift_name("doCopy(auditAreaId:name:sortOrder:serverId:checkListName:checkListId:isUnlisted:checkListLocalSortOrder:restOfCheckItems:checkListCount:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditAreaId __attribute__((swift_name("auditAreaId")));
@property (readonly) int64_t checkListCount __attribute__((swift_name("checkListCount")));
@property (readonly) NSString *checkListId __attribute__((swift_name("checkListId")));
@property (readonly) int32_t checkListLocalSortOrder __attribute__((swift_name("checkListLocalSortOrder")));
@property (readonly) NSString *checkListName __attribute__((swift_name("checkListName")));
@property (readonly) BOOL isUnlisted __attribute__((swift_name("isUnlisted")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int64_t restOfCheckItems __attribute__((swift_name("restOfCheckItems")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t sortOrder __attribute__((swift_name("sortOrder")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditStatisticItemLocal")))
@interface ScmSdkSiteAuditStatisticItemLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date status:(int32_t)status statusNumeric:(int32_t)statusNumeric isUseNumericRatingSystem:(BOOL)isUseNumericRatingSystem workOrderCount:(int32_t)workOrderCount commentsCount:(int32_t)commentsCount attachmentsCount:(int32_t)attachmentsCount quantityCount:(int32_t)quantityCount score:(int32_t)score system:(int32_t)system range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("init(id:auditCheckItemId:date:status:statusNumeric:isUseNumericRatingSystem:workOrderCount:commentsCount:attachmentsCount:quantityCount:score:system:range:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditStatisticItemLocal *)doCopyId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date status:(int32_t)status statusNumeric:(int32_t)statusNumeric isUseNumericRatingSystem:(BOOL)isUseNumericRatingSystem workOrderCount:(int32_t)workOrderCount commentsCount:(int32_t)commentsCount attachmentsCount:(int32_t)attachmentsCount quantityCount:(int32_t)quantityCount score:(int32_t)score system:(int32_t)system range:(NSArray<ScmSdkInt *> *)range __attribute__((swift_name("doCopy(id:auditCheckItemId:date:status:statusNumeric:isUseNumericRatingSystem:workOrderCount:commentsCount:attachmentsCount:quantityCount:score:system:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t attachmentsCount __attribute__((swift_name("attachmentsCount")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) int32_t commentsCount __attribute__((swift_name("commentsCount")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isUseNumericRatingSystem __attribute__((swift_name("isUseNumericRatingSystem")));
@property (readonly) int32_t quantityCount __attribute__((swift_name("quantityCount")));
@property (readonly) NSArray<ScmSdkInt *> *range __attribute__((swift_name("range")));
@property (readonly) int32_t score __attribute__((swift_name("score")));
@property (readonly) int32_t status __attribute__((swift_name("status")));
@property (readonly) int32_t statusNumeric __attribute__((swift_name("statusNumeric")));
@property (readonly) int32_t system __attribute__((swift_name("system")));
@property (readonly) int32_t workOrderCount __attribute__((swift_name("workOrderCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditStatisticItemLocal.Adapter")))
@interface ScmSdkSiteAuditStatisticItemLocalAdapter : ScmSdkBase
- (instancetype)initWithRangeAdapter:(id<ScmSdkRuntimeColumnAdapter>)rangeAdapter __attribute__((swift_name("init(rangeAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> rangeAdapter __attribute__((swift_name("rangeAdapter")));
@end

__attribute__((swift_name("StatisticItemQueries")))
@protocol ScmSdkStatisticItemQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditStatisticItemLocal *> *)getStatisticItemByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getStatisticItemByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getStatisticItemByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper:(id (^)(ScmSdkInt *, NSString *, NSString *, ScmSdkInt *, ScmSdkInt *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getStatisticItemByCheckItemId(auditCheckItemId:mapper:)")));
- (void)insertSiteAuditStatisticItemLocal:(ScmSdkSiteAuditStatisticItemLocal *)SiteAuditStatisticItemLocal __attribute__((swift_name("insert(SiteAuditStatisticItemLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SearchHistoryItemLocal")))
@interface ScmSdkSearchHistoryItemLocal : ScmSdkBase
- (instancetype)initWithId:(int64_t)id userId:(int64_t)userId startDate:(NSString *)startDate text:(NSString *)text __attribute__((swift_name("init(id:userId:startDate:text:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSearchHistoryItemLocal *)doCopyId:(int64_t)id userId:(int64_t)userId startDate:(NSString *)startDate text:(NSString *)text __attribute__((swift_name("doCopy(id:userId:startDate:text:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString *startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString *text __attribute__((swift_name("text")));
@property (readonly) int64_t userId __attribute__((swift_name("userId")));
@end

__attribute__((swift_name("SearchHistoryQueries")))
@protocol ScmSdkSearchHistoryQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteId:(int64_t)id __attribute__((swift_name("delete(id:)")));
- (ScmSdkRuntimeQuery<ScmSdkSearchHistoryItemLocal *> *)getByUserIdUserId_:(int64_t)userId __attribute__((swift_name("getByUserId(userId_:)")));
- (ScmSdkRuntimeQuery<id> *)getByUserIdUserId:(int64_t)userId mapper_:(id (^)(ScmSdkLong *, ScmSdkLong *, NSString *, NSString *))mapper __attribute__((swift_name("getByUserId(userId:mapper_:)")));
- (void)insertId:(ScmSdkLong * _Nullable)id userId:(int64_t)userId startDate:(NSString *)startDate text:(NSString *)text __attribute__((swift_name("insert(id:userId:startDate:text:)")));
@end

__attribute__((swift_name("AdditionalApprovalCodeQueries")))
@protocol ScmSdkAdditionalApprovalCodeQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditAdditionalApprovalCodeLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper:(id (^)(ScmSdkLong *, ScmSdkInt *, NSString *, NSString *))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper:)")));
- (void)insertId:(ScmSdkLong * _Nullable)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("insert(id:workOrderTemplateId:name:value:)")));
- (void)updateValue:(NSString *)value workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name __attribute__((swift_name("update(value:workOrderTemplateId:name:)")));
@end

__attribute__((swift_name("AdditionalFieldQueries")))
@protocol ScmSdkAdditionalFieldQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderAdditionalFieldLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper_:(id (^)(ScmSdkLong *, ScmSdkInt *, NSString *, NSString *))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper_:)")));
- (void)insertId:(ScmSdkLong * _Nullable)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("insert(id:workOrderTemplateId:name:value:)")));
@end

__attribute__((swift_name("ContactInfoQueries")))
@protocol ScmSdkContactInfoQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderContactInfoLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper__:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper__:)")));
- (void)insertId:(ScmSdkInt * _Nullable)id workOrderTemplateId:(int32_t)workOrderTemplateId locationId:(int32_t)locationId providerId:(int32_t)providerId tradeName:(NSString *)tradeName __attribute__((swift_name("insert(id:workOrderTemplateId:locationId:providerId:tradeName:)")));
- (void)updateProviderId:(int32_t)providerId tradeName:(NSString *)tradeName workOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("update(providerId:tradeName:workOrderTemplateId:)")));
@end

__attribute__((swift_name("IssueRequestInfoQueries")))
@protocol ScmSdkIssueRequestInfoQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderIssueRequestInfoLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper___:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper___:)")));
- (void)insertId:(ScmSdkInt * _Nullable)id workOrderTemplateId:(int32_t)workOrderTemplateId areaId:(int32_t)areaId problemType:(NSString *)problemType equipmentType:(NSString *)equipmentType extendedAreaName:(NSString *)extendedAreaName __attribute__((swift_name("insert(id:workOrderTemplateId:areaId:problemType:equipmentType:extendedAreaName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditAdditionalApprovalCodeLocal")))
@interface ScmSdkSiteAuditAdditionalApprovalCodeLocal : ScmSdkBase
- (instancetype)initWithId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(id:workOrderTemplateId:name:value:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditAdditionalApprovalCodeLocal *)doCopyId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(id:workOrderTemplateId:name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditWorkOrderAdditionalFieldLocal")))
@interface ScmSdkSiteAuditWorkOrderAdditionalFieldLocal : ScmSdkBase
- (instancetype)initWithId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(id:workOrderTemplateId:name:value:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditWorkOrderAdditionalFieldLocal *)doCopyId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(id:workOrderTemplateId:name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditWorkOrderContactInfoLocal")))
@interface ScmSdkSiteAuditWorkOrderContactInfoLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId locationId:(int32_t)locationId providerId:(int32_t)providerId tradeName:(NSString *)tradeName __attribute__((swift_name("init(id:workOrderTemplateId:locationId:providerId:tradeName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditWorkOrderContactInfoLocal *)doCopyId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId locationId:(int32_t)locationId providerId:(int32_t)providerId tradeName:(NSString *)tradeName __attribute__((swift_name("doCopy(id:workOrderTemplateId:locationId:providerId:tradeName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) int32_t providerId __attribute__((swift_name("providerId")));
@property (readonly) NSString *tradeName __attribute__((swift_name("tradeName")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditWorkOrderIssueRequestInfoLocal")))
@interface ScmSdkSiteAuditWorkOrderIssueRequestInfoLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId areaId:(int32_t)areaId problemType:(NSString *)problemType equipmentType:(NSString *)equipmentType extendedAreaName:(NSString *)extendedAreaName __attribute__((swift_name("init(id:workOrderTemplateId:areaId:problemType:equipmentType:extendedAreaName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditWorkOrderIssueRequestInfoLocal *)doCopyId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId areaId:(int32_t)areaId problemType:(NSString *)problemType equipmentType:(NSString *)equipmentType extendedAreaName:(NSString *)extendedAreaName __attribute__((swift_name("doCopy(id:workOrderTemplateId:areaId:problemType:equipmentType:extendedAreaName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t areaId __attribute__((swift_name("areaId")));
@property (readonly) NSString *equipmentType __attribute__((swift_name("equipmentType")));
@property (readonly) NSString *extendedAreaName __attribute__((swift_name("extendedAreaName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *problemType __attribute__((swift_name("problemType")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditWorkOrderTemplateLocal")))
@interface ScmSdkSiteAuditWorkOrderTemplateLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId auditCheckItemId:(NSString *)auditCheckItemId assetId:(ScmSdkInt * _Nullable)assetId purchaseNumber:(NSString * _Nullable)purchaseNumber description:(NSString *)description scheduledDate:(NSString *)scheduledDate priority:(NSString *)priority callerName:(NSString *)callerName problemCode:(NSString *)problemCode callDate:(NSString *)callDate comment:(NSString *)comment nte:(float)nte currencyId:(int32_t)currencyId problemSource:(NSString *)problemSource primaryValue:(NSString *)primaryValue extended:(NSString *)extended category:(NSString *)category setupId:(ScmSdkInt * _Nullable)setupId weatherTypeId:(ScmSdkInt * _Nullable)weatherTypeId weatherTypeName:(NSString * _Nullable)weatherTypeName selection:(NSString *)selection recallWorkOrderSelection:(NSString *)recallWorkOrderSelection glCode:(NSString *)glCode providerEmails:(NSString *)providerEmails workOrderNumber:(NSString *)workOrderNumber recallWorkOrderId:(ScmSdkInt * _Nullable)recallWorkOrderId __attribute__((swift_name("init(id:serverId:auditCheckItemId:assetId:purchaseNumber:description:scheduledDate:priority:callerName:problemCode:callDate:comment:nte:currencyId:problemSource:primaryValue:extended:category:setupId:weatherTypeId:weatherTypeName:selection:recallWorkOrderSelection:glCode:providerEmails:workOrderNumber:recallWorkOrderId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (float)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component22 __attribute__((swift_name("component22()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component23 __attribute__((swift_name("component23()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component24 __attribute__((swift_name("component24()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component25 __attribute__((swift_name("component25()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component26 __attribute__((swift_name("component26()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component27 __attribute__((swift_name("component27()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInt * _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditWorkOrderTemplateLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId auditCheckItemId:(NSString *)auditCheckItemId assetId:(ScmSdkInt * _Nullable)assetId purchaseNumber:(NSString * _Nullable)purchaseNumber description:(NSString *)description scheduledDate:(NSString *)scheduledDate priority:(NSString *)priority callerName:(NSString *)callerName problemCode:(NSString *)problemCode callDate:(NSString *)callDate comment:(NSString *)comment nte:(float)nte currencyId:(int32_t)currencyId problemSource:(NSString *)problemSource primaryValue:(NSString *)primaryValue extended:(NSString *)extended category:(NSString *)category setupId:(ScmSdkInt * _Nullable)setupId weatherTypeId:(ScmSdkInt * _Nullable)weatherTypeId weatherTypeName:(NSString * _Nullable)weatherTypeName selection:(NSString *)selection recallWorkOrderSelection:(NSString *)recallWorkOrderSelection glCode:(NSString *)glCode providerEmails:(NSString *)providerEmails workOrderNumber:(NSString *)workOrderNumber recallWorkOrderId:(ScmSdkInt * _Nullable)recallWorkOrderId __attribute__((swift_name("doCopy(id:serverId:auditCheckItemId:assetId:purchaseNumber:description:scheduledDate:priority:callerName:problemCode:callDate:comment:nte:currencyId:problemSource:primaryValue:extended:category:setupId:weatherTypeId:weatherTypeName:selection:recallWorkOrderSelection:glCode:providerEmails:workOrderNumber:recallWorkOrderId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkInt * _Nullable assetId __attribute__((swift_name("assetId")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *callDate __attribute__((swift_name("callDate")));
@property (readonly) NSString *callerName __attribute__((swift_name("callerName")));
@property (readonly) NSString *category __attribute__((swift_name("category")));
@property (readonly) NSString *comment __attribute__((swift_name("comment")));
@property (readonly) int32_t currencyId __attribute__((swift_name("currencyId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *extended __attribute__((swift_name("extended")));
@property (readonly) NSString *glCode __attribute__((swift_name("glCode")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) float nte __attribute__((swift_name("nte")));
@property (readonly) NSString *primaryValue __attribute__((swift_name("primaryValue")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problemCode __attribute__((swift_name("problemCode")));
@property (readonly) NSString *problemSource __attribute__((swift_name("problemSource")));
@property (readonly) NSString *providerEmails __attribute__((swift_name("providerEmails")));
@property (readonly) NSString * _Nullable purchaseNumber __attribute__((swift_name("purchaseNumber")));
@property (readonly) ScmSdkInt * _Nullable recallWorkOrderId __attribute__((swift_name("recallWorkOrderId")));
@property (readonly) NSString *recallWorkOrderSelection __attribute__((swift_name("recallWorkOrderSelection")));
@property (readonly) NSString *scheduledDate __attribute__((swift_name("scheduledDate")));
@property (readonly) NSString *selection __attribute__((swift_name("selection")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) ScmSdkInt * _Nullable setupId __attribute__((swift_name("setupId")));
@property (readonly) ScmSdkInt * _Nullable weatherTypeId __attribute__((swift_name("weatherTypeId")));
@property (readonly) NSString * _Nullable weatherTypeName __attribute__((swift_name("weatherTypeName")));
@property (readonly) NSString *workOrderNumber __attribute__((swift_name("workOrderNumber")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditWorkOrderTroubleshootingFieldLocal")))
@interface ScmSdkSiteAuditWorkOrderTroubleshootingFieldLocal : ScmSdkBase
- (instancetype)initWithId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(id:workOrderTemplateId:name:value:)"))) __attribute__((objc_designated_initializer));
- (int64_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkSiteAuditWorkOrderTroubleshootingFieldLocal *)doCopyId:(int64_t)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("doCopy(id:workOrderTemplateId:name:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t id __attribute__((swift_name("id")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((swift_name("TroubleshootingFieldQueries")))
@protocol ScmSdkTroubleshootingFieldQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderTroubleshootingFieldLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper____:(id (^)(ScmSdkLong *, ScmSdkInt *, NSString *, NSString *))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper____:)")));
- (void)insertId:(ScmSdkLong * _Nullable)id workOrderTemplateId:(int32_t)workOrderTemplateId name:(NSString *)name value:(NSString *)value __attribute__((swift_name("insert(id:workOrderTemplateId:name:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderAttachmentLocal")))
@interface ScmSdkWorkOrderAttachmentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId woAttachmentId:(NSString *)woAttachmentId name:(NSString *)name path:(NSString *)path remoteName:(NSString *)remoteName description:(NSString *)description mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("init(id:workOrderTemplateId:woAttachmentId:name:path:remoteName:description:mimeType:isPosted:url:urlResized:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWorkOrderAttachmentLocal *)doCopyId:(int32_t)id workOrderTemplateId:(int32_t)workOrderTemplateId woAttachmentId:(NSString *)woAttachmentId name:(NSString *)name path:(NSString *)path remoteName:(NSString *)remoteName description:(NSString *)description mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("doCopy(id:workOrderTemplateId:woAttachmentId:name:path:remoteName:description:mimeType:isPosted:url:urlResized:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isPosted __attribute__((swift_name("isPosted")));
@property (readonly) NSString *mimeType __attribute__((swift_name("mimeType")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *path __attribute__((swift_name("path")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) NSString * _Nullable url __attribute__((swift_name("url")));
@property (readonly) NSString * _Nullable urlResized __attribute__((swift_name("urlResized")));
@property (readonly) NSString *woAttachmentId __attribute__((swift_name("woAttachmentId")));
@property (readonly) int32_t workOrderTemplateId __attribute__((swift_name("workOrderTemplateId")));
@end

__attribute__((swift_name("WorkOrderAttachmentQueries")))
@protocol ScmSdkWorkOrderAttachmentQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteId_:(int32_t)id __attribute__((swift_name("delete(id_:)")));
- (void)deleteByNameName:(NSString *)name __attribute__((swift_name("deleteByName(name:)")));
- (void)deleteByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("deleteByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<ScmSdkWorkOrderAttachmentLocal *> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper_____:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getByWorkOrderTemplateId(workOrderTemplateId:mapper_____:)")));
- (ScmSdkRuntimeQuery<ScmSdkWorkOrderAttachmentLocal *> *)getUnpostedAttachmentsByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId __attribute__((swift_name("getUnpostedAttachmentsByWorkOrderTemplateId(workOrderTemplateId:)")));
- (ScmSdkRuntimeQuery<id> *)getUnpostedAttachmentsByWorkOrderTemplateIdWorkOrderTemplateId:(int32_t)workOrderTemplateId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkBoolean *, NSString * _Nullable, NSString * _Nullable))mapper __attribute__((swift_name("getUnpostedAttachmentsByWorkOrderTemplateId(workOrderTemplateId:mapper:)")));
- (void)insertWorkOrderTemplateId:(int32_t)workOrderTemplateId woAttachmentId:(NSString *)woAttachmentId name:(NSString *)name path:(NSString *)path remoteName:(NSString *)remoteName description:(NSString *)description mimeType:(NSString *)mimeType isPosted:(BOOL)isPosted url:(NSString * _Nullable)url urlResized:(NSString * _Nullable)urlResized __attribute__((swift_name("insert(workOrderTemplateId:woAttachmentId:name:path:remoteName:description:mimeType:isPosted:url:urlResized:)")));
- (void)updateRemoteNameRemoteName:(NSString *)remoteName name:(NSString *)name __attribute__((swift_name("updateRemoteName(remoteName:name:)")));
@end

__attribute__((swift_name("WorkOrderTemplateQueries")))
@protocol ScmSdkWorkOrderTemplateQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteId:(int32_t)id auditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("delete(id:auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderTemplateLocal *> *)getByAuditIdAuditInfoId:(int64_t)auditInfoId __attribute__((swift_name("getByAuditId(auditInfoId:)")));
- (ScmSdkRuntimeQuery<id> *)getByAuditIdAuditInfoId:(int64_t)auditInfoId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkFloat *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getByAuditId(auditInfoId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderTemplateLocal *> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkFloat *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getByCheckItemId(auditCheckItemId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkSiteAuditWorkOrderTemplateLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper___:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkFloat *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable, ScmSdkInt * _Nullable, NSString * _Nullable, NSString *, NSString *, NSString *, NSString *, NSString *, ScmSdkInt * _Nullable))mapper __attribute__((swift_name("getById(id:mapper___:)")));
- (void)insertSiteAuditWorkOrderTemplateLocal:(ScmSdkSiteAuditWorkOrderTemplateLocal *)SiteAuditWorkOrderTemplateLocal __attribute__((swift_name("insert(SiteAuditWorkOrderTemplateLocal:)")));
- (void)updateAssetId:(ScmSdkInt * _Nullable)assetId purchaseNumber:(NSString * _Nullable)purchaseNumber description:(NSString *)description scheduledDate:(NSString *)scheduledDate priority:(NSString *)priority callerName:(NSString *)callerName problemCode:(NSString *)problemCode callDate:(NSString *)callDate comment:(NSString *)comment nte:(float)nte currencyId:(int32_t)currencyId problemSource:(NSString *)problemSource primaryValue:(NSString *)primaryValue extended:(NSString *)extended category:(NSString *)category setupId:(ScmSdkInt * _Nullable)setupId weatherTypeId:(ScmSdkInt * _Nullable)weatherTypeId weatherTypeName:(NSString * _Nullable)weatherTypeName selection:(NSString *)selection providerEmails:(NSString *)providerEmails glCode:(NSString *)glCode workOrderNumber:(NSString *)workOrderNumber id:(int32_t)id __attribute__((swift_name("update(assetId:purchaseNumber:description:scheduledDate:priority:callerName:problemCode:callDate:comment:nte:currencyId:problemSource:primaryValue:extended:category:setupId:weatherTypeId:weatherTypeName:selection:providerEmails:glCode:workOrderNumber:id:)")));
- (void)updateServerIdServerId:(int32_t)serverId id:(int32_t)id __attribute__((swift_name("updateServerId(serverId:id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemCommentAttachmentLocal")))
@interface ScmSdkStatisticItemCommentAttachmentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticCommentId:(int32_t)statisticCommentId remoteName:(NSString *)remoteName url:(NSString *)url urlResized:(NSString *)urlResized fileName:(NSString * _Nullable)fileName __attribute__((swift_name("init(id:serverId:statisticCommentId:remoteName:url:urlResized:fileName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemCommentAttachmentLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticCommentId:(int32_t)statisticCommentId remoteName:(NSString *)remoteName url:(NSString *)url urlResized:(NSString *)urlResized fileName:(NSString * _Nullable)fileName __attribute__((swift_name("doCopy(id:serverId:statisticCommentId:remoteName:url:urlResized:fileName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable fileName __attribute__((swift_name("fileName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticCommentId __attribute__((swift_name("statisticCommentId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((swift_name("StatisticItemCommentAttachmentQueries")))
@protocol ScmSdkStatisticItemCommentAttachmentQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemCommentAttachmentLocal *> *)getByCommentIdStatisticCommentId:(int32_t)statisticCommentId __attribute__((swift_name("getByCommentId(statisticCommentId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCommentIdStatisticCommentId:(int32_t)statisticCommentId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable))mapper __attribute__((swift_name("getByCommentId(statisticCommentId:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemCommentAttachmentLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper____:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable))mapper __attribute__((swift_name("getById(id:mapper____:)")));
- (void)insertStatisticItemCommentAttachmentLocal:(ScmSdkStatisticItemCommentAttachmentLocal *)StatisticItemCommentAttachmentLocal __attribute__((swift_name("insert(StatisticItemCommentAttachmentLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemCommentLocal")))
@interface ScmSdkStatisticItemCommentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date description:(NSString *)description __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:date:description:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemCommentLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId date:(NSString *)date description:(NSString *)description __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:date:description:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *date __attribute__((swift_name("date")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@end

__attribute__((swift_name("StatisticItemCommentQueries")))
@protocol ScmSdkStatisticItemCommentQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemCommentLocal *> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper_:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getByCheckItemId(auditCheckItemId:mapper_:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemCommentLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper_____:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getById(id:mapper_____:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemCommentLocal *> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId __attribute__((swift_name("getByStatisticItemId(statisticItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getByStatisticItemId(statisticItemId:mapper:)")));
- (void)insertStatisticItemCommentLocal:(ScmSdkStatisticItemCommentLocal *)StatisticItemCommentLocal __attribute__((swift_name("insert(StatisticItemCommentLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemQuantityLocal")))
@interface ScmSdkStatisticItemQuantityLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId currency:(NSString *)currency value:(int32_t)value __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:currency:value:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemQuantityLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId currency:(NSString *)currency value:(int32_t)value __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:currency:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *currency __attribute__((swift_name("currency")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("StatisticItemQuantityQueries")))
@protocol ScmSdkStatisticItemQuantityQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemQuantityLocal *> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper__:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getByCheckItemId(auditCheckItemId:mapper__:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemQuantityLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper______:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getById(id:mapper______:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemQuantityLocal *> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId __attribute__((swift_name("getByStatisticItemId(statisticItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId mapper_:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getByStatisticItemId(statisticItemId:mapper_:)")));
- (void)insertStatisticItemQuantityLocal:(ScmSdkStatisticItemQuantityLocal *)StatisticItemQuantityLocal __attribute__((swift_name("insert(StatisticItemQuantityLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemWorkOrderAttachmentLocal")))
@interface ScmSdkStatisticItemWorkOrderAttachmentLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticWoId:(int32_t)statisticWoId remoteName:(NSString *)remoteName url:(NSString *)url urlResized:(NSString *)urlResized fileName:(NSString * _Nullable)fileName __attribute__((swift_name("init(id:serverId:statisticWoId:remoteName:url:urlResized:fileName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString * _Nullable)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemWorkOrderAttachmentLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticWoId:(int32_t)statisticWoId remoteName:(NSString *)remoteName url:(NSString *)url urlResized:(NSString *)urlResized fileName:(NSString * _Nullable)fileName __attribute__((swift_name("doCopy(id:serverId:statisticWoId:remoteName:url:urlResized:fileName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable fileName __attribute__((swift_name("fileName")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *remoteName __attribute__((swift_name("remoteName")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticWoId __attribute__((swift_name("statisticWoId")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@property (readonly) NSString *urlResized __attribute__((swift_name("urlResized")));
@end

__attribute__((swift_name("StatisticItemWorkOrderAttachmentQueries")))
@protocol ScmSdkStatisticItemWorkOrderAttachmentQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemWorkOrderAttachmentLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper_______:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable))mapper __attribute__((swift_name("getById(id:mapper_______:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemWorkOrderAttachmentLocal *> *)getByWorkOrderIdStatisticWoId:(int32_t)statisticWoId __attribute__((swift_name("getByWorkOrderId(statisticWoId:)")));
- (ScmSdkRuntimeQuery<id> *)getByWorkOrderIdStatisticWoId:(int32_t)statisticWoId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString * _Nullable))mapper __attribute__((swift_name("getByWorkOrderId(statisticWoId:mapper:)")));
- (void)insertStatisticItemWorkOrderAttachmentLocal:(ScmSdkStatisticItemWorkOrderAttachmentLocal *)StatisticItemWorkOrderAttachmentLocal __attribute__((swift_name("insert(StatisticItemWorkOrderAttachmentLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StatisticItemWorkOrderLocal")))
@interface ScmSdkStatisticItemWorkOrderLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId description:(NSString *)description priority:(NSString *)priority scheduleDate:(NSString *)scheduleDate problemCode:(NSString *)problemCode __attribute__((swift_name("init(id:serverId:statisticItemId:auditCheckItemId:description:priority:scheduleDate:problemCode:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStatisticItemWorkOrderLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId statisticItemId:(int32_t)statisticItemId auditCheckItemId:(NSString *)auditCheckItemId description:(NSString *)description priority:(NSString *)priority scheduleDate:(NSString *)scheduleDate problemCode:(NSString *)problemCode __attribute__((swift_name("doCopy(id:serverId:statisticItemId:auditCheckItemId:description:priority:scheduleDate:problemCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *auditCheckItemId __attribute__((swift_name("auditCheckItemId")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) NSString *priority __attribute__((swift_name("priority")));
@property (readonly) NSString *problemCode __attribute__((swift_name("problemCode")));
@property (readonly) NSString *scheduleDate __attribute__((swift_name("scheduleDate")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t statisticItemId __attribute__((swift_name("statisticItemId")));
@end

__attribute__((swift_name("StatisticItemWorkOrderQueries")))
@protocol ScmSdkStatisticItemWorkOrderQueries <ScmSdkRuntimeTransacter>
@required
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemWorkOrderLocal *> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId __attribute__((swift_name("getByCheckItemId(auditCheckItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByCheckItemIdAuditCheckItemId:(NSString *)auditCheckItemId mapper___:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getByCheckItemId(auditCheckItemId:mapper___:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemWorkOrderLocal *> *)getByIdId_:(int32_t)id __attribute__((swift_name("getById(id_:)")));
- (ScmSdkRuntimeQuery<id> *)getByIdId:(int32_t)id mapper________:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getById(id:mapper________:)")));
- (ScmSdkRuntimeQuery<ScmSdkStatisticItemWorkOrderLocal *> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId __attribute__((swift_name("getByStatisticItemId(statisticItemId:)")));
- (ScmSdkRuntimeQuery<id> *)getByStatisticItemIdStatisticItemId:(int32_t)statisticItemId mapper__:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, NSString *, NSString *, NSString *))mapper __attribute__((swift_name("getByStatisticItemId(statisticItemId:mapper__:)")));
- (void)insertStatisticItemWorkOrderLocal:(ScmSdkStatisticItemWorkOrderLocal *)StatisticItemWorkOrderLocal __attribute__((swift_name("insert(StatisticItemWorkOrderLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GetMaxFilterId")))
@interface ScmSdkGetMaxFilterId : ScmSdkBase
- (instancetype)initWithMAX:(ScmSdkLong * _Nullable)MAX __attribute__((swift_name("init(MAX:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkLong * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkGetMaxFilterId *)doCopyMAX:(ScmSdkLong * _Nullable)MAX __attribute__((swift_name("doCopy(MAX:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkLong * _Nullable MAX __attribute__((swift_name("MAX")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFilterLocal")))
@interface ScmSdkInvoiceFilterLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id isDefault:(BOOL)isDefault name:(NSString *)name monthsAgo:(int32_t)monthsAgo minAmount:(NSString *)minAmount maxAmount:(NSString *)maxAmount sortBy:(NSString *)sortBy statuses:(NSArray<NSString *> *)statuses assignedTo:(NSArray<NSString *> *)assignedTo districts:(NSArray<NSString *> *)districts trades:(NSArray<ScmSdkInt *> *)trades providers:(NSArray<ScmSdkInt *> *)providers categories:(NSArray<ScmSdkInt *> *)categories __attribute__((swift_name("init(id:isDefault:name:monthsAgo:minAmount:maxAmount:sortBy:statuses:assignedTo:districts:trades:providers:categories:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkInt *> *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<NSString *> *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkInvoiceFilterLocal *)doCopyId:(int32_t)id isDefault:(BOOL)isDefault name:(NSString *)name monthsAgo:(int32_t)monthsAgo minAmount:(NSString *)minAmount maxAmount:(NSString *)maxAmount sortBy:(NSString *)sortBy statuses:(NSArray<NSString *> *)statuses assignedTo:(NSArray<NSString *> *)assignedTo districts:(NSArray<NSString *> *)districts trades:(NSArray<ScmSdkInt *> *)trades providers:(NSArray<ScmSdkInt *> *)providers categories:(NSArray<ScmSdkInt *> *)categories __attribute__((swift_name("doCopy(id:isDefault:name:monthsAgo:minAmount:maxAmount:sortBy:statuses:assignedTo:districts:trades:providers:categories:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *assignedTo __attribute__((swift_name("assignedTo")));
@property (readonly) NSArray<ScmSdkInt *> *categories __attribute__((swift_name("categories")));
@property (readonly) NSArray<NSString *> *districts __attribute__((swift_name("districts")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isDefault __attribute__((swift_name("isDefault")));
@property (readonly) NSString *maxAmount __attribute__((swift_name("maxAmount")));
@property (readonly) NSString *minAmount __attribute__((swift_name("minAmount")));
@property (readonly) int32_t monthsAgo __attribute__((swift_name("monthsAgo")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<ScmSdkInt *> *providers __attribute__((swift_name("providers")));
@property (readonly) NSString *sortBy __attribute__((swift_name("sortBy")));
@property (readonly) NSArray<NSString *> *statuses __attribute__((swift_name("statuses")));
@property (readonly) NSArray<ScmSdkInt *> *trades __attribute__((swift_name("trades")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceFilterLocal.Adapter")))
@interface ScmSdkInvoiceFilterLocalAdapter : ScmSdkBase
- (instancetype)initWithStatusesAdapter:(id<ScmSdkRuntimeColumnAdapter>)statusesAdapter assignedToAdapter:(id<ScmSdkRuntimeColumnAdapter>)assignedToAdapter districtsAdapter:(id<ScmSdkRuntimeColumnAdapter>)districtsAdapter tradesAdapter:(id<ScmSdkRuntimeColumnAdapter>)tradesAdapter providersAdapter:(id<ScmSdkRuntimeColumnAdapter>)providersAdapter categoriesAdapter:(id<ScmSdkRuntimeColumnAdapter>)categoriesAdapter __attribute__((swift_name("init(statusesAdapter:assignedToAdapter:districtsAdapter:tradesAdapter:providersAdapter:categoriesAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> assignedToAdapter __attribute__((swift_name("assignedToAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> categoriesAdapter __attribute__((swift_name("categoriesAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> districtsAdapter __attribute__((swift_name("districtsAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> providersAdapter __attribute__((swift_name("providersAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> statusesAdapter __attribute__((swift_name("statusesAdapter")));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> tradesAdapter __attribute__((swift_name("tradesAdapter")));
@end

__attribute__((swift_name("InvoiceFilterQueries")))
@protocol ScmSdkInvoiceFilterQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteId_:(int32_t)id __attribute__((swift_name("delete(id_:)")));
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (ScmSdkRuntimeQuery<ScmSdkInvoiceFilterLocal *> *)getDefault __attribute__((swift_name("getDefault()")));
- (ScmSdkRuntimeQuery<id> *)getDefaultMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getDefault(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkInvoiceFilterLocal *> *)getFilterByIdId:(int32_t)id __attribute__((swift_name("getFilterById(id:)")));
- (ScmSdkRuntimeQuery<id> *)getFilterByIdId:(int32_t)id mapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getFilterById(id:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkInvoiceFilterLocal *> *)getFilters __attribute__((swift_name("getFilters()")));
- (ScmSdkRuntimeQuery<id> *)getFiltersMapper:(id (^)(ScmSdkInt *, ScmSdkBoolean *, NSString *, ScmSdkInt *, NSString *, NSString *, NSString *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<NSString *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *, NSArray<ScmSdkInt *> *))mapper __attribute__((swift_name("getFilters(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkLong *> *)getFiltersCount __attribute__((swift_name("getFiltersCount()")));
- (ScmSdkRuntimeQuery<ScmSdkGetMaxFilterId *> *)getMaxFilterId __attribute__((swift_name("getMaxFilterId()")));
- (ScmSdkRuntimeQuery<id> *)getMaxFilterIdMapper:(id (^)(ScmSdkLong * _Nullable))mapper __attribute__((swift_name("getMaxFilterId(mapper:)")));
- (void)insertFiltersInvoiceFilterLocal:(ScmSdkInvoiceFilterLocal *)InvoiceFilterLocal __attribute__((swift_name("insertFilters(InvoiceFilterLocal:)")));
- (void)removeOldDefault __attribute__((swift_name("removeOldDefault()")));
- (void)setAssignedToAssignedTo:(NSArray<NSString *> *)assignedTo id:(int32_t)id __attribute__((swift_name("setAssignedTo(assignedTo:id:)")));
- (void)setCategoriesCategories:(NSArray<ScmSdkInt *> *)categories id:(int32_t)id __attribute__((swift_name("setCategories(categories:id:)")));
- (void)setDefaultId:(int32_t)id __attribute__((swift_name("setDefault(id:)")));
- (void)setDistrictsDistricts:(NSArray<NSString *> *)districts id:(int32_t)id __attribute__((swift_name("setDistricts(districts:id:)")));
- (void)setMaxAmountMaxAmount:(NSString *)maxAmount id:(int32_t)id __attribute__((swift_name("setMaxAmount(maxAmount:id:)")));
- (void)setMinAmountMinAmount:(NSString *)minAmount id:(int32_t)id __attribute__((swift_name("setMinAmount(minAmount:id:)")));
- (void)setMonthsAgoMonthsAgo:(int32_t)monthsAgo id:(int32_t)id __attribute__((swift_name("setMonthsAgo(monthsAgo:id:)")));
- (void)setNameName:(NSString *)name id:(int32_t)id __attribute__((swift_name("setName(name:id:)")));
- (void)setProvidersProviders:(NSArray<ScmSdkInt *> *)providers id:(int32_t)id __attribute__((swift_name("setProviders(providers:id:)")));
- (void)setSortBySortBy:(NSString *)sortBy id:(int32_t)id __attribute__((swift_name("setSortBy(sortBy:id:)")));
- (void)setStatusesStatuses:(NSArray<NSString *> *)statuses id:(int32_t)id __attribute__((swift_name("setStatuses(statuses:id:)")));
- (void)setTradesTrades:(NSArray<ScmSdkInt *> *)trades id:(int32_t)id __attribute__((swift_name("setTrades(trades:id:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StoreLocationLocal")))
@interface ScmSdkStoreLocationLocal : ScmSdkBase
- (instancetype)initWithFeatureKey:(NSString *)featureKey id:(int32_t)id subscriberId:(int32_t)subscriberId storeId:(NSString *)storeId name:(NSString *)name latitude:(double)latitude longitude:(double)longitude address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state region:(NSString *)region district:(NSString *)district zip:(NSString *)zip country:(NSString *)country phone:(NSString *)phone contact:(NSString *)contact openDate:(NSString *)openDate closeDate:(NSString *)closeDate notes:(NSArray<ScmSdkStoreLocationNoteDataLocal *> *)notes distance:(double)distance __attribute__((swift_name("init(featureKey:id:subscriberId:storeId:name:latitude:longitude:address1:address2:city:state:region:district:zip:country:phone:contact:openDate:closeDate:notes:distance:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component12 __attribute__((swift_name("component12()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component13 __attribute__((swift_name("component13()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component14 __attribute__((swift_name("component14()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component15 __attribute__((swift_name("component15()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component16 __attribute__((swift_name("component16()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component17 __attribute__((swift_name("component17()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component18 __attribute__((swift_name("component18()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component19 __attribute__((swift_name("component19()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSArray<ScmSdkStoreLocationNoteDataLocal *> *)component20 __attribute__((swift_name("component20()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component21 __attribute__((swift_name("component21()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (double)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkStoreLocationLocal *)doCopyFeatureKey:(NSString *)featureKey id:(int32_t)id subscriberId:(int32_t)subscriberId storeId:(NSString *)storeId name:(NSString *)name latitude:(double)latitude longitude:(double)longitude address1:(NSString *)address1 address2:(NSString *)address2 city:(NSString *)city state:(NSString *)state region:(NSString *)region district:(NSString *)district zip:(NSString *)zip country:(NSString *)country phone:(NSString *)phone contact:(NSString *)contact openDate:(NSString *)openDate closeDate:(NSString *)closeDate notes:(NSArray<ScmSdkStoreLocationNoteDataLocal *> *)notes distance:(double)distance __attribute__((swift_name("doCopy(featureKey:id:subscriberId:storeId:name:latitude:longitude:address1:address2:city:state:region:district:zip:country:phone:contact:openDate:closeDate:notes:distance:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *address1 __attribute__((swift_name("address1")));
@property (readonly) NSString *address2 __attribute__((swift_name("address2")));
@property (readonly) NSString *city __attribute__((swift_name("city")));
@property (readonly) NSString *closeDate __attribute__((swift_name("closeDate")));
@property (readonly) NSString *contact __attribute__((swift_name("contact")));
@property (readonly) NSString *country __attribute__((swift_name("country")));
@property (readonly) double distance __attribute__((swift_name("distance")));
@property (readonly) NSString *district __attribute__((swift_name("district")));
@property (readonly) NSString *featureKey __attribute__((swift_name("featureKey")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) double latitude __attribute__((swift_name("latitude")));
@property (readonly) double longitude __attribute__((swift_name("longitude")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSArray<ScmSdkStoreLocationNoteDataLocal *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString *openDate __attribute__((swift_name("openDate")));
@property (readonly) NSString *phone __attribute__((swift_name("phone")));
@property (readonly) NSString *region __attribute__((swift_name("region")));
@property (readonly) NSString *state __attribute__((swift_name("state")));
@property (readonly) NSString *storeId __attribute__((swift_name("storeId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *zip __attribute__((swift_name("zip")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StoreLocationLocal.Adapter")))
@interface ScmSdkStoreLocationLocalAdapter : ScmSdkBase
- (instancetype)initWithNotesAdapter:(id<ScmSdkRuntimeColumnAdapter>)notesAdapter __attribute__((swift_name("init(notesAdapter:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkRuntimeColumnAdapter> notesAdapter __attribute__((swift_name("notesAdapter")));
@end

__attribute__((swift_name("StoreLocationLocalQueries")))
@protocol ScmSdkStoreLocationLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAll __attribute__((swift_name("deleteAll()")));
- (ScmSdkRuntimeQuery<ScmSdkStoreLocationLocal *> *)getStoreLocationId:(int32_t)id __attribute__((swift_name("getStoreLocation(id:)")));
- (ScmSdkRuntimeQuery<id> *)getStoreLocationId:(int32_t)id mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkDouble *, ScmSdkDouble *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSArray<ScmSdkStoreLocationNoteDataLocal *> *, ScmSdkDouble *))mapper __attribute__((swift_name("getStoreLocation(id:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkStoreLocationLocal *> *)getStoreLocationByFeatureKeyFeatureKey:(NSString *)featureKey __attribute__((swift_name("getStoreLocationByFeatureKey(featureKey:)")));
- (ScmSdkRuntimeQuery<id> *)getStoreLocationByFeatureKeyFeatureKey:(NSString *)featureKey mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkDouble *, ScmSdkDouble *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSArray<ScmSdkStoreLocationNoteDataLocal *> *, ScmSdkDouble *))mapper __attribute__((swift_name("getStoreLocationByFeatureKey(featureKey:mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkStoreLocationLocal *> *)getStoreLocationByStoreIdStoreId:(NSString *)storeId __attribute__((swift_name("getStoreLocationByStoreId(storeId:)")));
- (ScmSdkRuntimeQuery<id> *)getStoreLocationByStoreIdStoreId:(NSString *)storeId mapper:(id (^)(NSString *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkDouble *, ScmSdkDouble *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSString *, NSArray<ScmSdkStoreLocationNoteDataLocal *> *, ScmSdkDouble *))mapper __attribute__((swift_name("getStoreLocationByStoreId(storeId:mapper:)")));
- (void)insertStoreLocationStoreLocationLocal:(ScmSdkStoreLocationLocal *)StoreLocationLocal __attribute__((swift_name("insertStoreLocation(StoreLocationLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CategoryLocal")))
@interface ScmSdkCategoryLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title primaryCategoryId:(int32_t)primaryCategoryId primaryCategoryTitle:(NSString *)primaryCategoryTitle __attribute__((swift_name("init(id:serverId:subscriberId:title:primaryCategoryId:primaryCategoryTitle:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkCategoryLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title primaryCategoryId:(int32_t)primaryCategoryId primaryCategoryTitle:(NSString *)primaryCategoryTitle __attribute__((swift_name("doCopy(id:serverId:subscriberId:title:primaryCategoryId:primaryCategoryTitle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t primaryCategoryId __attribute__((swift_name("primaryCategoryId")));
@property (readonly) NSString *primaryCategoryTitle __attribute__((swift_name("primaryCategoryTitle")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@end

__attribute__((swift_name("CategoryLocalQueries")))
@protocol ScmSdkCategoryLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAllCategories __attribute__((swift_name("deleteAllCategories()")));
- (ScmSdkRuntimeQuery<ScmSdkCategoryLocal *> *)getAllCategories __attribute__((swift_name("getAllCategories()")));
- (ScmSdkRuntimeQuery<id> *)getAllCategoriesMapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getAllCategories(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkCategoryLocal *> *)getCategoryByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getCategoryByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getCategoryByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getCategoryByServerId(serverId:mapper:)")));
- (void)insertCategoryId:(ScmSdkInt * _Nullable)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title primaryCategoryId:(int32_t)primaryCategoryId primaryCategoryTitle:(NSString *)primaryCategoryTitle __attribute__((swift_name("insertCategory(id:serverId:subscriberId:title:primaryCategoryId:primaryCategoryTitle:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PriorityLocal")))
@interface ScmSdkPriorityLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title eta:(NSString *)eta isSkipNights:(BOOL)isSkipNights isSkipWeekends:(BOOL)isSkipWeekends isSelectable:(BOOL)isSelectable locationId:(int32_t)locationId tradeId:(int32_t)tradeId tradeName:(NSString *)tradeName __attribute__((swift_name("init(id:serverId:subscriberId:title:eta:isSkipNights:isSkipWeekends:isSelectable:locationId:tradeId:tradeName:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component10 __attribute__((swift_name("component10()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component11 __attribute__((swift_name("component11()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkPriorityLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title eta:(NSString *)eta isSkipNights:(BOOL)isSkipNights isSkipWeekends:(BOOL)isSkipWeekends isSelectable:(BOOL)isSelectable locationId:(int32_t)locationId tradeId:(int32_t)tradeId tradeName:(NSString *)tradeName __attribute__((swift_name("doCopy(id:serverId:subscriberId:title:eta:isSkipNights:isSkipWeekends:isSelectable:locationId:tradeId:tradeName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *eta __attribute__((swift_name("eta")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) BOOL isSelectable __attribute__((swift_name("isSelectable")));
@property (readonly) BOOL isSkipNights __attribute__((swift_name("isSkipNights")));
@property (readonly) BOOL isSkipWeekends __attribute__((swift_name("isSkipWeekends")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@property (readonly) int32_t tradeId __attribute__((swift_name("tradeId")));
@property (readonly) NSString *tradeName __attribute__((swift_name("tradeName")));
@end

__attribute__((swift_name("PriorityLocalQueries")))
@protocol ScmSdkPriorityLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAllPriorities __attribute__((swift_name("deleteAllPriorities()")));
- (ScmSdkRuntimeQuery<ScmSdkPriorityLocal *> *)getAllPriorities __attribute__((swift_name("getAllPriorities()")));
- (ScmSdkRuntimeQuery<id> *)getAllPrioritiesMapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getAllPriorities(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkPriorityLocal *> *)getPriorityByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getPriorityByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getPriorityByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, ScmSdkInt *, NSString *, NSString *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getPriorityByServerId(serverId:mapper:)")));
- (void)insertPriorityId:(ScmSdkInt * _Nullable)id serverId:(int32_t)serverId subscriberId:(int32_t)subscriberId title:(NSString *)title eta:(NSString *)eta isSkipNights:(BOOL)isSkipNights isSkipWeekends:(BOOL)isSkipWeekends isSelectable:(BOOL)isSelectable locationId:(int32_t)locationId tradeId:(int32_t)tradeId tradeName:(NSString *)tradeName __attribute__((swift_name("insertPriority(id:serverId:subscriberId:title:eta:isSkipNights:isSkipWeekends:isSelectable:locationId:tradeId:tradeName:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ProviderLocal")))
@interface ScmSdkProviderLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("init(id:serverId:title:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkProviderLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("doCopy(id:serverId:title:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@end

__attribute__((swift_name("ProviderLocalQueries")))
@protocol ScmSdkProviderLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAllProviders __attribute__((swift_name("deleteAllProviders()")));
- (ScmSdkRuntimeQuery<ScmSdkProviderLocal *> *)getAllProviders __attribute__((swift_name("getAllProviders()")));
- (ScmSdkRuntimeQuery<id> *)getAllProvidersMapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getAllProviders(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkProviderLocal *> *)getProviderByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getProviderByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getProviderByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getProviderByServerId(serverId:mapper:)")));
- (void)insertProviderId:(ScmSdkInt * _Nullable)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("insertProvider(id:serverId:title:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TradeLocal")))
@interface ScmSdkTradeLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title subscriberId:(int32_t)subscriberId __attribute__((swift_name("init(id:serverId:title:subscriberId:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkTradeLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title subscriberId:(int32_t)subscriberId __attribute__((swift_name("doCopy(id:serverId:title:subscriberId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) int32_t subscriberId __attribute__((swift_name("subscriberId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@end

__attribute__((swift_name("TradeLocalQueries")))
@protocol ScmSdkTradeLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAllTrades __attribute__((swift_name("deleteAllTrades()")));
- (ScmSdkRuntimeQuery<ScmSdkTradeLocal *> *)getAllTrades __attribute__((swift_name("getAllTrades()")));
- (ScmSdkRuntimeQuery<id> *)getAllTradesMapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getAllTrades(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkTradeLocal *> *)getTradeByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getTradeByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getTradeByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkInt *))mapper __attribute__((swift_name("getTradeByServerId(serverId:mapper:)")));
- (void)insertTradeId:(ScmSdkInt * _Nullable)id serverId:(int32_t)serverId title:(NSString *)title subscriberId:(int32_t)subscriberId __attribute__((swift_name("insertTrade(id:serverId:title:subscriberId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WeatherTypeLocal")))
@interface ScmSdkWeatherTypeLocal : ScmSdkBase
- (instancetype)initWithId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("init(id:serverId:title:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkWeatherTypeLocal *)doCopyId:(int32_t)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("doCopy(id:serverId:title:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t id __attribute__((swift_name("id")));
@property (readonly) int32_t serverId __attribute__((swift_name("serverId")));
@property (readonly) NSString *title __attribute__((swift_name("title")));
@end

__attribute__((swift_name("WeatherTypeLocalQueries")))
@protocol ScmSdkWeatherTypeLocalQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteAllWeatherTypes __attribute__((swift_name("deleteAllWeatherTypes()")));
- (ScmSdkRuntimeQuery<ScmSdkWeatherTypeLocal *> *)getAllWeatherTypes __attribute__((swift_name("getAllWeatherTypes()")));
- (ScmSdkRuntimeQuery<id> *)getAllWeatherTypesMapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getAllWeatherTypes(mapper:)")));
- (ScmSdkRuntimeQuery<ScmSdkWeatherTypeLocal *> *)getWeatherTypeByServerIdServerId:(int32_t)serverId __attribute__((swift_name("getWeatherTypeByServerId(serverId:)")));
- (ScmSdkRuntimeQuery<id> *)getWeatherTypeByServerIdServerId:(int32_t)serverId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *))mapper __attribute__((swift_name("getWeatherTypeByServerId(serverId:mapper:)")));
- (void)insertWeatherTypeId:(ScmSdkInt * _Nullable)id serverId:(int32_t)serverId title:(NSString *)title __attribute__((swift_name("insertWeatherType(id:serverId:title:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LocationNotificationLocal")))
@interface ScmSdkLocationNotificationLocal : ScmSdkBase
- (instancetype)initWithLocationId:(int32_t)locationId userId:(int32_t)userId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly __attribute__((swift_name("init(locationId:userId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:)"))) __attribute__((objc_designated_initializer));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkLocationNotificationLocal *)doCopyLocationId:(int32_t)locationId userId:(int32_t)userId locationName:(NSString *)locationName isCheckInPushEnabled:(BOOL)isCheckInPushEnabled isCheckOutPushEnabled:(BOOL)isCheckOutPushEnabled isForCompletedOnly:(BOOL)isForCompletedOnly __attribute__((swift_name("doCopy(locationId:userId:locationName:isCheckInPushEnabled:isCheckOutPushEnabled:isForCompletedOnly:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isCheckInPushEnabled __attribute__((swift_name("isCheckInPushEnabled")));
@property (readonly) BOOL isCheckOutPushEnabled __attribute__((swift_name("isCheckOutPushEnabled")));
@property (readonly) BOOL isForCompletedOnly __attribute__((swift_name("isForCompletedOnly")));
@property (readonly) int32_t locationId __attribute__((swift_name("locationId")));
@property (readonly) NSString *locationName __attribute__((swift_name("locationName")));
@property (readonly) int32_t userId __attribute__((swift_name("userId")));
@end

__attribute__((swift_name("LocationNotificationQueries")))
@protocol ScmSdkLocationNotificationQueries <ScmSdkRuntimeTransacter>
@required
- (void)deleteUserId:(int32_t)userId locationId:(int32_t)locationId __attribute__((swift_name("delete(userId:locationId:)")));
- (ScmSdkRuntimeQuery<ScmSdkLocationNotificationLocal *> *)getAllNotificationsUserId:(int32_t)userId __attribute__((swift_name("getAllNotifications(userId:)")));
- (ScmSdkRuntimeQuery<id> *)getAllNotificationsUserId:(int32_t)userId mapper:(id (^)(ScmSdkInt *, ScmSdkInt *, NSString *, ScmSdkBoolean *, ScmSdkBoolean *, ScmSdkBoolean *))mapper __attribute__((swift_name("getAllNotifications(userId:mapper:)")));
- (void)insertLocationNotificationLocal:(ScmSdkLocationNotificationLocal *)LocationNotificationLocal __attribute__((swift_name("insert(LocationNotificationLocal:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmSdk")))
@interface ScmSdkScmSdk : ScmSdkBase
- (instancetype)initWithHttpConfig:(id<ScmSdkKtor_client_coreHttpClientEngineFactory>)httpConfig deviceProvider:(id<ScmSdkDeviceProvider>)deviceProvider globalCacheProvider:(id<ScmSdkGlobalCacheProvider>)globalCacheProvider exceptionsProvider:(id<ScmSdkExceptionsProvider>)exceptionsProvider antilog:(ScmSdkNapierAntilog *)antilog enableLogging:(BOOL)enableLogging sqlDriver:(id<ScmSdkRuntimeSqlDriver>)sqlDriver __attribute__((swift_name("init(httpConfig:deviceProvider:globalCacheProvider:exceptionsProvider:antilog:enableLogging:sqlDriver:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkScmSdkCompanion *companion __attribute__((swift_name("companion")));
- (id<ScmSdkScmAuth>)provideAuth __attribute__((swift_name("provideAuth()")));
- (id<ScmSdkScmAuthorizedUser>)provideAuthorizedUser __attribute__((swift_name("provideAuthorizedUser()")));
- (id<ScmSdkScmCategories>)provideCategories __attribute__((swift_name("provideCategories()")));
- (id<ScmSdkScmInvoiceFilters>)provideInvoiceFilters __attribute__((swift_name("provideInvoiceFilters()")));
- (id<ScmSdkScmInvoicesInfo>)provideInvoiceInfo __attribute__((swift_name("provideInvoiceInfo()")));
- (id<ScmSdkScmInvoicesSearch>)provideInvoiceSearch __attribute__((swift_name("provideInvoiceSearch()")));
- (id<ScmSdkScmInvoiceUpdate>)provideInvoiceUpdate __attribute__((swift_name("provideInvoiceUpdate()")));
- (id<ScmSdkScmInvoices>)provideInvoices __attribute__((swift_name("provideInvoices()")));
- (id<ScmSdkScmLocations>)provideLocations __attribute__((swift_name("provideLocations()")));
- (id<ScmSdkScmMigration>)provideMigration __attribute__((swift_name("provideMigration()")));
- (id<ScmSdkScmNotifications>)provideNotifications __attribute__((swift_name("provideNotifications()")));
- (id<ScmSdkScmNotificationsUnsubscribeFromPushes>)provideNotificationsUnsubscribePush __attribute__((swift_name("provideNotificationsUnsubscribePush()")));
- (id<ScmSdkScmProposal>)provideProposal __attribute__((swift_name("provideProposal()")));
- (id<ScmSdkScmReview>)provideReview __attribute__((swift_name("provideReview()")));
- (id<ScmSdkScmSiteAudit>)provideSiteAudit __attribute__((swift_name("provideSiteAudit()")));
- (id<ScmSdkScmCreateWorkOrder>)provideSubscribers __attribute__((swift_name("provideSubscribers()")));
- (id<ScmSdkScmToken>)provideToken __attribute__((swift_name("provideToken()")));
- (id<ScmSdkScmTools>)provideTools __attribute__((swift_name("provideTools()")));
- (id<ScmSdkScmUnauthorizedUser>)provideUnauthorizedUser __attribute__((swift_name("provideUnauthorizedUser()")));
- (id<ScmSdkScmUserAccess>)provideUserAccess __attribute__((swift_name("provideUserAccess()")));
- (id<ScmSdkScmWorkOrder>)provideWorkOrder __attribute__((swift_name("provideWorkOrder()")));
- (void)setEncryptedSettingsSettings:(id<ScmSdkMultiplatform_settingsSettings>)settings __attribute__((swift_name("setEncryptedSettings(settings:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ScmSdk.Companion")))
@interface ScmSdkScmSdkCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkScmSdkCompanion *shared __attribute__((swift_name("shared")));
@end

@interface ScmSdkScResult (Extensions)

/**
 * Returns the encapsulated value if this instance represents [success][ScResult.isSuccess] or the
 * [defaultValue] if it is [failure][ScResult.isFailure].
 *
 * This function is a shorthand for `getOrElse { defaultValue }` (see [getOrElse]).
 */
- (id _Nullable)getOrDefaultDefaultValue:(id _Nullable)defaultValue __attribute__((swift_name("getOrDefault(defaultValue:)")));

/**
 * Throws exception if the result is failure. This internal function minimizes
 * inlined bytecode for [getOrThrow] and makes sure that in the future we can
 * add some exception-augmenting logic here (if needed).
 */
- (id _Nullable)getOrThrow __attribute__((swift_name("getOrThrow()")));

/**
 * Returns the encapsulated value if this instance represents [success][ScResult.isSuccess] or the
 * result of [onFailure] function for the encapsulated [Throwable] exception if it is [failure][ScResult.isFailure].
 *
 */
- (ScmSdkScResult<id> *)onFailureAction:(void (^)(ScmSdkKotlinThrowable *))action __attribute__((swift_name("onFailure(action:)")));

/**
 * Performs the given [action] on the encapsulated value if this instance represents [success][ScResult.isSuccess].
 * Returns the original `ScResult` unchanged.
 */
- (ScmSdkScResult<id> *)onSuccessAction:(void (^)(id _Nullable))action __attribute__((swift_name("onSuccess(action:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("WorkOrderApiEndpointExtKt")))
@interface ScmSdkWorkOrderApiEndpointExtKt : ScmSdkBase
@property (class, readonly) NSString *ATTACHMENT_THUMBNAIL_URL_PART __attribute__((swift_name("ATTACHMENT_THUMBNAIL_URL_PART")));
@property (class, readonly) NSString *UPLOAD_ATTACHMENT_URL_PART __attribute__((swift_name("UPLOAD_ATTACHMENT_URL_PART")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("QuantityUnitKt")))
@interface ScmSdkQuantityUnitKt : ScmSdkBase
+ (ScmSdkQuantityUnit *)findByValueValue:(NSString *)value __attribute__((swift_name("findByValue(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemStatusKt")))
@interface ScmSdkAuditCheckItemStatusKt : ScmSdkBase
+ (ScmSdkAuditCheckItemStatus *)findAuditCheckItemStatus:(id)receiver value:(int32_t)value __attribute__((swift_name("findAuditCheckItemStatus(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuditCheckItemRatingSystemKt")))
@interface ScmSdkAuditCheckItemRatingSystemKt : ScmSdkBase
+ (ScmSdkAuditCheckItemRatingSystem *)findAuditCheckItemRatingSystem:(id)receiver value:(int32_t)value __attribute__((swift_name("findAuditCheckItemRatingSystem(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceClientSkillLevelKt")))
@interface ScmSdkInvoiceClientSkillLevelKt : ScmSdkBase
+ (ScmSdkInvoiceClientSkillLevel *)findInvoiceClientSkillLevel:(id)receiver value:(ScmSdkInt * _Nullable)value __attribute__((swift_name("findInvoiceClientSkillLevel(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceLaborTypeKt")))
@interface ScmSdkInvoiceLaborTypeKt : ScmSdkBase
+ (ScmSdkInvoiceLaborType *)findInvoiceLaborType:(id)receiver value:(ScmSdkInt * _Nullable)value __attribute__((swift_name("findInvoiceLaborType(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceChargeUnitTypeKt")))
@interface ScmSdkInvoiceChargeUnitTypeKt : ScmSdkBase
+ (ScmSdkInvoiceChargeUnitType *)findInvoiceLineItemUnitType:(id)receiver value:(ScmSdkInt * _Nullable)value __attribute__((swift_name("findInvoiceLineItemUnitType(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesAssignedToStateKt")))
@interface ScmSdkInvoicesAssignedToStateKt : ScmSdkBase
+ (ScmSdkInvoicesAssignedToState *)findInvoicesAssignedTo:(id)receiver value:(NSString *)value __attribute__((swift_name("findInvoicesAssignedTo(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoicesFilterSortKt")))
@interface ScmSdkInvoicesFilterSortKt : ScmSdkBase
+ (ScmSdkInvoicesFilterSort *)findInvoicesFilterSort:(id)receiver value:(NSString *)value __attribute__((swift_name("findInvoicesFilterSort(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceStatusKt")))
@interface ScmSdkInvoiceStatusKt : ScmSdkBase
+ (ScmSdkInvoiceStatus *)findInvoicesStatus:(id)receiver value:(NSString *)value __attribute__((swift_name("findInvoicesStatus(_:value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AttachmentExtensionsKt")))
@interface ScmSdkAttachmentExtensionsKt : ScmSdkBase
+ (NSString *)getMimeType:(NSString *)receiver __attribute__((swift_name("getMimeType(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CoroutinesExtKt")))
@interface ScmSdkCoroutinesExtKt : ScmSdkBase

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)asyncMap:(id)receiver action:(id<ScmSdkKotlinSuspendFunction1>)action completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("asyncMap(_:action:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
+ (void)parallelMap:(id)receiver action:(id<ScmSdkKotlinSuspendFunction1>)action completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("parallelMap(_:action:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SiteAuditExtKt")))
@interface ScmSdkSiteAuditExtKt : ScmSdkBase
+ (NSArray<NSString *> *)splitEmails:(NSString *)receiver __attribute__((swift_name("splitEmails(_:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DIspatcherExtKt")))
@interface ScmSdkDIspatcherExtKt : ScmSdkBase
@property (class, readonly) ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *ioDispatcher __attribute__((swift_name("ioDispatcher")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CommonExtKt")))
@interface ScmSdkCommonExtKt : ScmSdkBase
+ (ScmSdkKtor_client_coreHttpClient *)createCommonHttpClientHttpConfig:(id<ScmSdkKtor_client_coreHttpClientEngineFactory>)httpConfig enableLogging:(BOOL)enableLogging deviceProvider:(id<ScmSdkDeviceProvider>)deviceProvider block:(void (^)(ScmSdkKtor_client_coreHttpClientConfig<id> *))block __attribute__((swift_name("createCommonHttpClient(httpConfig:enableLogging:deviceProvider:block:)")));
+ (NSString *)randomUUID __attribute__((swift_name("randomUUID()")));
@end

__attribute__((swift_name("KotlinException")))
@interface ScmSdkKotlinException : ScmSdkKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinRuntimeException")))
@interface ScmSdkKotlinRuntimeException : ScmSdkKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinIllegalStateException")))
@interface ScmSdkKotlinIllegalStateException : ScmSdkKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
__attribute__((swift_name("KotlinCancellationException")))
@interface ScmSdkKotlinCancellationException : ScmSdkKotlinIllegalStateException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("Multiplatform_settingsSettings")))
@protocol ScmSdkMultiplatform_settingsSettings
@required
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)getBooleanKey:(NSString *)key defaultValue:(BOOL)defaultValue __attribute__((swift_name("getBoolean(key:defaultValue:)")));
- (ScmSdkBoolean * _Nullable)getBooleanOrNullKey:(NSString *)key __attribute__((swift_name("getBooleanOrNull(key:)")));
- (double)getDoubleKey:(NSString *)key defaultValue:(double)defaultValue __attribute__((swift_name("getDouble(key:defaultValue:)")));
- (ScmSdkDouble * _Nullable)getDoubleOrNullKey:(NSString *)key __attribute__((swift_name("getDoubleOrNull(key:)")));
- (float)getFloatKey:(NSString *)key defaultValue:(float)defaultValue __attribute__((swift_name("getFloat(key:defaultValue:)")));
- (ScmSdkFloat * _Nullable)getFloatOrNullKey:(NSString *)key __attribute__((swift_name("getFloatOrNull(key:)")));
- (int32_t)getIntKey:(NSString *)key defaultValue:(int32_t)defaultValue __attribute__((swift_name("getInt(key:defaultValue:)")));
- (ScmSdkInt * _Nullable)getIntOrNullKey:(NSString *)key __attribute__((swift_name("getIntOrNull(key:)")));
- (int64_t)getLongKey:(NSString *)key defaultValue:(int64_t)defaultValue __attribute__((swift_name("getLong(key:defaultValue:)")));
- (ScmSdkLong * _Nullable)getLongOrNullKey:(NSString *)key __attribute__((swift_name("getLongOrNull(key:)")));
- (NSString *)getStringKey:(NSString *)key defaultValue:(NSString *)defaultValue __attribute__((swift_name("getString(key:defaultValue:)")));
- (NSString * _Nullable)getStringOrNullKey:(NSString *)key __attribute__((swift_name("getStringOrNull(key:)")));
- (BOOL)hasKeyKey:(NSString *)key __attribute__((swift_name("hasKey(key:)")));
- (void)putBooleanKey:(NSString *)key value:(BOOL)value __attribute__((swift_name("putBoolean(key:value:)")));
- (void)putDoubleKey:(NSString *)key value:(double)value __attribute__((swift_name("putDouble(key:value:)")));
- (void)putFloatKey:(NSString *)key value:(float)value __attribute__((swift_name("putFloat(key:value:)")));
- (void)putIntKey:(NSString *)key value:(int32_t)value __attribute__((swift_name("putInt(key:value:)")));
- (void)putLongKey:(NSString *)key value:(int64_t)value __attribute__((swift_name("putLong(key:value:)")));
- (void)putStringKey:(NSString *)key value:(NSString *)value __attribute__((swift_name("putString(key:value:)")));
- (void)removeKey:(NSString *)key __attribute__((swift_name("remove(key:)")));
@property (readonly) NSSet<NSString *> *keys __attribute__((swift_name("keys")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializationStrategy")))
@protocol ScmSdkKotlinx_serialization_coreSerializationStrategy
@required
- (void)serializeEncoder:(id<ScmSdkKotlinx_serialization_coreEncoder>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<ScmSdkKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDeserializationStrategy")))
@protocol ScmSdkKotlinx_serialization_coreDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<ScmSdkKotlinx_serialization_coreDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<ScmSdkKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreKSerializer")))
@protocol ScmSdkKotlinx_serialization_coreKSerializer <ScmSdkKotlinx_serialization_coreSerializationStrategy, ScmSdkKotlinx_serialization_coreDeserializationStrategy>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface ScmSdkKotlinEnumCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface ScmSdkKotlinArray<T> : ScmSdkBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(ScmSdkInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<ScmSdkKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinPair")))
@interface ScmSdkKotlinPair<__covariant A, __covariant B> : ScmSdkBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("init(first:second:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (B _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinPair<A, B> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second __attribute__((swift_name("doCopy(first:second:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface ScmSdkKotlinByteArray : ScmSdkBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(ScmSdkByte *(^)(ScmSdkInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (ScmSdkKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreFlowCollector")))
@protocol ScmSdkKotlinx_coroutines_coreFlowCollector
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)emitValue:(id _Nullable)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("emit(value:completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinCoroutineContext")))
@protocol ScmSdkKotlinCoroutineContext
@required
- (id _Nullable)foldInitial:(id _Nullable)initial operation:(id _Nullable (^)(id _Nullable, id<ScmSdkKotlinCoroutineContextElement>))operation __attribute__((swift_name("fold(initial:operation:)")));
- (id<ScmSdkKotlinCoroutineContextElement> _Nullable)getKey:(id<ScmSdkKotlinCoroutineContextKey>)key __attribute__((swift_name("get(key:)")));
- (id<ScmSdkKotlinCoroutineContext>)minusKeyKey:(id<ScmSdkKotlinCoroutineContextKey>)key __attribute__((swift_name("minusKey(key:)")));
- (id<ScmSdkKotlinCoroutineContext>)plusContext:(id<ScmSdkKotlinCoroutineContext>)context __attribute__((swift_name("plus(context:)")));
@end

__attribute__((swift_name("Kodein_diDIAware")))
@protocol ScmSdkKodein_diDIAware
@required
@property (readonly) id<ScmSdkKodein_diDI> di __attribute__((swift_name("di")));
@property (readonly) id<ScmSdkKodein_diDIContext> diContext __attribute__((swift_name("diContext")));
@property (readonly) ScmSdkKodein_diDITrigger * _Nullable diTrigger __attribute__((swift_name("diTrigger")));
@end

__attribute__((swift_name("Kodein_diDI")))
@protocol ScmSdkKodein_diDI <ScmSdkKodein_diDIAware>
@required
@property (readonly) id<ScmSdkKodein_diDIContainer> container __attribute__((swift_name("container")));
@end

__attribute__((swift_name("RuntimeQuery")))
@interface ScmSdkRuntimeQuery<__covariant RowType> : ScmSdkBase
- (instancetype)initWithQueries:(NSMutableArray<ScmSdkRuntimeQuery<id> *> *)queries mapper:(RowType (^)(id<ScmSdkRuntimeSqlCursor>))mapper __attribute__((swift_name("init(queries:mapper:)"))) __attribute__((objc_designated_initializer));
- (void)addListenerListener:(id<ScmSdkRuntimeQueryListener>)listener __attribute__((swift_name("addListener(listener:)")));
- (id<ScmSdkRuntimeSqlCursor>)execute __attribute__((swift_name("execute()")));
- (NSArray<RowType> *)executeAsList __attribute__((swift_name("executeAsList()")));
- (RowType)executeAsOne __attribute__((swift_name("executeAsOne()")));
- (RowType _Nullable)executeAsOneOrNull __attribute__((swift_name("executeAsOneOrNull()")));
- (void)notifyDataChanged __attribute__((swift_name("notifyDataChanged()")));
- (void)removeListenerListener:(id<ScmSdkRuntimeQueryListener>)listener __attribute__((swift_name("removeListener(listener:)")));
@property (readonly) RowType (^mapper)(id<ScmSdkRuntimeSqlCursor>) __attribute__((swift_name("mapper")));
@end

__attribute__((swift_name("RuntimeTransactionCallbacks")))
@protocol ScmSdkRuntimeTransactionCallbacks
@required
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));
@end

__attribute__((swift_name("RuntimeTransactionWithoutReturn")))
@protocol ScmSdkRuntimeTransactionWithoutReturn <ScmSdkRuntimeTransactionCallbacks>
@required
- (void)rollback __attribute__((swift_name("rollback()")));
- (void)transactionBody:(void (^)(id<ScmSdkRuntimeTransactionWithoutReturn>))body __attribute__((swift_name("transaction(body:)")));
@end

__attribute__((swift_name("RuntimeTransactionWithReturn")))
@protocol ScmSdkRuntimeTransactionWithReturn <ScmSdkRuntimeTransactionCallbacks>
@required
- (void)rollbackReturnValue:(id _Nullable)returnValue __attribute__((swift_name("rollback(returnValue:)")));
- (id _Nullable)transactionBody_:(id _Nullable (^)(id<ScmSdkRuntimeTransactionWithReturn>))body __attribute__((swift_name("transaction(body_:)")));
@end

__attribute__((swift_name("RuntimeCloseable")))
@protocol ScmSdkRuntimeCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("RuntimeSqlDriver")))
@protocol ScmSdkRuntimeSqlDriver <ScmSdkRuntimeCloseable>
@required
- (ScmSdkRuntimeTransacterTransaction * _Nullable)currentTransaction __attribute__((swift_name("currentTransaction()")));
- (void)executeIdentifier:(ScmSdkInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<ScmSdkRuntimeSqlPreparedStatement>))binders __attribute__((swift_name("execute(identifier:sql:parameters:binders:)")));
- (id<ScmSdkRuntimeSqlCursor>)executeQueryIdentifier:(ScmSdkInt * _Nullable)identifier sql:(NSString *)sql parameters:(int32_t)parameters binders:(void (^ _Nullable)(id<ScmSdkRuntimeSqlPreparedStatement>))binders __attribute__((swift_name("executeQuery(identifier:sql:parameters:binders:)")));
- (ScmSdkRuntimeTransacterTransaction *)doNewTransaction __attribute__((swift_name("doNewTransaction()")));
@end

__attribute__((swift_name("RuntimeSqlDriverSchema")))
@protocol ScmSdkRuntimeSqlDriverSchema
@required
- (void)createDriver:(id<ScmSdkRuntimeSqlDriver>)driver __attribute__((swift_name("create(driver:)")));
- (void)migrateDriver:(id<ScmSdkRuntimeSqlDriver>)driver oldVersion:(int32_t)oldVersion newVersion:(int32_t)newVersion __attribute__((swift_name("migrate(driver:oldVersion:newVersion:)")));
@property (readonly) int32_t version __attribute__((swift_name("version")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineFactory")))
@protocol ScmSdkKtor_client_coreHttpClientEngineFactory
@required
- (id<ScmSdkKtor_client_coreHttpClientEngine>)createBlock:(void (^)(ScmSdkKtor_client_coreHttpClientEngineConfig *))block __attribute__((swift_name("create(block:)")));
@end

__attribute__((swift_name("NapierAntilog")))
@interface ScmSdkNapierAntilog : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isEnablePriority:(ScmSdkNapierLogLevel *)priority tag:(NSString * _Nullable)tag __attribute__((swift_name("isEnable(priority:tag:)")));
- (void)logPriority:(ScmSdkNapierLogLevel *)priority tag:(NSString * _Nullable)tag throwable:(ScmSdkKotlinThrowable * _Nullable)throwable message:(NSString * _Nullable)message __attribute__((swift_name("log(priority:tag:throwable:message:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)performLogPriority:(ScmSdkNapierLogLevel *)priority tag:(NSString * _Nullable)tag throwable:(ScmSdkKotlinThrowable * _Nullable)throwable message:(NSString * _Nullable)message __attribute__((swift_name("performLog(priority:tag:throwable:message:)")));
@end

__attribute__((swift_name("KotlinFunction")))
@protocol ScmSdkKotlinFunction
@required
@end

__attribute__((swift_name("KotlinSuspendFunction1")))
@protocol ScmSdkKotlinSuspendFunction1 <ScmSdkKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:completionHandler:)")));
@end

__attribute__((swift_name("KotlinCoroutineContextElement")))
@protocol ScmSdkKotlinCoroutineContextElement <ScmSdkKotlinCoroutineContext>
@required
@property (readonly) id<ScmSdkKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextElement")))
@interface ScmSdkKotlinAbstractCoroutineContextElement : ScmSdkBase <ScmSdkKotlinCoroutineContextElement>
- (instancetype)initWithKey:(id<ScmSdkKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuationInterceptor")))
@protocol ScmSdkKotlinContinuationInterceptor <ScmSdkKotlinCoroutineContextElement>
@required
- (id<ScmSdkKotlinContinuation>)interceptContinuationContinuation:(id<ScmSdkKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (void)releaseInterceptedContinuationContinuation:(id<ScmSdkKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher")))
@interface ScmSdkKotlinx_coroutines_coreCoroutineDispatcher : ScmSdkKotlinAbstractCoroutineContextElement <ScmSdkKotlinContinuationInterceptor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithKey:(id<ScmSdkKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKotlinx_coroutines_coreCoroutineDispatcherKey *companion __attribute__((swift_name("companion")));
- (void)dispatchContext:(id<ScmSdkKotlinCoroutineContext>)context block:(id<ScmSdkKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatch(context:block:)")));
- (void)dispatchYieldContext:(id<ScmSdkKotlinCoroutineContext>)context block:(id<ScmSdkKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatchYield(context:block:)")));
- (id<ScmSdkKotlinContinuation>)interceptContinuationContinuation:(id<ScmSdkKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (BOOL)isDispatchNeededContext:(id<ScmSdkKotlinCoroutineContext>)context __attribute__((swift_name("isDispatchNeeded(context:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
- (ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism __attribute__((swift_name("limitedParallelism(parallelism:)")));
- (ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *)plusOther:(ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *)other __attribute__((swift_name("plus(other:)"))) __attribute__((unavailable("Operator '+' on two CoroutineDispatcher objects is meaningless. CoroutineDispatcher is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The dispatcher to the right of `+` just replaces the dispatcher to the left.")));
- (void)releaseInterceptedContinuationContinuation:(id<ScmSdkKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Ktor_ioCloseable")))
@protocol ScmSdkKtor_ioCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClient")))
@interface ScmSdkKtor_client_coreHttpClient : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope, ScmSdkKtor_ioCloseable>
- (instancetype)initWithEngine:(id<ScmSdkKtor_client_coreHttpClientEngine>)engine userConfig:(ScmSdkKtor_client_coreHttpClientConfig<ScmSdkKtor_client_coreHttpClientEngineConfig *> *)userConfig __attribute__((swift_name("init(engine:userConfig:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (ScmSdkKtor_client_coreHttpClient *)configBlock:(void (^)(ScmSdkKtor_client_coreHttpClientConfig<id> *))block __attribute__((swift_name("config(block:)")));
- (BOOL)isSupportedCapability:(id<ScmSdkKtor_client_coreHttpClientEngineCapability>)capability __attribute__((swift_name("isSupported(capability:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<ScmSdkKtor_client_coreHttpClientEngine> engine __attribute__((swift_name("engine")));
@property (readonly) ScmSdkKtor_client_coreHttpClientEngineConfig *engineConfig __attribute__((swift_name("engineConfig")));
@property (readonly) ScmSdkKtor_eventsEvents *monitor __attribute__((swift_name("monitor")));
@property (readonly) ScmSdkKtor_client_coreHttpReceivePipeline *receivePipeline __attribute__((swift_name("receivePipeline")));
@property (readonly) ScmSdkKtor_client_coreHttpRequestPipeline *requestPipeline __attribute__((swift_name("requestPipeline")));
@property (readonly) ScmSdkKtor_client_coreHttpResponsePipeline *responsePipeline __attribute__((swift_name("responsePipeline")));
@property (readonly) ScmSdkKtor_client_coreHttpSendPipeline *sendPipeline __attribute__((swift_name("sendPipeline")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientConfig")))
@interface ScmSdkKtor_client_coreHttpClientConfig<T> : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkKtor_client_coreHttpClientConfig<T> *)clone __attribute__((swift_name("clone()")));
- (void)engineBlock:(void (^)(T))block __attribute__((swift_name("engine(block:)")));
- (void)installClient:(ScmSdkKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
- (void)installPlugin:(id<ScmSdkKtor_client_coreHttpClientPlugin>)plugin configure:(void (^)(id))configure __attribute__((swift_name("install(plugin:configure:)")));
- (void)installKey:(NSString *)key block:(void (^)(ScmSdkKtor_client_coreHttpClient *))block __attribute__((swift_name("install(key:block:)")));
- (void)plusAssignOther:(ScmSdkKtor_client_coreHttpClientConfig<T> *)other __attribute__((swift_name("plusAssign(other:)")));
@property BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@property BOOL followRedirects __attribute__((swift_name("followRedirects")));
@property BOOL useDefaultTransformers __attribute__((swift_name("useDefaultTransformers")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreEncoder")))
@protocol ScmSdkKotlinx_serialization_coreEncoder
@required
- (id<ScmSdkKotlinx_serialization_coreCompositeEncoder>)beginCollectionDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<ScmSdkKotlinx_serialization_coreCompositeEncoder>)beginStructureDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<ScmSdkKotlinx_serialization_coreEncoder>)encodeInlineDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("encodeInline(descriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNull __attribute__((swift_name("encodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableValueSerializer:(id<ScmSdkKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<ScmSdkKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) ScmSdkKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerialDescriptor")))
@protocol ScmSdkKotlinx_serialization_coreSerialDescriptor
@required

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSArray<id<ScmSdkKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSArray<id<ScmSdkKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) ScmSdkKotlinx_serialization_coreSerialKind *kind __attribute__((swift_name("kind")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDecoder")))
@protocol ScmSdkKotlinx_serialization_coreDecoder
@required
- (id<ScmSdkKotlinx_serialization_coreCompositeDecoder>)beginStructureDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<ScmSdkKotlinx_serialization_coreDecoder>)decodeInlineDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeInline(descriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (ScmSdkKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) ScmSdkKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("KotlinIterator")))
@protocol ScmSdkKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next __attribute__((swift_name("next()")));
@end

__attribute__((swift_name("KotlinByteIterator")))
@interface ScmSdkKotlinByteIterator : ScmSdkBase <ScmSdkKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (ScmSdkByte *)next __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end

__attribute__((swift_name("KotlinCoroutineContextKey")))
@protocol ScmSdkKotlinCoroutineContextKey
@required
@end

__attribute__((swift_name("Kodein_diDIContainer")))
@protocol ScmSdkKodein_diDIContainer
@required
- (NSArray<id (^)(id _Nullable)> *)allFactoriesKey:(ScmSdkKodein_diDIKey<id, id, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("allFactories(key:context:overrideLevel:)")));
- (NSArray<id (^)(void)> *)allProvidersKey:(ScmSdkKodein_diDIKey<id, ScmSdkKotlinUnit *, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("allProviders(key:context:overrideLevel:)")));
- (id (^)(id _Nullable))factoryKey:(ScmSdkKodein_diDIKey<id, id, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("factory(key:context:overrideLevel:)")));
- (id (^ _Nullable)(id _Nullable))factoryOrNullKey:(ScmSdkKodein_diDIKey<id, id, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("factoryOrNull(key:context:overrideLevel:)")));
- (id (^)(void))providerKey:(ScmSdkKodein_diDIKey<id, ScmSdkKotlinUnit *, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("provider(key:context:overrideLevel:)")));
- (id (^ _Nullable)(void))providerOrNullKey:(ScmSdkKodein_diDIKey<id, ScmSdkKotlinUnit *, id> *)key context:(id)context overrideLevel:(int32_t)overrideLevel __attribute__((swift_name("providerOrNull(key:context:overrideLevel:)")));
@property (readonly) id<ScmSdkKodein_diDITree> tree __attribute__((swift_name("tree")));
@end

__attribute__((swift_name("Kodein_diDIContext")))
@protocol ScmSdkKodein_diDIContext
@required
@property (readonly) id<ScmSdkKaveritTypeToken> type __attribute__((swift_name("type")));
@property (readonly) id value_ __attribute__((swift_name("value_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kodein_diDITrigger")))
@interface ScmSdkKodein_diDITrigger : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)trigger __attribute__((swift_name("trigger()")));
@property (readonly) NSMutableArray<id<ScmSdkKotlinLazy>> *properties __attribute__((swift_name("properties")));
@end

__attribute__((swift_name("RuntimeSqlCursor")))
@protocol ScmSdkRuntimeSqlCursor <ScmSdkRuntimeCloseable>
@required
- (ScmSdkKotlinByteArray * _Nullable)getBytesIndex:(int32_t)index __attribute__((swift_name("getBytes(index:)")));
- (ScmSdkDouble * _Nullable)getDoubleIndex:(int32_t)index __attribute__((swift_name("getDouble(index:)")));
- (ScmSdkLong * _Nullable)getLongIndex:(int32_t)index __attribute__((swift_name("getLong(index:)")));
- (NSString * _Nullable)getStringIndex:(int32_t)index __attribute__((swift_name("getString(index:)")));
- (BOOL)next_ __attribute__((swift_name("next_()")));
@end

__attribute__((swift_name("RuntimeQueryListener")))
@protocol ScmSdkRuntimeQueryListener
@required
- (void)queryResultsChanged __attribute__((swift_name("queryResultsChanged()")));
@end

__attribute__((swift_name("RuntimeTransacterTransaction")))
@interface ScmSdkRuntimeTransacterTransaction : ScmSdkBase <ScmSdkRuntimeTransactionCallbacks>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)afterCommitFunction:(void (^)(void))function __attribute__((swift_name("afterCommit(function:)")));
- (void)afterRollbackFunction:(void (^)(void))function __attribute__((swift_name("afterRollback(function:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)endTransactionSuccessful:(BOOL)successful __attribute__((swift_name("endTransaction(successful:)")));
@property (readonly) ScmSdkRuntimeTransacterTransaction * _Nullable enclosingTransaction __attribute__((swift_name("enclosingTransaction")));
@end

__attribute__((swift_name("RuntimeSqlPreparedStatement")))
@protocol ScmSdkRuntimeSqlPreparedStatement
@required
- (void)bindBytesIndex:(int32_t)index bytes:(ScmSdkKotlinByteArray * _Nullable)bytes __attribute__((swift_name("bindBytes(index:bytes:)")));
- (void)bindDoubleIndex:(int32_t)index double:(ScmSdkDouble * _Nullable)double_ __attribute__((swift_name("bindDouble(index:double:)")));
- (void)bindLongIndex:(int32_t)index long:(ScmSdkLong * _Nullable)long_ __attribute__((swift_name("bindLong(index:long:)")));
- (void)bindStringIndex:(int32_t)index string:(NSString * _Nullable)string __attribute__((swift_name("bindString(index:string:)")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngine")))
@protocol ScmSdkKtor_client_coreHttpClientEngine <ScmSdkKotlinx_coroutines_coreCoroutineScope, ScmSdkKtor_ioCloseable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeData:(ScmSdkKtor_client_coreHttpRequestData *)data completionHandler:(void (^)(ScmSdkKtor_client_coreHttpResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(data:completionHandler:)")));
- (void)installClient:(ScmSdkKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
@property (readonly) ScmSdkKtor_client_coreHttpClientEngineConfig *config __attribute__((swift_name("config")));
@property (readonly) ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher")));
@property (readonly) NSSet<id<ScmSdkKtor_client_coreHttpClientEngineCapability>> *supportedCapabilities __attribute__((swift_name("supportedCapabilities")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineConfig")))
@interface ScmSdkKtor_client_coreHttpClientEngineConfig : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property BOOL pipelining __attribute__((swift_name("pipelining")));
@property ScmSdkKtor_client_coreProxyConfig * _Nullable proxy __attribute__((swift_name("proxy")));
@property int32_t threadsCount __attribute__((swift_name("threadsCount")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NapierLogLevel")))
@interface ScmSdkNapierLogLevel : ScmSdkKotlinEnum<ScmSdkNapierLogLevel *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkNapierLogLevel *verbose __attribute__((swift_name("verbose")));
@property (class, readonly) ScmSdkNapierLogLevel *debug __attribute__((swift_name("debug")));
@property (class, readonly) ScmSdkNapierLogLevel *info __attribute__((swift_name("info")));
@property (class, readonly) ScmSdkNapierLogLevel *warning __attribute__((swift_name("warning")));
@property (class, readonly) ScmSdkNapierLogLevel *error __attribute__((swift_name("error")));
@property (class, readonly) ScmSdkNapierLogLevel *assert __attribute__((swift_name("assert")));
+ (ScmSdkKotlinArray<ScmSdkNapierLogLevel *> *)values __attribute__((swift_name("values()")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuation")))
@protocol ScmSdkKotlinContinuation
@required
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextKey")))
@interface ScmSdkKotlinAbstractCoroutineContextKey<B, E> : ScmSdkBase <ScmSdkKotlinCoroutineContextKey>
- (instancetype)initWithBaseKey:(id<ScmSdkKotlinCoroutineContextKey>)baseKey safeCast:(E _Nullable (^)(id<ScmSdkKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher.Key")))
@interface ScmSdkKotlinx_coroutines_coreCoroutineDispatcherKey : ScmSdkKotlinAbstractCoroutineContextKey<id<ScmSdkKotlinContinuationInterceptor>, ScmSdkKotlinx_coroutines_coreCoroutineDispatcher *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithBaseKey:(id<ScmSdkKotlinCoroutineContextKey>)baseKey safeCast:(id<ScmSdkKotlinCoroutineContextElement> _Nullable (^)(id<ScmSdkKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKotlinx_coroutines_coreCoroutineDispatcherKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreRunnable")))
@protocol ScmSdkKotlinx_coroutines_coreRunnable
@required
- (void)run __attribute__((swift_name("run()")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineCapability")))
@protocol ScmSdkKtor_client_coreHttpClientEngineCapability
@required
@end

__attribute__((swift_name("Ktor_utilsAttributes")))
@protocol ScmSdkKtor_utilsAttributes
@required
- (id)computeIfAbsentKey:(ScmSdkKtor_utilsAttributeKey<id> *)key block:(id (^)(void))block __attribute__((swift_name("computeIfAbsent(key:block:)")));
- (BOOL)containsKey:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("contains(key:)")));
- (id)getKey_:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("get(key_:)")));
- (id _Nullable)getOrNullKey:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getOrNull(key:)")));
- (void)putKey:(ScmSdkKtor_utilsAttributeKey<id> *)key value:(id)value __attribute__((swift_name("put(key:value:)")));
- (void)removeKey_:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("remove(key_:)")));
- (id)takeKey:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("take(key:)")));
- (id _Nullable)takeOrNullKey:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("takeOrNull(key:)")));
@property (readonly) NSArray<ScmSdkKtor_utilsAttributeKey<id> *> *allKeys __attribute__((swift_name("allKeys")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_eventsEvents")))
@interface ScmSdkKtor_eventsEvents : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)raiseDefinition:(ScmSdkKtor_eventsEventDefinition<id> *)definition value:(id _Nullable)value __attribute__((swift_name("raise(definition:value:)")));
- (id<ScmSdkKotlinx_coroutines_coreDisposableHandle>)subscribeDefinition:(ScmSdkKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("subscribe(definition:handler:)")));
- (void)unsubscribeDefinition:(ScmSdkKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("unsubscribe(definition:handler:)")));
@end

__attribute__((swift_name("Ktor_utilsPipeline")))
@interface ScmSdkKtor_utilsPipeline<TSubject, TContext> : ScmSdkBase
- (instancetype)initWithPhase:(ScmSdkKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(ScmSdkKotlinArray<ScmSdkKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer));
- (void)addPhasePhase:(ScmSdkKtor_utilsPipelinePhase *)phase __attribute__((swift_name("addPhase(phase:)")));
- (void)afterIntercepted __attribute__((swift_name("afterIntercepted()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(TContext)context subject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:subject:completionHandler:)")));
- (void)insertPhaseAfterReference:(ScmSdkKtor_utilsPipelinePhase *)reference phase:(ScmSdkKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseAfter(reference:phase:)")));
- (void)insertPhaseBeforeReference:(ScmSdkKtor_utilsPipelinePhase *)reference phase:(ScmSdkKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseBefore(reference:phase:)")));
- (void)interceptPhase:(ScmSdkKtor_utilsPipelinePhase *)phase block:(id<ScmSdkKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block:)")));
- (NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptorsForPhasePhase:(ScmSdkKtor_utilsPipelinePhase *)phase __attribute__((swift_name("interceptorsForPhase(phase:)")));
- (void)mergeFrom:(ScmSdkKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("merge(from:)")));
- (void)mergePhasesFrom:(ScmSdkKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("mergePhases(from:)")));
- (void)resetFromFrom:(ScmSdkKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("resetFrom(from:)")));
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) NSArray<ScmSdkKtor_utilsPipelinePhase *> *items __attribute__((swift_name("items")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline")))
@interface ScmSdkKtor_client_coreHttpReceivePipeline : ScmSdkKtor_utilsPipeline<ScmSdkKtor_client_coreHttpResponse *, ScmSdkKotlinUnit *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(ScmSdkKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(ScmSdkKotlinArray<ScmSdkKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpReceivePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline")))
@interface ScmSdkKtor_client_coreHttpRequestPipeline : ScmSdkKtor_utilsPipeline<id, ScmSdkKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(ScmSdkKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(ScmSdkKotlinArray<ScmSdkKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpRequestPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline")))
@interface ScmSdkKtor_client_coreHttpResponsePipeline : ScmSdkKtor_utilsPipeline<ScmSdkKtor_client_coreHttpResponseContainer *, ScmSdkKtor_client_coreHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(ScmSdkKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(ScmSdkKotlinArray<ScmSdkKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpResponsePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline")))
@interface ScmSdkKtor_client_coreHttpSendPipeline : ScmSdkKtor_utilsPipeline<id, ScmSdkKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(ScmSdkKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<ScmSdkKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhases:(ScmSdkKotlinArray<ScmSdkKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpSendPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientPlugin")))
@protocol ScmSdkKtor_client_coreHttpClientPlugin
@required
- (void)installPlugin:(id)plugin scope:(ScmSdkKtor_client_coreHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (id)prepareBlock:(void (^)(id))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) ScmSdkKtor_utilsAttributeKey<id> *key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeEncoder")))
@protocol ScmSdkKotlinx_serialization_coreCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<ScmSdkKotlinx_serialization_coreEncoder>)encodeInlineElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<ScmSdkKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<ScmSdkKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) ScmSdkKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModule")))
@interface ScmSdkKotlinx_serialization_coreSerializersModule : ScmSdkBase

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)dumpToCollector:(id<ScmSdkKotlinx_serialization_coreSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<ScmSdkKotlinx_serialization_coreKSerializer> _Nullable)getContextualKClass:(id<ScmSdkKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<ScmSdkKotlinx_serialization_coreKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<ScmSdkKotlinx_serialization_coreSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<ScmSdkKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<ScmSdkKotlinx_serialization_coreDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<ScmSdkKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end

__attribute__((swift_name("KotlinAnnotation")))
@protocol ScmSdkKotlinAnnotation
@required
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("Kotlinx_serialization_coreSerialKind")))
@interface ScmSdkKotlinx_serialization_coreSerialKind : ScmSdkBase
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeDecoder")))
@protocol ScmSdkKotlinx_serialization_coreCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<ScmSdkKotlinx_serialization_coreDecoder>)decodeInlineElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<ScmSdkKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) ScmSdkKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface ScmSdkKotlinNothing : ScmSdkBase
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kodein_diDIKey")))
@interface ScmSdkKodein_diDIKey<__contravariant C, __contravariant A, __covariant T> : ScmSdkBase
- (instancetype)initWithContextType:(id<ScmSdkKaveritTypeToken>)contextType argType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("init(contextType:argType:type:tag:)"))) __attribute__((objc_designated_initializer));
- (id<ScmSdkKaveritTypeToken>)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkKaveritTypeToken>)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkKaveritTypeToken>)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (id _Nullable)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKodein_diDIKey<C, A, T> *)doCopyContextType:(id<ScmSdkKaveritTypeToken>)contextType argType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("doCopy(contextType:argType:type:tag:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkKaveritTypeToken> argType __attribute__((swift_name("argType")));
@property (readonly) NSString *bindDescription __attribute__((swift_name("bindDescription")));
@property (readonly) NSString *bindFullDescription __attribute__((swift_name("bindFullDescription")));
@property (readonly) id<ScmSdkKaveritTypeToken> contextType __attribute__((swift_name("contextType")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *fullDescription __attribute__((swift_name("fullDescription")));
@property (readonly) NSString *internalDescription __attribute__((swift_name("internalDescription")));
@property (readonly) id _Nullable tag __attribute__((swift_name("tag")));
@property (readonly) id<ScmSdkKaveritTypeToken> type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface ScmSdkKotlinUnit : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Kodein_diDITree")))
@protocol ScmSdkKodein_diDITree
@required
- (NSArray<ScmSdkKotlinTriple<ScmSdkKodein_diDIKey<id, id, id> *, ScmSdkKodein_diDIDefinition<id, id, id> *, id<ScmSdkKodein_diContextTranslator>> *> *)findKey:(ScmSdkKodein_diDIKey<id, id, id> *)key overrideLevel:(int32_t)overrideLevel all:(BOOL)all __attribute__((swift_name("find(key:overrideLevel:all:)")));
- (NSArray<ScmSdkKotlinTriple<ScmSdkKodein_diDIKey<id, id, id> *, NSArray<ScmSdkKodein_diDIDefinition<id, id, id> *> *, id<ScmSdkKodein_diContextTranslator>> *> *)findSearch:(ScmSdkKodein_diSearchSpecs *)search __attribute__((swift_name("find(search:)")));
- (ScmSdkKotlinTriple<ScmSdkKodein_diDIKey<id, id, id> *, NSArray<ScmSdkKodein_diDIDefinition<id, id, id> *> *, id<ScmSdkKodein_diContextTranslator>> * _Nullable)getKey__:(ScmSdkKodein_diDIKey<id, id, id> *)key __attribute__((swift_name("get(key__:)")));
@property (readonly) NSDictionary<ScmSdkKodein_diDIKey<id, id, id> *, NSArray<ScmSdkKodein_diDIDefinition<id, id, id> *> *> *bindings __attribute__((swift_name("bindings")));
@property (readonly) NSArray<id<ScmSdkKodein_diExternalSource>> *externalSources __attribute__((swift_name("externalSources")));
@property (readonly) NSArray<id<ScmSdkKodein_diContextTranslator>> *registeredTranslators __attribute__((swift_name("registeredTranslators")));
@end

__attribute__((swift_name("KaveritTypeToken")))
@protocol ScmSdkKaveritTypeToken
@required
- (ScmSdkKotlinArray<id<ScmSdkKaveritTypeToken>> *)getGenericParameters __attribute__((swift_name("getGenericParameters()")));
- (id<ScmSdkKaveritTypeToken>)getRaw __attribute__((swift_name("getRaw()")));
- (NSArray<id<ScmSdkKaveritTypeToken>> *)getSuper __attribute__((swift_name("getSuper()")));
- (BOOL)isAssignableFromTypeToken:(id<ScmSdkKaveritTypeToken>)typeToken __attribute__((swift_name("isAssignableFrom(typeToken:)")));
- (BOOL)isGeneric __attribute__((swift_name("isGeneric()")));
- (BOOL)isWildcard __attribute__((swift_name("isWildcard()")));
- (NSString *)qualifiedDispString __attribute__((swift_name("qualifiedDispString()")));
- (NSString *)qualifiedErasedDispString __attribute__((swift_name("qualifiedErasedDispString()")));
- (NSString *)simpleDispString __attribute__((swift_name("simpleDispString()")));
- (NSString *)simpleErasedDispString __attribute__((swift_name("simpleErasedDispString()")));
@end

__attribute__((swift_name("KotlinLazy")))
@protocol ScmSdkKotlinLazy
@required
- (BOOL)isInitialized __attribute__((swift_name("isInitialized()")));
@property (readonly) id _Nullable value_ __attribute__((swift_name("value_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestData")))
@interface ScmSdkKtor_client_coreHttpRequestData : ScmSdkBase
- (instancetype)initWithUrl:(ScmSdkKtor_httpUrl *)url method:(ScmSdkKtor_httpHttpMethod *)method headers:(id<ScmSdkKtor_httpHeaders>)headers body:(ScmSdkKtor_httpOutgoingContent *)body executionContext:(id<ScmSdkKotlinx_coroutines_coreJob>)executionContext attributes:(id<ScmSdkKtor_utilsAttributes>)attributes __attribute__((swift_name("init(url:method:headers:body:executionContext:attributes:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)getCapabilityOrNullKey:(id<ScmSdkKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) ScmSdkKtor_httpOutgoingContent *body __attribute__((swift_name("body")));
@property (readonly) id<ScmSdkKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) id<ScmSdkKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) ScmSdkKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) ScmSdkKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseData")))
@interface ScmSdkKtor_client_coreHttpResponseData : ScmSdkBase
- (instancetype)initWithStatusCode:(ScmSdkKtor_httpHttpStatusCode *)statusCode requestTime:(ScmSdkKtor_utilsGMTDate *)requestTime headers:(id<ScmSdkKtor_httpHeaders>)headers version:(ScmSdkKtor_httpHttpProtocolVersion *)version body:(id)body callContext:(id<ScmSdkKotlinCoroutineContext>)callContext __attribute__((swift_name("init(statusCode:requestTime:headers:version:body:callContext:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id body __attribute__((swift_name("body")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> callContext __attribute__((swift_name("callContext")));
@property (readonly) id<ScmSdkKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) ScmSdkKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) ScmSdkKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreProxyConfig")))
@interface ScmSdkKtor_client_coreProxyConfig : ScmSdkBase
- (instancetype)initWithUrl:(ScmSdkKtor_httpUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsAttributeKey")))
@interface ScmSdkKtor_utilsAttributeKey<T> : ScmSdkBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Ktor_eventsEventDefinition")))
@interface ScmSdkKtor_eventsEventDefinition<T> : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreDisposableHandle")))
@protocol ScmSdkKotlinx_coroutines_coreDisposableHandle
@required
- (void)dispose __attribute__((swift_name("dispose()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsPipelinePhase")))
@interface ScmSdkKtor_utilsPipelinePhase : ScmSdkBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("KotlinSuspendFunction2")))
@protocol ScmSdkKotlinSuspendFunction2 <ScmSdkKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline.Phases")))
@interface ScmSdkKtor_client_coreHttpReceivePipelinePhases : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpReceivePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((swift_name("Ktor_httpHttpMessage")))
@protocol ScmSdkKtor_httpHttpMessage
@required
@property (readonly) id<ScmSdkKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@end

__attribute__((swift_name("Ktor_client_coreHttpResponse")))
@interface ScmSdkKtor_client_coreHttpResponse : ScmSdkBase <ScmSdkKtor_httpHttpMessage, ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<ScmSdkKtor_ioByteReadChannel> content __attribute__((swift_name("content")));
@property (readonly) ScmSdkKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) ScmSdkKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *version_ __attribute__((swift_name("version_")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline.Phases")))
@interface ScmSdkKtor_client_coreHttpRequestPipelinePhases : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpRequestPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Render __attribute__((swift_name("Render")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Send __attribute__((swift_name("Send")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((swift_name("Ktor_httpHttpMessageBuilder")))
@protocol ScmSdkKtor_httpHttpMessageBuilder
@required
@property (readonly) ScmSdkKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder")))
@interface ScmSdkKtor_client_coreHttpRequestBuilder : ScmSdkBase <ScmSdkKtor_httpHttpMessageBuilder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpRequestBuilderCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkKtor_client_coreHttpRequestData *)build __attribute__((swift_name("build()")));
- (id _Nullable)getCapabilityOrNullKey:(id<ScmSdkKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (void)setAttributesBlock:(void (^)(id<ScmSdkKtor_utilsAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)setCapabilityKey:(id<ScmSdkKtor_client_coreHttpClientEngineCapability>)key capability:(id)capability __attribute__((swift_name("setCapability(key:capability:)")));
- (ScmSdkKtor_client_coreHttpRequestBuilder *)takeFromBuilder:(ScmSdkKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFrom(builder:)")));
- (ScmSdkKtor_client_coreHttpRequestBuilder *)takeFromWithExecutionContextBuilder:(ScmSdkKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFromWithExecutionContext(builder:)")));
- (void)urlBlock:(void (^)(ScmSdkKtor_httpURLBuilder *, ScmSdkKtor_httpURLBuilder *))block __attribute__((swift_name("url(block:)")));
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property id body __attribute__((swift_name("body")));
@property ScmSdkKtor_utilsTypeInfo * _Nullable bodyType __attribute__((swift_name("bodyType")));
@property (readonly) id<ScmSdkKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) ScmSdkKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@property ScmSdkKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) ScmSdkKtor_httpURLBuilder *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline.Phases")))
@interface ScmSdkKtor_client_coreHttpResponsePipelinePhases : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpResponsePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Parse __attribute__((swift_name("Parse")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseContainer")))
@interface ScmSdkKtor_client_coreHttpResponseContainer : ScmSdkBase
- (instancetype)initWithExpectedType:(ScmSdkKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("init(expectedType:response:)"))) __attribute__((objc_designated_initializer));
- (ScmSdkKtor_utilsTypeInfo *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (id)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_client_coreHttpResponseContainer *)doCopyExpectedType:(ScmSdkKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("doCopy(expectedType:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKtor_utilsTypeInfo *expectedType __attribute__((swift_name("expectedType")));
@property (readonly) id response __attribute__((swift_name("response")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientCall")))
@interface ScmSdkKtor_client_coreHttpClientCall : ScmSdkBase <ScmSdkKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithClient:(ScmSdkKtor_client_coreHttpClient *)client requestData:(ScmSdkKtor_client_coreHttpRequestData *)requestData responseData:(ScmSdkKtor_client_coreHttpResponseData *)responseData __attribute__((swift_name("init(client:requestData:responseData:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithClient:(ScmSdkKtor_client_coreHttpClient *)client __attribute__((swift_name("init(client:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_client_coreHttpClientCallCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyInfo:(ScmSdkKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("body(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyNullableInfo:(ScmSdkKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyNullable(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)getResponseContentWithCompletionHandler:(void (^)(id<ScmSdkKtor_ioByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getResponseContent(completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL allowDoubleReceive __attribute__((swift_name("allowDoubleReceive")));
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) ScmSdkKtor_client_coreHttpClient *client __attribute__((swift_name("client")));
@property (readonly) id<ScmSdkKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property id<ScmSdkKtor_client_coreHttpRequest> request __attribute__((swift_name("request")));
@property ScmSdkKtor_client_coreHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline.Phases")))
@interface ScmSdkKtor_client_coreHttpSendPipelinePhases : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpSendPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Engine __attribute__((swift_name("Engine")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Monitoring __attribute__((swift_name("Monitoring")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) ScmSdkKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("Kotlinx_serialization_coreSerializersModuleCollector")))
@protocol ScmSdkKotlinx_serialization_coreSerializersModuleCollector
@required
- (void)contextualKClass:(id<ScmSdkKotlinKClass>)kClass provider:(id<ScmSdkKotlinx_serialization_coreKSerializer> (^)(NSArray<id<ScmSdkKotlinx_serialization_coreKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<ScmSdkKotlinKClass>)kClass serializer:(id<ScmSdkKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<ScmSdkKotlinKClass>)baseClass actualClass:(id<ScmSdkKotlinKClass>)actualClass actualSerializer:(id<ScmSdkKotlinx_serialization_coreKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<ScmSdkKotlinKClass>)baseClass defaultDeserializerProvider:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultDeserializerProvider:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)polymorphicDefaultDeserializerBaseClass:(id<ScmSdkKotlinKClass>)baseClass defaultDeserializerProvider:(id<ScmSdkKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefaultDeserializer(baseClass:defaultDeserializerProvider:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)polymorphicDefaultSerializerBaseClass:(id<ScmSdkKotlinKClass>)baseClass defaultSerializerProvider:(id<ScmSdkKotlinx_serialization_coreSerializationStrategy> _Nullable (^)(id))defaultSerializerProvider __attribute__((swift_name("polymorphicDefaultSerializer(baseClass:defaultSerializerProvider:)")));
@end

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol ScmSdkKotlinKDeclarationContainer
@required
@end

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol ScmSdkKotlinKAnnotatedElement
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((swift_name("KotlinKClassifier")))
@protocol ScmSdkKotlinKClassifier
@required
@end

__attribute__((swift_name("KotlinKClass")))
@protocol ScmSdkKotlinKClass <ScmSdkKotlinKDeclarationContainer, ScmSdkKotlinKAnnotatedElement, ScmSdkKotlinKClassifier>
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end

__attribute__((swift_name("Kodein_diDIDefining")))
@interface ScmSdkKodein_diDIDefining<C, A, T> : ScmSdkBase
- (instancetype)initWithBinding:(id<ScmSdkKodein_diDIBinding>)binding fromModule:(NSString * _Nullable)fromModule __attribute__((swift_name("init(binding:fromModule:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<ScmSdkKodein_diDIBinding> binding __attribute__((swift_name("binding")));
@property (readonly) NSString * _Nullable fromModule __attribute__((swift_name("fromModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kodein_diDIDefinition")))
@interface ScmSdkKodein_diDIDefinition<C, A, T> : ScmSdkKodein_diDIDefining<C, A, T>
- (instancetype)initWithBinding:(id<ScmSdkKodein_diDIBinding>)binding fromModule:(NSString * _Nullable)fromModule tree:(id<ScmSdkKodein_diDITree>)tree __attribute__((swift_name("init(binding:fromModule:tree:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithBinding:(id<ScmSdkKodein_diDIBinding>)binding fromModule:(NSString * _Nullable)fromModule __attribute__((swift_name("init(binding:fromModule:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (readonly) id<ScmSdkKodein_diDITree> tree __attribute__((swift_name("tree")));
@end

__attribute__((swift_name("Kodein_diContextTranslator")))
@protocol ScmSdkKodein_diContextTranslator
@required
- (id _Nullable)translateDi:(id<ScmSdkKodein_diDirectDI>)di ctx:(id)ctx __attribute__((swift_name("translate(di:ctx:)")));
@property (readonly) id<ScmSdkKaveritTypeToken> contextType __attribute__((swift_name("contextType")));
@property (readonly) id<ScmSdkKaveritTypeToken> scopeType __attribute__((swift_name("scopeType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinTriple")))
@interface ScmSdkKotlinTriple<__covariant A, __covariant B, __covariant C> : ScmSdkBase
- (instancetype)initWithFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("init(first:second:third:)"))) __attribute__((objc_designated_initializer));
- (A _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (B _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (C _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinTriple<A, B, C> *)doCopyFirst:(A _Nullable)first second:(B _Nullable)second third:(C _Nullable)third __attribute__((swift_name("doCopy(first:second:third:)")));
- (BOOL)equalsOther:(id _Nullable)other __attribute__((swift_name("equals(other:)")));
- (int32_t)hashCode __attribute__((swift_name("hashCode()")));
- (NSString *)toString __attribute__((swift_name("toString()")));
@property (readonly) A _Nullable first __attribute__((swift_name("first")));
@property (readonly) B _Nullable second __attribute__((swift_name("second")));
@property (readonly) C _Nullable third __attribute__((swift_name("third")));
@end

__attribute__((swift_name("Kodein_diSearchSpecs")))
@interface ScmSdkKodein_diSearchSpecs : ScmSdkBase
- (instancetype)initWithContextType:(id<ScmSdkKaveritTypeToken> _Nullable)contextType argType:(id<ScmSdkKaveritTypeToken> _Nullable)argType type:(id<ScmSdkKaveritTypeToken> _Nullable)type tag:(id _Nullable)tag __attribute__((swift_name("init(contextType:argType:type:tag:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property id<ScmSdkKaveritTypeToken> _Nullable argType __attribute__((swift_name("argType")));
@property id<ScmSdkKaveritTypeToken> _Nullable contextType __attribute__((swift_name("contextType")));
@property id _Nullable tag __attribute__((swift_name("tag")));
@property id<ScmSdkKaveritTypeToken> _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((swift_name("Kodein_diExternalSource")))
@protocol ScmSdkKodein_diExternalSource
@required
- (id (^ _Nullable)(id _Nullable))getFactoryDi:(id<ScmSdkKodein_diBindingDI>)di key:(ScmSdkKodein_diDIKey<id, id, id> *)key __attribute__((swift_name("getFactory(di:key:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl")))
@interface ScmSdkKtor_httpUrl : ScmSdkBase
@property (class, readonly, getter=companion) ScmSdkKtor_httpUrlCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property (readonly) NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property (readonly) NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) NSString *encodedPathAndQuery __attribute__((swift_name("encodedPathAndQuery")));
@property (readonly) NSString *encodedQuery __attribute__((swift_name("encodedQuery")));
@property (readonly) NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property (readonly) NSString *fragment __attribute__((swift_name("fragment")));
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) id<ScmSdkKtor_httpParameters> parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) ScmSdkKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property (readonly) int32_t specifiedPort __attribute__((swift_name("specifiedPort")));
@property (readonly) BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod")))
@interface ScmSdkKtor_httpHttpMethod : ScmSdkBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpHttpMethodCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_httpHttpMethod *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("Ktor_utilsStringValues")))
@protocol ScmSdkKtor_utilsStringValues
@required
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<ScmSdkKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_httpHeaders")))
@protocol ScmSdkKtor_httpHeaders <ScmSdkKtor_utilsStringValues>
@required
@end

__attribute__((swift_name("Ktor_httpOutgoingContent")))
@interface ScmSdkKtor_httpOutgoingContent : ScmSdkBase
- (id _Nullable)getPropertyKey:(ScmSdkKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getProperty(key:)")));
- (void)setPropertyKey:(ScmSdkKtor_utilsAttributeKey<id> *)key value:(id _Nullable)value __attribute__((swift_name("setProperty(key:value:)")));
- (id<ScmSdkKtor_httpHeaders> _Nullable)trailers __attribute__((swift_name("trailers()")));
@property (readonly) ScmSdkLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) ScmSdkKtor_httpContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) id<ScmSdkKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreJob")))
@protocol ScmSdkKotlinx_coroutines_coreJob <ScmSdkKotlinCoroutineContextElement>
@required
- (id<ScmSdkKotlinx_coroutines_coreChildHandle>)attachChildChild:(id<ScmSdkKotlinx_coroutines_coreChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause:(ScmSdkKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (ScmSdkKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (id<ScmSdkKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(ScmSdkKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));
- (id<ScmSdkKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionHandler:(void (^)(ScmSdkKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (id<ScmSdkKotlinx_coroutines_coreJob>)plusOther_:(id<ScmSdkKotlinx_coroutines_coreJob>)other __attribute__((swift_name("plus(other_:)"))) __attribute__((unavailable("Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.")));
- (BOOL)start __attribute__((swift_name("start()")));
@property (readonly) id<ScmSdkKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) id<ScmSdkKotlinx_coroutines_coreSelectClause0> onJoin __attribute__((swift_name("onJoin")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode")))
@interface ScmSdkKtor_httpHttpStatusCode : ScmSdkBase
- (instancetype)initWithValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("init(value:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpHttpStatusCodeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_httpHttpStatusCode *)doCopyValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("doCopy(value:description:)")));
- (ScmSdkKtor_httpHttpStatusCode *)descriptionValue:(NSString *)value __attribute__((swift_name("description(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate")))
@interface ScmSdkKtor_utilsGMTDate : ScmSdkBase <ScmSdkKotlinComparable>
@property (class, readonly, getter=companion) ScmSdkKtor_utilsGMTDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(ScmSdkKtor_utilsGMTDate *)other __attribute__((swift_name("compareTo(other:)")));
- (int32_t)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_utilsWeekDay *)component4 __attribute__((swift_name("component4()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component5 __attribute__((swift_name("component5()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component6 __attribute__((swift_name("component6()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_utilsMonth *)component7 __attribute__((swift_name("component7()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component8 __attribute__((swift_name("component8()"))) __attribute__((deprecated("use corresponding property instead")));
- (int64_t)component9 __attribute__((swift_name("component9()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_utilsGMTDate *)doCopySeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(ScmSdkKtor_utilsWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(ScmSdkKtor_utilsMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) ScmSdkKtor_utilsWeekDay *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hours __attribute__((swift_name("hours")));
@property (readonly) int32_t minutes __attribute__((swift_name("minutes")));
@property (readonly) ScmSdkKtor_utilsMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t seconds __attribute__((swift_name("seconds")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion")))
@interface ScmSdkKtor_httpHttpProtocolVersion : ScmSdkBase
- (instancetype)initWithName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("init(name:major:minor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpHttpProtocolVersionCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_httpHttpProtocolVersion *)doCopyName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("doCopy(name:major:minor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t major __attribute__((swift_name("major")));
@property (readonly) int32_t minor __attribute__((swift_name("minor")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Ktor_ioByteReadChannel")))
@protocol ScmSdkKtor_ioByteReadChannel
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitContentWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("awaitContent(completionHandler:)")));
- (BOOL)cancelCause_:(ScmSdkKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)discardMax:(int64_t)max completionHandler:(void (^)(ScmSdkLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("discard(max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)peekToDestination:(ScmSdkKtor_ioMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max completionHandler:(void (^)(ScmSdkLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(ScmSdkKtor_ioChunkBuffer *)dst completionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(ScmSdkKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler:)")));
- (int32_t)readAvailableMin:(int32_t)min block:(void (^)(ScmSdkKtor_ioBuffer *))block __attribute__((swift_name("readAvailable(min:block:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readAvailableDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readAvailable(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readBooleanWithCompletionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readBoolean(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readByteWithCompletionHandler:(void (^)(ScmSdkByte * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readByte(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readDoubleWithCompletionHandler:(void (^)(ScmSdkDouble * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readDouble(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFloatWithCompletionHandler:(void (^)(ScmSdkFloat * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readFloat(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(ScmSdkKtor_ioChunkBuffer *)dst n:(int32_t)n completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:n:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(ScmSdkKotlinByteArray *)dst offset:(int32_t)offset length:(int32_t)length completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int32_t)offset length:(int32_t)length completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readFullyDst:(void *)dst offset:(int64_t)offset length:(int64_t)length completionHandler__:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readFully(dst:offset:length:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readIntWithCompletionHandler:(void (^)(ScmSdkInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readInt(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readLongWithCompletionHandler:(void (^)(ScmSdkLong * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readLong(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readPacketSize:(int32_t)size completionHandler:(void (^)(ScmSdkKtor_ioByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readPacket(size:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readRemainingLimit:(int64_t)limit completionHandler:(void (^)(ScmSdkKtor_ioByteReadPacket * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readRemaining(limit:completionHandler:)")));
- (void)readSessionConsumer:(void (^)(id<ScmSdkKtor_ioReadSession>))consumer __attribute__((swift_name("readSession(consumer:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readShortWithCompletionHandler:(void (^)(ScmSdkShort * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readShort(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readSuspendableSessionConsumer:(id<ScmSdkKotlinSuspendFunction1>)consumer completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("readSuspendableSession(consumer:completionHandler:)"))) __attribute__((deprecated("Use read { } instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineLimit:(int32_t)limit completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8Line(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)readUTF8LineToOut:(id<ScmSdkKotlinAppendable>)out limit:(int32_t)limit completionHandler:(void (^)(ScmSdkBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("readUTF8LineTo(out:limit:completionHandler:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@property (readonly) ScmSdkKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) BOOL isClosedForWrite __attribute__((swift_name("isClosedForWrite")));
@property (readonly) int64_t totalBytesRead __attribute__((swift_name("totalBytesRead")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilder")))
@protocol ScmSdkKtor_utilsStringValuesBuilder
@required
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<ScmSdkKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<ScmSdkKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<ScmSdkKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<ScmSdkKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilderImpl")))
@interface ScmSdkKtor_utilsStringValuesBuilderImpl : ScmSdkBase <ScmSdkKtor_utilsStringValuesBuilder>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer));
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<ScmSdkKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<ScmSdkKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<ScmSdkKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<ScmSdkKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@property (readonly) ScmSdkMutableDictionary<NSString *, NSMutableArray<NSString *> *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeadersBuilder")))
@interface ScmSdkKtor_httpHeadersBuilder : ScmSdkKtor_utilsStringValuesBuilderImpl
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<ScmSdkKtor_httpHeaders>)build __attribute__((swift_name("build()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder.Companion")))
@interface ScmSdkKtor_client_coreHttpRequestBuilderCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpRequestBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder")))
@interface ScmSdkKtor_httpURLBuilder : ScmSdkBase
- (instancetype)initWithProtocol:(ScmSdkKtor_httpURLProtocol *)protocol host:(NSString *)host port:(int32_t)port user:(NSString * _Nullable)user password:(NSString * _Nullable)password pathSegments:(NSArray<NSString *> *)pathSegments parameters:(id<ScmSdkKtor_httpParameters>)parameters fragment:(NSString *)fragment trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:port:user:password:pathSegments:parameters:fragment:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpURLBuilderCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkKtor_httpUrl *)build __attribute__((swift_name("build()")));
- (NSString *)buildString __attribute__((swift_name("buildString()")));
@property NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property id<ScmSdkKtor_httpParametersBuilder> encodedParameters __attribute__((swift_name("encodedParameters")));
@property NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property NSArray<NSString *> *encodedPathSegments __attribute__((swift_name("encodedPathSegments")));
@property NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property NSString *fragment __attribute__((swift_name("fragment")));
@property NSString *host __attribute__((swift_name("host")));
@property (readonly) id<ScmSdkKtor_httpParametersBuilder> parameters __attribute__((swift_name("parameters")));
@property NSString * _Nullable password __attribute__((swift_name("password")));
@property NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property int32_t port __attribute__((swift_name("port")));
@property ScmSdkKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsTypeInfo")))
@interface ScmSdkKtor_utilsTypeInfo : ScmSdkBase
- (instancetype)initWithType:(id<ScmSdkKotlinKClass>)type reifiedType:(id<ScmSdkKotlinKType>)reifiedType kotlinType:(id<ScmSdkKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:reifiedType:kotlinType:)"))) __attribute__((objc_designated_initializer));
- (id<ScmSdkKotlinKClass>)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkKotlinKType>)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkKotlinKType> _Nullable)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_utilsTypeInfo *)doCopyType:(id<ScmSdkKotlinKClass>)type reifiedType:(id<ScmSdkKotlinKType>)reifiedType kotlinType:(id<ScmSdkKotlinKType> _Nullable)kotlinType __attribute__((swift_name("doCopy(type:reifiedType:kotlinType:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<ScmSdkKotlinKType> reifiedType __attribute__((swift_name("reifiedType")));
@property (readonly) id<ScmSdkKotlinKClass> type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientCall.Companion")))
@interface ScmSdkKtor_client_coreHttpClientCallCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_client_coreHttpClientCallCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsAttributeKey<id> *CustomResponse __attribute__((swift_name("CustomResponse"))) __attribute__((unavailable("This is going to be removed. Please file a ticket with clarification why and what for do you need it.")));
@end

__attribute__((swift_name("Ktor_client_coreHttpRequest")))
@protocol ScmSdkKtor_client_coreHttpRequest <ScmSdkKtor_httpHttpMessage, ScmSdkKotlinx_coroutines_coreCoroutineScope>
@required
@property (readonly) id<ScmSdkKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) ScmSdkKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) ScmSdkKtor_httpOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) ScmSdkKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) ScmSdkKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("Kodein_diBinding")))
@protocol ScmSdkKodein_diBinding
@required
- (id (^)(id _Nullable))getFactoryKey:(ScmSdkKodein_diDIKey<id, id, id> *)key di:(id<ScmSdkKodein_diBindingDI>)di __attribute__((swift_name("getFactory(key:di:)")));
@end

__attribute__((swift_name("Kodein_diDIBinding")))
@protocol ScmSdkKodein_diDIBinding <ScmSdkKodein_diBinding>
@required
- (NSString *)factoryFullName __attribute__((swift_name("factoryFullName()")));
- (NSString *)factoryName __attribute__((swift_name("factoryName()")));
@property (readonly) id<ScmSdkKaveritTypeToken> argType __attribute__((swift_name("argType")));
@property (readonly) id<ScmSdkKaveritTypeToken> contextType __attribute__((swift_name("contextType")));
@property (readonly) id<ScmSdkKodein_diDIBindingCopier> _Nullable copier __attribute__((swift_name("copier")));
@property (readonly) id<ScmSdkKaveritTypeToken> createdType __attribute__((swift_name("createdType")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *fullDescription __attribute__((swift_name("fullDescription")));
@property (readonly) id<ScmSdkKodein_diScope> _Nullable scope __attribute__((swift_name("scope")));
@property (readonly) BOOL supportSubTypes __attribute__((swift_name("supportSubTypes")));
@end

__attribute__((swift_name("Kodein_diDirectDIAware")))
@protocol ScmSdkKodein_diDirectDIAware
@required
@property (readonly) id<ScmSdkKodein_diDirectDI> directDI __attribute__((swift_name("directDI")));
@end

__attribute__((swift_name("Kodein_diDirectDIBase")))
@protocol ScmSdkKodein_diDirectDIBase <ScmSdkKodein_diDirectDIAware>
@required
- (id (^)(id _Nullable))FactoryArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("Factory(argType:type:tag:)")));
- (id (^ _Nullable)(id _Nullable))FactoryOrNullArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("FactoryOrNull(argType:type:tag:)")));
- (id)InstanceType:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("Instance(type:tag:)")));
- (id)InstanceArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag arg:(id _Nullable)arg __attribute__((swift_name("Instance(argType:type:tag:arg:)")));
- (id _Nullable)InstanceOrNullType:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("InstanceOrNull(type:tag:)")));
- (id _Nullable)InstanceOrNullArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag arg:(id _Nullable)arg __attribute__((swift_name("InstanceOrNull(argType:type:tag:arg:)")));
- (id<ScmSdkKodein_diDirectDI>)OnContext:(id<ScmSdkKodein_diDIContext>)context __attribute__((swift_name("On(context:)")));
- (id (^)(void))ProviderType:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("Provider(type:tag:)")));
- (id (^)(void))ProviderArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag arg:(id _Nullable (^)(void))arg __attribute__((swift_name("Provider(argType:type:tag:arg:)")));
- (id (^ _Nullable)(void))ProviderOrNullType:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag __attribute__((swift_name("ProviderOrNull(type:tag:)")));
- (id (^ _Nullable)(void))ProviderOrNullArgType:(id<ScmSdkKaveritTypeToken>)argType type:(id<ScmSdkKaveritTypeToken>)type tag:(id _Nullable)tag arg:(id _Nullable (^)(void))arg __attribute__((swift_name("ProviderOrNull(argType:type:tag:arg:)")));
@property (readonly) id<ScmSdkKodein_diDIContainer> container __attribute__((swift_name("container")));
@property (readonly) id<ScmSdkKodein_diDI> di __attribute__((swift_name("di")));
@property (readonly) id<ScmSdkKodein_diDI> lazy __attribute__((swift_name("lazy")));
@end

__attribute__((swift_name("Kodein_diDirectDI")))
@protocol ScmSdkKodein_diDirectDI <ScmSdkKodein_diDirectDIBase>
@required
@end

__attribute__((swift_name("Kodein_diWithContext")))
@protocol ScmSdkKodein_diWithContext
@required
@property (readonly) id context __attribute__((swift_name("context")));
@end

__attribute__((swift_name("Kodein_diBindingDI")))
@protocol ScmSdkKodein_diBindingDI <ScmSdkKodein_diDirectDI, ScmSdkKodein_diWithContext>
@required
- (id<ScmSdkKodein_diBindingDI>)onErasedContext __attribute__((swift_name("onErasedContext()")));
- (id (^)(id _Nullable))overriddenFactory __attribute__((swift_name("overriddenFactory()")));
- (id (^ _Nullable)(id _Nullable))overriddenFactoryOrNull __attribute__((swift_name("overriddenFactoryOrNull()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl.Companion")))
@interface ScmSdkKtor_httpUrlCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpUrlCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParameters")))
@protocol ScmSdkKtor_httpParameters <ScmSdkKtor_utilsStringValues>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol")))
@interface ScmSdkKtor_httpURLProtocol : ScmSdkBase
- (instancetype)initWithName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("init(name:defaultPort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpURLProtocolCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (int32_t)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_httpURLProtocol *)doCopyName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("doCopy(name:defaultPort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t defaultPort __attribute__((swift_name("defaultPort")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod.Companion")))
@interface ScmSdkKtor_httpHttpMethodCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpHttpMethodCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_httpHttpMethod *)parseMethod:(NSString *)method __attribute__((swift_name("parse(method:)")));
@property (readonly) NSArray<ScmSdkKtor_httpHttpMethod *> *DefaultMethods __attribute__((swift_name("DefaultMethods")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Delete __attribute__((swift_name("Delete")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Get __attribute__((swift_name("Get")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Head __attribute__((swift_name("Head")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Options __attribute__((swift_name("Options")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Patch __attribute__((swift_name("Patch")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Post __attribute__((swift_name("Post")));
@property (readonly) ScmSdkKtor_httpHttpMethod *Put __attribute__((swift_name("Put")));
@end

__attribute__((swift_name("KotlinMapEntry")))
@protocol ScmSdkKotlinMapEntry
@required
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly) id _Nullable value_ __attribute__((swift_name("value_")));
@end

__attribute__((swift_name("Ktor_httpHeaderValueWithParameters")))
@interface ScmSdkKtor_httpHeaderValueWithParameters : ScmSdkBase
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<ScmSdkKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_httpHeaderValueWithParametersCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSArray<ScmSdkKtor_httpHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType")))
@interface ScmSdkKtor_httpContentType : ScmSdkKtor_httpHeaderValueWithParameters
- (instancetype)initWithContentType:(NSString *)contentType contentSubtype:(NSString *)contentSubtype parameters:(NSArray<ScmSdkKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(contentType:contentSubtype:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<ScmSdkKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_httpContentTypeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchPattern:(ScmSdkKtor_httpContentType *)pattern __attribute__((swift_name("match(pattern:)")));
- (BOOL)matchPattern_:(NSString *)pattern __attribute__((swift_name("match(pattern_:)")));
- (ScmSdkKtor_httpContentType *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (ScmSdkKtor_httpContentType *)withoutParameters __attribute__((swift_name("withoutParameters()")));
@property (readonly) NSString *contentSubtype __attribute__((swift_name("contentSubtype")));
@property (readonly) NSString *contentType __attribute__((swift_name("contentType")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreChildHandle")))
@protocol ScmSdkKotlinx_coroutines_coreChildHandle <ScmSdkKotlinx_coroutines_coreDisposableHandle>
@required
- (BOOL)childCancelledCause:(ScmSdkKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));
@property (readonly) id<ScmSdkKotlinx_coroutines_coreJob> _Nullable parent __attribute__((swift_name("parent")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreChildJob")))
@protocol ScmSdkKotlinx_coroutines_coreChildJob <ScmSdkKotlinx_coroutines_coreJob>
@required
- (void)parentCancelledParentJob:(id<ScmSdkKotlinx_coroutines_coreParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
@end

__attribute__((swift_name("KotlinSequence")))
@protocol ScmSdkKotlinSequence
@required
- (id<ScmSdkKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectClause0")))
@protocol ScmSdkKotlinx_coroutines_coreSelectClause0
@required
- (void)registerSelectClause0Select:(id<ScmSdkKotlinx_coroutines_coreSelectInstance>)select block:(id<ScmSdkKotlinSuspendFunction0>)block __attribute__((swift_name("registerSelectClause0(select:block:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode.Companion")))
@interface ScmSdkKtor_httpHttpStatusCodeCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpHttpStatusCodeCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_httpHttpStatusCode *)fromValueValue:(int32_t)value __attribute__((swift_name("fromValue(value:)")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Accepted __attribute__((swift_name("Accepted")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *BadGateway __attribute__((swift_name("BadGateway")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *BadRequest __attribute__((swift_name("BadRequest")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Conflict __attribute__((swift_name("Conflict")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Continue __attribute__((swift_name("Continue")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Created __attribute__((swift_name("Created")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *ExpectationFailed __attribute__((swift_name("ExpectationFailed")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *FailedDependency __attribute__((swift_name("FailedDependency")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Forbidden __attribute__((swift_name("Forbidden")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Found __attribute__((swift_name("Found")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *GatewayTimeout __attribute__((swift_name("GatewayTimeout")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Gone __attribute__((swift_name("Gone")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *InsufficientStorage __attribute__((swift_name("InsufficientStorage")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *InternalServerError __attribute__((swift_name("InternalServerError")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *LengthRequired __attribute__((swift_name("LengthRequired")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Locked __attribute__((swift_name("Locked")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *MethodNotAllowed __attribute__((swift_name("MethodNotAllowed")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *MovedPermanently __attribute__((swift_name("MovedPermanently")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *MultiStatus __attribute__((swift_name("MultiStatus")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *MultipleChoices __attribute__((swift_name("MultipleChoices")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NoContent __attribute__((swift_name("NoContent")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NonAuthoritativeInformation __attribute__((swift_name("NonAuthoritativeInformation")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NotAcceptable __attribute__((swift_name("NotAcceptable")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NotFound __attribute__((swift_name("NotFound")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NotImplemented __attribute__((swift_name("NotImplemented")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *NotModified __attribute__((swift_name("NotModified")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *OK __attribute__((swift_name("OK")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *PartialContent __attribute__((swift_name("PartialContent")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *PayloadTooLarge __attribute__((swift_name("PayloadTooLarge")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *PaymentRequired __attribute__((swift_name("PaymentRequired")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *PermanentRedirect __attribute__((swift_name("PermanentRedirect")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *PreconditionFailed __attribute__((swift_name("PreconditionFailed")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Processing __attribute__((swift_name("Processing")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *ProxyAuthenticationRequired __attribute__((swift_name("ProxyAuthenticationRequired")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *RequestHeaderFieldTooLarge __attribute__((swift_name("RequestHeaderFieldTooLarge")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *RequestTimeout __attribute__((swift_name("RequestTimeout")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *RequestURITooLong __attribute__((swift_name("RequestURITooLong")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *RequestedRangeNotSatisfiable __attribute__((swift_name("RequestedRangeNotSatisfiable")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *ResetContent __attribute__((swift_name("ResetContent")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *SeeOther __attribute__((swift_name("SeeOther")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *ServiceUnavailable __attribute__((swift_name("ServiceUnavailable")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *SwitchProxy __attribute__((swift_name("SwitchProxy")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *SwitchingProtocols __attribute__((swift_name("SwitchingProtocols")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *TemporaryRedirect __attribute__((swift_name("TemporaryRedirect")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *TooManyRequests __attribute__((swift_name("TooManyRequests")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *Unauthorized __attribute__((swift_name("Unauthorized")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *UnprocessableEntity __attribute__((swift_name("UnprocessableEntity")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *UnsupportedMediaType __attribute__((swift_name("UnsupportedMediaType")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *UpgradeRequired __attribute__((swift_name("UpgradeRequired")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *UseProxy __attribute__((swift_name("UseProxy")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *VariantAlsoNegotiates __attribute__((swift_name("VariantAlsoNegotiates")));
@property (readonly) ScmSdkKtor_httpHttpStatusCode *VersionNotSupported __attribute__((swift_name("VersionNotSupported")));
@property (readonly) NSArray<ScmSdkKtor_httpHttpStatusCode *> *allStatusCodes __attribute__((swift_name("allStatusCodes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate.Companion")))
@interface ScmSdkKtor_utilsGMTDateCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_utilsGMTDateCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_utilsGMTDate *START __attribute__((swift_name("START")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay")))
@interface ScmSdkKtor_utilsWeekDay : ScmSdkKotlinEnum<ScmSdkKtor_utilsWeekDay *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_utilsWeekDayCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *monday __attribute__((swift_name("monday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *friday __attribute__((swift_name("friday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) ScmSdkKtor_utilsWeekDay *sunday __attribute__((swift_name("sunday")));
+ (ScmSdkKotlinArray<ScmSdkKtor_utilsWeekDay *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth")))
@interface ScmSdkKtor_utilsMonth : ScmSdkKotlinEnum<ScmSdkKtor_utilsMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_utilsMonthCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) ScmSdkKtor_utilsMonth *january __attribute__((swift_name("january")));
@property (class, readonly) ScmSdkKtor_utilsMonth *february __attribute__((swift_name("february")));
@property (class, readonly) ScmSdkKtor_utilsMonth *march __attribute__((swift_name("march")));
@property (class, readonly) ScmSdkKtor_utilsMonth *april __attribute__((swift_name("april")));
@property (class, readonly) ScmSdkKtor_utilsMonth *may __attribute__((swift_name("may")));
@property (class, readonly) ScmSdkKtor_utilsMonth *june __attribute__((swift_name("june")));
@property (class, readonly) ScmSdkKtor_utilsMonth *july __attribute__((swift_name("july")));
@property (class, readonly) ScmSdkKtor_utilsMonth *august __attribute__((swift_name("august")));
@property (class, readonly) ScmSdkKtor_utilsMonth *september __attribute__((swift_name("september")));
@property (class, readonly) ScmSdkKtor_utilsMonth *october __attribute__((swift_name("october")));
@property (class, readonly) ScmSdkKtor_utilsMonth *november __attribute__((swift_name("november")));
@property (class, readonly) ScmSdkKtor_utilsMonth *december __attribute__((swift_name("december")));
+ (ScmSdkKotlinArray<ScmSdkKtor_utilsMonth *> *)values __attribute__((swift_name("values()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion.Companion")))
@interface ScmSdkKtor_httpHttpProtocolVersionCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpHttpProtocolVersionCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_httpHttpProtocolVersion *)fromValueName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("fromValue(name:major:minor:)")));
- (ScmSdkKtor_httpHttpProtocolVersion *)parseValue:(id)value __attribute__((swift_name("parse(value:)")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *HTTP_1_0 __attribute__((swift_name("HTTP_1_0")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *HTTP_1_1 __attribute__((swift_name("HTTP_1_1")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *HTTP_2_0 __attribute__((swift_name("HTTP_2_0")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *QUIC __attribute__((swift_name("QUIC")));
@property (readonly) ScmSdkKtor_httpHttpProtocolVersion *SPDY_3 __attribute__((swift_name("SPDY_3")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioMemory")))
@interface ScmSdkKtor_ioMemory : ScmSdkBase
- (instancetype)initWithPointer:(void *)pointer size:(int64_t)size __attribute__((swift_name("init(pointer:size:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_ioMemoryCompanion *companion __attribute__((swift_name("companion")));
- (void)doCopyToDestination:(ScmSdkKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length destinationOffset:(int32_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset:)")));
- (void)doCopyToDestination:(ScmSdkKtor_ioMemory *)destination offset:(int64_t)offset length:(int64_t)length destinationOffset_:(int64_t)destinationOffset __attribute__((swift_name("doCopyTo(destination:offset:length:destinationOffset_:)")));
- (int8_t)loadAtIndex:(int32_t)index __attribute__((swift_name("loadAt(index:)")));
- (int8_t)loadAtIndex_:(int64_t)index __attribute__((swift_name("loadAt(index_:)")));
- (ScmSdkKtor_ioMemory *)sliceOffset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("slice(offset:length:)")));
- (ScmSdkKtor_ioMemory *)sliceOffset:(int64_t)offset length_:(int64_t)length __attribute__((swift_name("slice(offset:length_:)")));
- (void)storeAtIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("storeAt(index:value:)")));
- (void)storeAtIndex:(int64_t)index value_:(int8_t)value __attribute__((swift_name("storeAt(index:value_:)")));
@property (readonly) void *pointer __attribute__((swift_name("pointer")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@property (readonly) int32_t size32 __attribute__((swift_name("size32")));
@end

__attribute__((swift_name("Ktor_ioBuffer")))
@interface ScmSdkKtor_ioBuffer : ScmSdkBase
- (instancetype)initWithMemory:(ScmSdkKtor_ioMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_ioBufferCompanion *companion __attribute__((swift_name("companion")));
- (void)commitWrittenCount:(int32_t)count __attribute__((swift_name("commitWritten(count:)")));
- (void)discardExactCount:(int32_t)count __attribute__((swift_name("discardExact(count:)")));
- (ScmSdkKtor_ioBuffer *)duplicate __attribute__((swift_name("duplicate()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)duplicateToCopy:(ScmSdkKtor_ioBuffer *)copy __attribute__((swift_name("duplicateTo(copy:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (void)reserveEndGapEndGap:(int32_t)endGap __attribute__((swift_name("reserveEndGap(endGap:)")));
- (void)reserveStartGapStartGap:(int32_t)startGap __attribute__((swift_name("reserveStartGap(startGap:)")));
- (void)reset __attribute__((swift_name("reset()")));
- (void)resetForRead __attribute__((swift_name("resetForRead()")));
- (void)resetForWrite __attribute__((swift_name("resetForWrite()")));
- (void)resetForWriteLimit:(int32_t)limit __attribute__((swift_name("resetForWrite(limit:)")));
- (void)rewindCount:(int32_t)count __attribute__((swift_name("rewind(count:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int32_t)tryPeekByte __attribute__((swift_name("tryPeekByte()")));
- (int32_t)tryReadByte __attribute__((swift_name("tryReadByte()")));
- (void)writeByteValue:(int8_t)value __attribute__((swift_name("writeByte(value:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@property (readonly) int32_t endGap __attribute__((swift_name("endGap")));
@property (readonly) int32_t limit __attribute__((swift_name("limit")));
@property (readonly) ScmSdkKtor_ioMemory *memory __attribute__((swift_name("memory")));
@property (readonly) int32_t readPosition __attribute__((swift_name("readPosition")));
@property (readonly) int32_t readRemaining __attribute__((swift_name("readRemaining")));
@property (readonly) int32_t startGap __attribute__((swift_name("startGap")));
@property (readonly) int32_t writePosition __attribute__((swift_name("writePosition")));
@property (readonly) int32_t writeRemaining __attribute__((swift_name("writeRemaining")));
@end

__attribute__((swift_name("Ktor_ioChunkBuffer")))
@interface ScmSdkKtor_ioChunkBuffer : ScmSdkKtor_ioBuffer
- (instancetype)initWithMemory:(ScmSdkKtor_ioMemory *)memory origin:(ScmSdkKtor_ioChunkBuffer * _Nullable)origin parentPool:(id<ScmSdkKtor_ioObjectPool> _Nullable)parentPool __attribute__((swift_name("init(memory:origin:parentPool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMemory:(ScmSdkKtor_ioMemory *)memory __attribute__((swift_name("init(memory:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_ioChunkBufferCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkKtor_ioChunkBuffer * _Nullable)cleanNext __attribute__((swift_name("cleanNext()")));
- (ScmSdkKtor_ioChunkBuffer *)duplicate __attribute__((swift_name("duplicate()")));
- (void)releasePool:(id<ScmSdkKtor_ioObjectPool>)pool __attribute__((swift_name("release(pool:)")));
- (void)reset __attribute__((swift_name("reset()")));
@property (getter=next__) ScmSdkKtor_ioChunkBuffer * _Nullable next __attribute__((swift_name("next")));
@property (readonly) ScmSdkKtor_ioChunkBuffer * _Nullable origin __attribute__((swift_name("origin")));
@property (readonly) int32_t referenceCount __attribute__((swift_name("referenceCount")));
@end

__attribute__((swift_name("Ktor_ioInput")))
@interface ScmSdkKtor_ioInput : ScmSdkBase <ScmSdkKtor_ioCloseable>
- (instancetype)initWithHead:(ScmSdkKtor_ioChunkBuffer *)head remaining:(int64_t)remaining pool:(id<ScmSdkKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKtor_ioInputCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)canRead __attribute__((swift_name("canRead()")));
- (void)close __attribute__((swift_name("close()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (int64_t)discardN_:(int64_t)n __attribute__((swift_name("discard(n_:)")));
- (void)discardExactN:(int32_t)n __attribute__((swift_name("discardExact(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKtor_ioChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(ScmSdkKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (BOOL)hasBytesN:(int32_t)n __attribute__((swift_name("hasBytes(n:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)markNoMoreChunksAvailable __attribute__((swift_name("markNoMoreChunksAvailable()")));
- (int64_t)peekToDestination:(ScmSdkKtor_ioMemory *)destination destinationOffset:(int64_t)destinationOffset offset:(int64_t)offset min:(int64_t)min max:(int64_t)max __attribute__((swift_name("peekTo(destination:destinationOffset:offset:min:max:)")));
- (int32_t)peekToBuffer:(ScmSdkKtor_ioChunkBuffer *)buffer __attribute__((swift_name("peekTo(buffer:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (NSString *)readTextMin:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(min:max:)")));
- (int32_t)readTextOut:(id<ScmSdkKotlinAppendable>)out min:(int32_t)min max:(int32_t)max __attribute__((swift_name("readText(out:min:max:)")));
- (NSString *)readTextExactExactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(exactCharacters:)")));
- (void)readTextExactOut:(id<ScmSdkKotlinAppendable>)out exactCharacters:(int32_t)exactCharacters __attribute__((swift_name("readTextExact(out:exactCharacters:)")));
- (void)release_ __attribute__((swift_name("release()")));
- (int32_t)tryPeek __attribute__((swift_name("tryPeek()")));
@property (readonly) BOOL endOfInput __attribute__((swift_name("endOfInput")));
@property (readonly) id<ScmSdkKtor_ioObjectPool> pool __attribute__((swift_name("pool")));
@property (readonly) int64_t remaining __attribute__((swift_name("remaining")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioByteReadPacket")))
@interface ScmSdkKtor_ioByteReadPacket : ScmSdkKtor_ioInput
- (instancetype)initWithHead:(ScmSdkKtor_ioChunkBuffer *)head pool:(id<ScmSdkKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:pool:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithHead:(ScmSdkKtor_ioChunkBuffer *)head remaining:(int64_t)remaining pool:(id<ScmSdkKtor_ioObjectPool>)pool __attribute__((swift_name("init(head:remaining:pool:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) ScmSdkKtor_ioByteReadPacketCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)closeSource __attribute__((swift_name("closeSource()")));
- (ScmSdkKtor_ioByteReadPacket *)doCopy __attribute__((swift_name("doCopy()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKtor_ioChunkBuffer * _Nullable)fill __attribute__((swift_name("fill()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (int32_t)fillDestination:(ScmSdkKtor_ioMemory *)destination offset:(int32_t)offset length:(int32_t)length __attribute__((swift_name("fill(destination:offset:length:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Ktor_ioReadSession")))
@protocol ScmSdkKtor_ioReadSession
@required
- (int32_t)discardN:(int32_t)n __attribute__((swift_name("discard(n:)")));
- (ScmSdkKtor_ioChunkBuffer * _Nullable)requestAtLeast:(int32_t)atLeast __attribute__((swift_name("request(atLeast:)")));
@property (readonly) int32_t availableForRead __attribute__((swift_name("availableForRead")));
@end

__attribute__((swift_name("KotlinAppendable")))
@protocol ScmSdkKotlinAppendable
@required
- (id<ScmSdkKotlinAppendable>)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<ScmSdkKotlinAppendable>)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (id<ScmSdkKotlinAppendable>)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder.Companion")))
@interface ScmSdkKtor_httpURLBuilderCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpURLBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParametersBuilder")))
@protocol ScmSdkKtor_httpParametersBuilder <ScmSdkKtor_utilsStringValuesBuilder>
@required
@end

__attribute__((swift_name("KotlinKType")))
@protocol ScmSdkKotlinKType
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) NSArray<ScmSdkKotlinKTypeProjection *> *arguments __attribute__((swift_name("arguments")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) id<ScmSdkKotlinKClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@property (readonly) BOOL isMarkedNullable __attribute__((swift_name("isMarkedNullable")));
@end

__attribute__((swift_name("Kodein_diDIBindingCopier")))
@protocol ScmSdkKodein_diDIBindingCopier
@required
- (id<ScmSdkKodein_diDIBinding>)doCopyBuilder:(id<ScmSdkKodein_diDIContainerBuilder>)builder __attribute__((swift_name("doCopy(builder:)")));
@end

__attribute__((swift_name("Kodein_diScope")))
@protocol ScmSdkKodein_diScope
@required
- (ScmSdkKodein_diScopeRegistry *)getRegistryContext:(id _Nullable)context __attribute__((swift_name("getRegistry(context:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol.Companion")))
@interface ScmSdkKtor_httpURLProtocolCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpURLProtocolCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_httpURLProtocol *)createOrDefaultName:(NSString *)name __attribute__((swift_name("createOrDefault(name:)")));
@property (readonly) ScmSdkKtor_httpURLProtocol *HTTP __attribute__((swift_name("HTTP")));
@property (readonly) ScmSdkKtor_httpURLProtocol *HTTPS __attribute__((swift_name("HTTPS")));
@property (readonly) ScmSdkKtor_httpURLProtocol *SOCKS __attribute__((swift_name("SOCKS")));
@property (readonly) ScmSdkKtor_httpURLProtocol *WS __attribute__((swift_name("WS")));
@property (readonly) ScmSdkKtor_httpURLProtocol *WSS __attribute__((swift_name("WSS")));
@property (readonly) NSDictionary<NSString *, ScmSdkKtor_httpURLProtocol *> *byName __attribute__((swift_name("byName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueParam")))
@interface ScmSdkKtor_httpHeaderValueParam : ScmSdkBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("init(name:value:escapeValue:)"))) __attribute__((objc_designated_initializer));
- (NSString *)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (NSString *)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (BOOL)component3 __attribute__((swift_name("component3()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKtor_httpHeaderValueParam *)doCopyName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("doCopy(name:value:escapeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL escapeValue __attribute__((swift_name("escapeValue")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueWithParameters.Companion")))
@interface ScmSdkKtor_httpHeaderValueWithParametersCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpHeaderValueWithParametersCompanion *shared __attribute__((swift_name("shared")));
- (id _Nullable)parseValue:(NSString *)value init:(id _Nullable (^)(NSString *, NSArray<ScmSdkKtor_httpHeaderValueParam *> *))init __attribute__((swift_name("parse(value:init:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType.Companion")))
@interface ScmSdkKtor_httpContentTypeCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_httpContentTypeCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_httpContentType *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) ScmSdkKtor_httpContentType *Any __attribute__((swift_name("Any")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreParentJob")))
@protocol ScmSdkKotlinx_coroutines_coreParentJob <ScmSdkKotlinx_coroutines_coreJob>
@required
- (ScmSdkKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectInstance")))
@protocol ScmSdkKotlinx_coroutines_coreSelectInstance
@required
- (void)disposeOnSelectHandle:(id<ScmSdkKotlinx_coroutines_coreDisposableHandle>)handle __attribute__((swift_name("disposeOnSelect(handle:)")));
- (id _Nullable)performAtomicTrySelectDesc:(ScmSdkKotlinx_coroutines_coreAtomicDesc *)desc __attribute__((swift_name("performAtomicTrySelect(desc:)")));
- (void)resumeSelectWithExceptionException:(ScmSdkKotlinThrowable *)exception __attribute__((swift_name("resumeSelectWithException(exception:)")));
- (BOOL)trySelect __attribute__((swift_name("trySelect()")));
- (id _Nullable)trySelectOtherOtherOp:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp * _Nullable)otherOp __attribute__((swift_name("trySelectOther(otherOp:)")));
@property (readonly) id<ScmSdkKotlinContinuation> completion __attribute__((swift_name("completion")));
@property (readonly) BOOL isSelected __attribute__((swift_name("isSelected")));
@end

__attribute__((swift_name("KotlinSuspendFunction0")))
@protocol ScmSdkKotlinSuspendFunction0 <ScmSdkKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay.Companion")))
@interface ScmSdkKtor_utilsWeekDayCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_utilsWeekDayCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_utilsWeekDay *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (ScmSdkKtor_utilsWeekDay *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth.Companion")))
@interface ScmSdkKtor_utilsMonthCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_utilsMonthCompanion *shared __attribute__((swift_name("shared")));
- (ScmSdkKtor_utilsMonth *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (ScmSdkKtor_utilsMonth *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioMemory.Companion")))
@interface ScmSdkKtor_ioMemoryCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_ioMemoryCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_ioMemory *Empty __attribute__((swift_name("Empty")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioBuffer.Companion")))
@interface ScmSdkKtor_ioBufferCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_ioBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_ioBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) int32_t ReservedSize __attribute__((swift_name("ReservedSize")));
@end

__attribute__((swift_name("Ktor_ioObjectPool")))
@protocol ScmSdkKtor_ioObjectPool <ScmSdkKtor_ioCloseable>
@required
- (id)borrow __attribute__((swift_name("borrow()")));
- (void)dispose __attribute__((swift_name("dispose()")));
- (void)recycleInstance:(id)instance __attribute__((swift_name("recycle(instance:)")));
@property (readonly) int32_t capacity __attribute__((swift_name("capacity")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioChunkBuffer.Companion")))
@interface ScmSdkKtor_ioChunkBufferCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_ioChunkBufferCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_ioChunkBuffer *Empty __attribute__((swift_name("Empty")));
@property (readonly) id<ScmSdkKtor_ioObjectPool> EmptyPool __attribute__((swift_name("EmptyPool")));
@property (readonly) id<ScmSdkKtor_ioObjectPool> Pool __attribute__((swift_name("Pool")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioInput.Companion")))
@interface ScmSdkKtor_ioInputCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_ioInputCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_ioByteReadPacket.Companion")))
@interface ScmSdkKtor_ioByteReadPacketCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKtor_ioByteReadPacketCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) ScmSdkKtor_ioByteReadPacket *Empty __attribute__((swift_name("Empty")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection")))
@interface ScmSdkKotlinKTypeProjection : ScmSdkBase
- (instancetype)initWithVariance:(ScmSdkKotlinKVariance * _Nullable)variance type:(id<ScmSdkKotlinKType> _Nullable)type __attribute__((swift_name("init(variance:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) ScmSdkKotlinKTypeProjectionCompanion *companion __attribute__((swift_name("companion")));
- (ScmSdkKotlinKVariance * _Nullable)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (id<ScmSdkKotlinKType> _Nullable)component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKotlinKTypeProjection *)doCopyVariance:(ScmSdkKotlinKVariance * _Nullable)variance type:(id<ScmSdkKotlinKType> _Nullable)type __attribute__((swift_name("doCopy(variance:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<ScmSdkKotlinKType> _Nullable type __attribute__((swift_name("type")));
@property (readonly) ScmSdkKotlinKVariance * _Nullable variance __attribute__((swift_name("variance")));
@end

__attribute__((swift_name("Kodein_diDIContainerBuilder")))
@protocol ScmSdkKodein_diDIContainerBuilder
@required
- (void)bindKey:(ScmSdkKodein_diDIKey<id, id, id> *)key binding:(id<ScmSdkKodein_diDIBinding>)binding fromModule:(NSString * _Nullable)fromModule overrides:(ScmSdkBoolean * _Nullable)overrides __attribute__((swift_name("bind(key:binding:fromModule:overrides:)")));
- (void)extendContainer:(id<ScmSdkKodein_diDIContainer>)container allowOverride:(BOOL)allowOverride copy:(NSSet<ScmSdkKodein_diDIKey<id, id, id> *> *)copy __attribute__((swift_name("extend(container:allowOverride:copy:)")));
- (void)onReadyCb:(void (^)(id<ScmSdkKodein_diDirectDI>))cb __attribute__((swift_name("onReady(cb:)")));
- (void)registerContextTranslatorTranslator:(id<ScmSdkKodein_diContextTranslator>)translator __attribute__((swift_name("registerContextTranslator(translator:)")));
- (id<ScmSdkKodein_diDIContainerBuilder>)subBuilderAllowOverride:(BOOL)allowOverride silentOverride:(BOOL)silentOverride __attribute__((swift_name("subBuilder(allowOverride:silentOverride:)")));
@end

__attribute__((swift_name("Kodein_diScopeCloseable")))
@protocol ScmSdkKodein_diScopeCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("Kodein_diScopeRegistry")))
@interface ScmSdkKodein_diScopeRegistry : ScmSdkBase <ScmSdkKodein_diScopeCloseable>
- (void)clear __attribute__((swift_name("clear()")));
- (void)close __attribute__((swift_name("close()")));
- (id)getOrCreateKey:(id)key sync:(BOOL)sync creator:(ScmSdkKodein_diReference<id> *(^)(void))creator __attribute__((swift_name("getOrCreate(key:sync:creator:)")));
- (id _Nullable (^ _Nullable)(void))getOrNullKey_:(id)key __attribute__((swift_name("getOrNull(key_:)")));
- (void)removeKey__:(id)key __attribute__((swift_name("remove(key__:)")));
- (id)values __attribute__((swift_name("values()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreAtomicDesc")))
@interface ScmSdkKotlinx_coroutines_coreAtomicDesc : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(ScmSdkKotlinx_coroutines_coreAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));
- (id _Nullable)prepareOp:(ScmSdkKotlinx_coroutines_coreAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));
@property ScmSdkKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreOpDescriptor")))
@interface ScmSdkKotlinx_coroutines_coreOpDescriptor : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (BOOL)isEarlierThanThat:(ScmSdkKotlinx_coroutines_coreOpDescriptor *)that __attribute__((swift_name("isEarlierThan(that:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinx_coroutines_coreAtomicOp<id> * _Nullable atomicOp __attribute__((swift_name("atomicOp")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode.PrepareOp")))
@interface ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp : ScmSdkKotlinx_coroutines_coreOpDescriptor
- (instancetype)initWithAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next desc:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc *)desc __attribute__((swift_name("init(affected:next:desc:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
- (void)finishPrepare __attribute__((swift_name("finishPrepare()")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *affected __attribute__((swift_name("affected")));
@property (readonly) ScmSdkKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc *desc __attribute__((swift_name("desc")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *next __attribute__((swift_name("next")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKVariance")))
@interface ScmSdkKotlinKVariance : ScmSdkKotlinEnum<ScmSdkKotlinKVariance *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) ScmSdkKotlinKVariance *invariant __attribute__((swift_name("invariant")));
@property (class, readonly) ScmSdkKotlinKVariance *in __attribute__((swift_name("in")));
@property (class, readonly) ScmSdkKotlinKVariance *out __attribute__((swift_name("out")));
+ (ScmSdkKotlinArray<ScmSdkKotlinKVariance *> *)values __attribute__((swift_name("values()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection.Companion")))
@interface ScmSdkKotlinKTypeProjectionCompanion : ScmSdkBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) ScmSdkKotlinKTypeProjectionCompanion *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (ScmSdkKotlinKTypeProjection *)contravariantType:(id<ScmSdkKotlinKType>)type __attribute__((swift_name("contravariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (ScmSdkKotlinKTypeProjection *)covariantType:(id<ScmSdkKotlinKType>)type __attribute__((swift_name("covariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (ScmSdkKotlinKTypeProjection *)invariantType:(id<ScmSdkKotlinKType>)type __attribute__((swift_name("invariant(type:)")));
@property (readonly) ScmSdkKotlinKTypeProjection *STAR __attribute__((swift_name("STAR")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kodein_diReference")))
@interface ScmSdkKodein_diReference<__covariant T> : ScmSdkBase
- (instancetype)initWithCurrent:(T)current next:(T _Nullable (^)(void))next __attribute__((swift_name("init(current:next:)"))) __attribute__((objc_designated_initializer));
- (T)component1 __attribute__((swift_name("component1()"))) __attribute__((deprecated("use corresponding property instead")));
- (T _Nullable (^)(void))component2 __attribute__((swift_name("component2()"))) __attribute__((deprecated("use corresponding property instead")));
- (ScmSdkKodein_diReference<T> *)doCopyCurrent:(T)current next:(T _Nullable (^)(void))next __attribute__((swift_name("doCopy(current:next:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T current __attribute__((swift_name("current")));
@property (readonly) T _Nullable (^next)(void) __attribute__((swift_name("next")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreAtomicOp")))
@interface ScmSdkKotlinx_coroutines_coreAtomicOp<__contravariant T> : ScmSdkKotlinx_coroutines_coreOpDescriptor
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeAffected:(T _Nullable)affected failure:(id _Nullable)failure __attribute__((swift_name("complete(affected:failure:)")));
- (id _Nullable)decideDecision:(id _Nullable)decision __attribute__((swift_name("decide(decision:)")));
- (id _Nullable)performAffected:(id _Nullable)affected __attribute__((swift_name("perform(affected:)")));
- (id _Nullable)prepareAffected:(T _Nullable)affected __attribute__((swift_name("prepare(affected:)")));
@property (readonly) ScmSdkKotlinx_coroutines_coreAtomicOp<id> *atomicOp __attribute__((swift_name("atomicOp")));
@property (readonly) id _Nullable consensus __attribute__((swift_name("consensus")));
@property (readonly) BOOL isDecided __attribute__((swift_name("isDecided")));
@property (readonly) int64_t opSequence __attribute__((swift_name("opSequence")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode")))
@interface ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode : ScmSdkBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)addLastNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("addLast(node:)")));
- (BOOL)addLastIfNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node condition:(ScmSdkBoolean *(^)(void))condition __attribute__((swift_name("addLastIf(node:condition:)")));
- (BOOL)addLastIfPrevNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node predicate:(ScmSdkBoolean *(^)(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *))predicate __attribute__((swift_name("addLastIfPrev(node:predicate:)")));
- (BOOL)addLastIfPrevAndIfNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node predicate:(ScmSdkBoolean *(^)(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *))predicate condition:(ScmSdkBoolean *(^)(void))condition __attribute__((swift_name("addLastIfPrevAndIf(node:predicate:condition:)")));
- (BOOL)addOneIfEmptyNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("addOneIfEmpty(node:)")));
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *> *)describeAddLastNode:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)node __attribute__((swift_name("describeAddLast(node:)")));
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *> *)describeRemoveFirst __attribute__((swift_name("describeRemoveFirst()")));
- (void)helpRemove __attribute__((swift_name("helpRemove()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)nextIfRemoved __attribute__((swift_name("nextIfRemoved()")));
- (BOOL)remove __attribute__((swift_name("remove()")));
- (id _Nullable)removeFirstIfIsInstanceOfOrPeekIfPredicate:(ScmSdkBoolean *(^)(id _Nullable))predicate __attribute__((swift_name("removeFirstIfIsInstanceOfOrPeekIf(predicate:)")));
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)removeFirstOrNull __attribute__((swift_name("removeFirstOrNull()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL isRemoved __attribute__((swift_name("isRemoved")));
@property (readonly, getter=next__) id next __attribute__((swift_name("next")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *nextNode __attribute__((swift_name("nextNode")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *prevNode __attribute__((swift_name("prevNode")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNode.AbstractAtomicDesc")))
@interface ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc : ScmSdkKotlinx_coroutines_coreAtomicDesc
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)completeOp:(ScmSdkKotlinx_coroutines_coreAtomicOp<id> *)op failure:(id _Nullable)failure __attribute__((swift_name("complete(op:failure:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("failure(affected:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));
- (id _Nullable)onPreparePrepareOp:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("onPrepare(prepareOp:)")));
- (void)onRemovedAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("onRemoved(affected:)")));
- (id _Nullable)prepareOp:(ScmSdkKotlinx_coroutines_coreAtomicOp<id> *)op __attribute__((swift_name("prepare(op:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(ScmSdkKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc")))
@interface ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAddLastDesc<T> : ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)queue node:(T)node __attribute__((swift_name("init(queue:node:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(ScmSdkKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) T node __attribute__((swift_name("node")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *originalNext __attribute__((swift_name("originalNext")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc")))
@interface ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeRemoveFirstDesc<T> : ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodeAbstractAtomicDesc
- (instancetype)initWithQueue:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)queue __attribute__((swift_name("init(queue:)"))) __attribute__((objc_designated_initializer));
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (id _Nullable)failureAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected __attribute__((swift_name("failure(affected:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)finishOnSuccessAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("finishOnSuccess(affected:next:)")));
- (void)finishPreparePrepareOp:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNodePrepareOp *)prepareOp __attribute__((swift_name("finishPrepare(prepareOp:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (BOOL)retryAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(id)next __attribute__((swift_name("retry(affected:next:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable)takeAffectedNodeOp:(ScmSdkKotlinx_coroutines_coreOpDescriptor *)op __attribute__((swift_name("takeAffectedNode(op:)")));
- (id)updatedNextAffected:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)affected next:(ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *)next __attribute__((swift_name("updatedNext(affected:next:)")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable affectedNode __attribute__((swift_name("affectedNode")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode * _Nullable originalNext __attribute__((swift_name("originalNext")));
@property (readonly) ScmSdkKotlinx_coroutines_coreLockFreeLinkedListNode *queue __attribute__((swift_name("queue")));
@property (readonly) T _Nullable result __attribute__((swift_name("result")));
@end

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
